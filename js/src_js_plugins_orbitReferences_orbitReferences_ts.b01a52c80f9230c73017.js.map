{"version":3,"file":"src_js_plugins_orbitReferences_orbitReferences_ts.b01a52c80f9230c73017.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,4BAA4B,SAAI,IAAI,SAAI;AACxC,iCAAiC,uCAAuC,YAAY,KAAK,OAAO;AAChG;AACA;AACuD;AACP;AACA;AACzB;AACvB;AACO;AACP;AACA,IAAI,0EAAqB;AACzB;AACA;AACA,0BAA0B,yBAAyB;AACnD,KAAK;AACL;AACO;AACP;AACA,IAAI,0EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA,QAAQ,6CAAC,+BAA+B,sEAAiB;AACzD,QAAQ,6CAAC;AACT;AACA;AACA;AACO;AACP,aAAa,0EAAqB;AAClC;AACA;AACA,yDAAyD;AACzD;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA,mCAAmC,0DAAO;AAC1C;AACA;AACA;AACA;AACA,oCAAoC,0DAAO;AAC3C;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,gBAAgB,+DAAc;AAC9B;AACA;AACA;AACA;AACA;AACA,qBAAqB,+DAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://keeptrack.space/./src/js/plugins/orbitReferences/orbitReferences.ts"],"sourcesContent":["var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nimport { keepTrackApi } from '@app/js/api/externalApi';\nimport { RAD2DEG } from '@app/js/lib/constants';\nimport { stringPad } from '@app/js/lib/helpers';\nimport $ from 'jquery';\nvar doOnce = false;\nexport var init = function () {\n    // Add HTML\n    keepTrackApi.register({\n        method: 'uiManagerInit',\n        cbName: 'orbitReferences',\n        cb: function () { return uiManagerInit(); },\n    });\n};\nexport var uiManagerInit = function () {\n    // Register orbital element data\n    keepTrackApi.register({\n        method: 'selectSatData',\n        cbName: 'orbitReferences',\n        cb: selectSatData,\n    });\n};\nexport var selectSatData = function () {\n    if (!doOnce) {\n        $('#sat-info-top-links').append(keepTrackApi.html(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n        <div id=\\\"orbit-references-link\\\" class=\\\"link sat-infobox-links\\\">Generate Orbit Reference Satellites...</div>\\n      \"], [\"\\n        <div id=\\\"orbit-references-link\\\" class=\\\"link sat-infobox-links\\\">Generate Orbit Reference Satellites...</div>\\n      \"]))));\n        $('#orbit-references-link').on('click', orbitReferencesLinkClick);\n        doOnce = true;\n    }\n};\nexport var orbitReferencesLinkClick = function () {\n    var _a = keepTrackApi.programs, satSet = _a.satSet, objectManager = _a.objectManager, uiManager = _a.uiManager, satellite = _a.satellite;\n    // Determine which satellite is selected\n    var sat = satSet.getSat(objectManager.selectedSat);\n    var satNum = objectManager.analSatSet[0].id + 20000; // Find Analyst satellite 10,000\n    var searchStr = '';\n    // Add the satellites\n    for (var i = 0; i < 360; i++) {\n        var satrec = satellite.twoline2satrec(sat.TLE1, sat.TLE2);\n        var ecen = satrec.ecco.toPrecision(7).substr(2, 7);\n        var rasc = (satrec.nodeo * RAD2DEG).toPrecision(7);\n        var rascA = rasc.split('.');\n        rascA[0] = rascA[0].substr(-3, 3);\n        rascA[1] = rascA[1].substr(0, 4);\n        rasc = (rascA[0] + '.' + rascA[1]).toString();\n        var argPe = (satrec.argpo * RAD2DEG).toPrecision(7);\n        var argPeA = argPe.split('.');\n        argPeA[0] = argPeA[0].substr(-3, 3);\n        argPeA[1] = argPeA[1].substr(0, 4);\n        argPe = (argPeA[0] + '.' + argPeA[1]).toString();\n        var meana = i.toPrecision(10); // sat.TLE2.substr(44 - 1, 7 + 1);\n        var meanaA = meana.split('.');\n        meanaA[0] = meanaA[0].substr(-3, 3);\n        meanaA[1] = meanaA[1].substr(0, 4);\n        meana = (meanaA[0] + '.' + meanaA[1]).toString();\n        meana = stringPad.pad0(meana, 8);\n        var inc = sat.TLE2.substr(8, 8);\n        var meanmo = sat.TLE2.substr(52, 10);\n        var epochyr = sat.TLE1.substr(18, 2);\n        var epochday = sat.TLE1.substr(20, 12);\n        var intl = sat.TLE1.substr(9, 8);\n        var sccNum = stringPad.pad0(sat.TLE1.substr(2, 5).trim(), 5);\n        var _b = satellite.createTle(sat, inc, meanmo, rasc, argPe, meana, ecen, epochyr, epochday, intl, sccNum), TLE1 = _b.TLE1, TLE2 = _b.TLE2;\n        searchStr += satSet.insertNewAnalystSatellite(TLE1, TLE2, satNum + i, (100000 + i).toString()).SCC_NUM.toString();\n        if (i !== 359)\n            searchStr += ',';\n    }\n    uiManager.doSearch(searchStr);\n};\nvar templateObject_1;\n"],"names":[],"sourceRoot":""}