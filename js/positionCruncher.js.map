{"version":3,"file":"positionCruncher.js","mappings":"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,eAAe,MAA8B,GAAG,CAAqB;AACrE,UAAU,qBAAM,oBAAoB,qBAAM;;AAE1C;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,gBAAgB,IAAI,QAAQ,KAAK,KAAK,KAAK;AAC3C,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA,YAAY,IAAI,QAAQ,KAAK,KAAK,KAAK;AACvC,iBAAiB,KAAK;AACtB;AACA;AACA;;AAEA;AACA;AACA,YAAY,IAAI;AAChB;AACA,CAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB,uBAAuB;AACvB,kBAAkB;AAClB;AACA;AACA;AACA;AACA,2CAA2C,SAAS,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gDAAgD;AACvF,oCAAoC,qBAAqB;AACzD,qCAAqC,wBAAwB;AAC7D;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW,OAAO;AACtC;AACA;AACA;AACA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,gDAAgD,+BAA+B;AAC/E;AACA;AACA,oBAAoB,WAAW,OAAO,UAAU,eAAe,4BAA4B;AAC3F;AACA;AACA;AACA,mBAAmB;AACnB;AACA,sBAAsB,0BAA0B,0BAA0B,aAAa,aAAa,kBAAkB;AACtH,mBAAmB;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC,oCAAoC;AACpC;AACA,gBAAgB,WAAW,OAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC,oCAAoC;AACpC;AACA,gBAAgB,WAAW,OAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA,gBAAgB,IAAI,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB,oBAAoB;AACpB,eAAe;AACf,iCAAiC;AACjC,wBAAwB;AACxB,+BAA+B;AAC/B;AACA,gBAAgB,IAAI;AACpB,oBAAoB,IAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+DAA+D;AAC/D,yCAAyC,YAAY,UAAU,eAAe;AAC9E,+DAA+D;AAC/D,kDAAkD;AAClD,6BAA6B;AAC7B,sBAAsB;AACtB,mCAAmC;AACnC,4BAA4B,KAAK,MAAM;AACvC,kEAAkE;AAClE,kBAAkB;AAClB,8BAA8B;AAC9B,cAAc;AACd,wBAAwB,KAAK,QAAQ;AACrC,2BAA2B;AAC3B,0BAA0B;AAC1B,6BAA6B;AAC7B,0BAA0B;AAC1B,cAAc;AACd,0BAA0B;AAC1B,2BAA2B;AAC3B;AACA,cAAc;AACd,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,sBAAsB,YAAY;AAClC,uBAAuB,OAAO,OAAO;AACrC,2BAA2B;AAC3B,0BAA0B;AAC1B,cAAc;AACd,0BAA0B;AAC1B;AACA;;;AAGA;AACA;AACA,yDAAyD;AACzD;AACA,yBAAyB;AACzB,YAAY,IAAI;AAChB,4BAA4B;AAC5B,uCAAuC;AACvC,eAAe;AACf;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;AACA;AACA,kBAAkB,KAAK,QAAQ,cAAc;AAC7C,qBAAqB;AACrB;AACA;AACA,cAAc,KAAK,OAAO;AAC1B;AACA;;;AAGA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA,cAAc,KAAK;AACnB;AACA;AACA,kBAAkB,KAAK;AACvB;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,KAAK,OAAO;AAC1B;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA,cAAc,KAAK;AACnB;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C;AAC1C;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE,kDAAkD;AAClD,6BAA6B;AAC7B,uDAAuD;AACvD,mCAAmC;AACnC,4BAA4B,KAAK,6DAA6D;AAC9F,4BAA4B;AAC5B,cAAc;AACd;AACA,wBAAwB,OAAO,MAAM;AACrC;AACA,cAAc;AACd,wBAAwB;AACxB;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA,wCAAwC;AACxC,uDAAuD;AACvD;AACA,wBAAwB,OAAO,MAAM;AACrC;AACA,cAAc;AACd,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA,cAAc,KAAK,OAAO;AAC1B,CAAC;AACD;AACA,2BAA2B;AAC3B;AACA,cAAc,KAAK,OAAO;AAC1B;AACA,CAAC;AACD;AACA,2BAA2B,MAAM;AACjC;AACA,cAAc,KAAK,OAAO;AAC1B,CAAC;AACD;AACA,2BAA2B;AAC3B;AACA,cAAc,KAAK,OAAO;AAC1B;AACA,CAAC;;AAED,uDAAuD;AACvD,uDAAuD;AACvD,4BAA4B,8CAA8C;AAC1E,4BAA4B,8CAA8C,yBAAyB;;AAEnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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ACzC;AACA;AACA;AACA;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA,sCAAsC;;AAEtC,oCAAoC;;AAEpC;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY,KAAK,OAAO;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,KAAK,OAAO;AAChC;AACA;AACA,gBAAgB,KAAK,OAAO;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,KAAK,OAAO;AACnD,gBAAgB,KAAK,OAAO;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,YAAY,IAAI;AAChB,YAAY,IAAI;AAChB;AACA,YAAY,IAAI;AAChB;AACA,YAAY,IAAI;AAChB;AACA,kBAAkB,OAAO;AACzB;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,YAAY;AAC1C,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,6CAA6C,uBAAuB;AACpE;AACA,sBAAsB;AACtB,wBAAwB;AACxB,8CAA8C;AAC9C,gBAAgB;AAChB,4CAA4C;AAC5C,cAAc;AACd,sBAAsB;AACtB,4CAA4C;AAC5C,cAAc;AACd,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,gCAAgC;AAChC;AACA,0BAA0B;AAC1B;AACA,sBAAsB;AACtB,qBAAqB;AACrB,cAAc;AACd,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA,4FAA4F;AAC5F;AACA,mCAAmC;AACnC,oDAAoD;AACpD;AACA,wCAAwC;AACxC,iDAAiD;AACjD,+BAA+B;AAC/B;AACA;AACA,mEAAmE;AACnE;AACA;AACA,kDAAkD;AAClD;AACA,gDAAgD;AAChD,oFAAoF;AACpF,+BAA+B;AAC/B;AACA,gDAAgD;AAChD,wEAAwE;AACxE,wDAAwD;AACxD;AACA,mCAAmC;AACnC,sCAAsC;AACtC,yCAAyC;AACzC;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB,uBAAuB;AACvB;AACA;AACA,kBAAkB,IAAI;AACtB,2BAA2B;AAC3B;AACA,yBAAyB,KAAK;AAC9B;AACA;AACA,0BAA0B,eAAe;AACzC,0BAA0B,eAAe;AACzC,0BAA0B,eAAe;AACzC,0BAA0B,eAAe;AACzC;AACA,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;AACrB,kBAAkB,IAAI;AACtB,yBAAyB;AACzB;AACA;AACA;AACA,gBAAgB,IAAI;AACpB,yBAAyB;AACzB;AACA;AACA;AACA,kBAAkB,IAAI;AACtB,yBAAyB;AACzB,yBAAyB;AACzB,yBAAyB;AACzB,sBAAsB,IAAI;AAC1B,6BAA6B;AAC7B;AACA;AACA;AACA,oBAAoB,IAAI;AACxB,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB,qBAAqB;AACrB,kBAAkB,KAAK;AACvB,yBAAyB;AACzB,2BAA2B;AAC3B,sBAAsB,KAAK;AAC3B,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM,OAAO;AAC1B;AACA;AACA,iBAAiB,MAAM,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM,OAAO;AAC1B;AACA,kBAAkB,qCAAqC;AACvD,iBAAiB,MAAM,OAAO;AAC9B,MAAM;AACN,iBAAiB,MAAM,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qCAAqC;AACvD;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2CAA2C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA,0CAA0C;AAC1C;AACA,YAAY,MAAM;AAClB;AACA,kBAAkB,IAAI,OAAO;AAC7B;AACA;AACA;AACA;AACA,sBAAsB,IAAI,OAAO,WAAW,eAAe,QAAQ,IAAI;AACvE;AACA;AACA,oBAAoB,IAAI,OAAO,WAAW,WAAW,UAAU,IAAI;AACnE;AACA,sBAAsB,IAAI;AAC1B;AACA,sBAAsB,IAAI,OAAO,WAAW,eAAe,QAAQ,IAAI;AACvE;AACA;AACA,YAAY;AACZ;;AAEA;;AAEA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA,eAAe,aAAa;AAC5B,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,wBAAwB,KAAK,OAAO;AACpC;AACA,wBAAwB,KAAK,OAAO;AACpC;AACA,0BAA0B,IAAI,OAAO;AACrC;AACA,0BAA0B,IAAI,OAAO;AACrC,wBAAwB;AACxB;AACA;AACA,yBAAyB;AACzB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI,OAAO,WAAW,WAAW,QAAQ,IAAI;AAC7D;AACA;AACA,gBAAgB,IAAI,OAAO,WAAW,WAAW,QAAQ,IAAI;AAC7D;AACA;AACA,gBAAgB,IAAI,OAAO,WAAW,WAAW,QAAQ,IAAI;AAC7D;AACA,gBAAgB,MAAM;AACtB,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,4BAA4B,KAAK,OAAO;AACxC;AACA,4BAA4B,KAAK,OAAO;AACxC;AACA,8BAA8B,IAAI,OAAO;AACzC;AACA,8BAA8B,IAAI,OAAO;AACzC,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,sBAAsB,KAAK,OAAO;AAClC;AACA;AACA;AACA,sBAAsB,KAAK,OAAO,WAAW,eAAe,QAAQ,IAAI;AACxE;AACA;AACA,oBAAoB,IAAI,OAAO,WAAW,WAAW,UAAU,KAAK;AACpE;AACA,sBAAsB,KAAK;AAC3B;AACA,sBAAsB,KAAK,OAAO,WAAW,eAAe,QAAQ,IAAI;AACxE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA,iBAAiB,KAAK,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA,sBAAsB,OAAO,OAAO;AACpC;AACA,sBAAsB,OAAO,OAAO;AACpC,sBAAsB,OAAO,OAAO,WAAW;AAC/C,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA,iBAAiB,OAAO,OAAO,kBAAkB,eAAe;AAChE;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK,OAAO;AACzB,sBAAsB,OAAO,OAAO;AACpC,aAAa,OAAO,OAAO,iBAAiB;AAC5C,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA,iBAAiB,KAAK,OAAO,wBAAwB,eAAe;AACpE;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,YAAY,IAAI;AAChB;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA;AACA;AACA,uBAAuB,WAAW,aAAa;AAC/C,uBAAuB,cAAc,aAAa;AAClD;AACA;AACA;AACA;AACA,sBAAsB,OAAO,OAAO;AACpC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK,OAAO;AACzB,sBAAsB,OAAO,OAAO,WAAW;AAC/C,aAAa,OAAO,OAAO,WAAW;AACtC,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA,iBAAiB,KAAK,OAAO,kBAAkB,eAAe;AAC9D;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,YAAY,IAAI;AAChB;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA;AACA;AACA,uBAAuB,WAAW,aAAa;AAC/C,uBAAuB,cAAc,aAAa;AAClD;AACA;AACA;AACA;AACA,sBAAsB,OAAO,OAAO;AACpC,YAAY;AACZ;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA,mCAAmC;AACnC,qCAAqC;AACrC,mCAAmC;AACnC,qCAAqC;AACrC;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,qDAAqD,WAAW;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA,0BAA0B,OAAO;AACjC,0BAA0B,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD,iDAAiD;AACjD,iFAAiF;AACjF,6DAA6D;AAC7D,+DAA+D;AAC/D,0BAA0B;AAC1B,iCAAiC;AACjC;AACA,qBAAqB,IAAI,MAAM;AAC/B,2BAA2B,aAAa;AACxC,wBAAwB,OAAO,MAAM;AACrC,2BAA2B;AAC3B,0BAA0B;AAC1B,2BAA2B;AAC3B,qBAAqB;AACrB,gBAAgB;AAChB,2BAA2B,aAAa;AACxC,wBAAwB,OAAO,MAAM;AACrC,2BAA2B;AAC3B,8BAA8B;AAC9B,iCAAiC;AACjC,6BAA6B;AAC7B,uBAAuB;AACvB,kBAAkB;AAClB,gBAAgB;AAChB,2BAA2B;AAC3B,2BAA2B,aAAa;AACxC,wBAAwB,OAAO,sBAAsB;AACrD,2BAA2B,aAAa;AACxC,wBAAwB,OAAO,MAAM;AACrC,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B;AACA,4BAA4B;AAC5B,gBAAgB;AAChB,2BAA2B,aAAa;AACxC,wBAAwB,OAAO,kBAAkB;AACjD,2BAA2B,aAAa;AACxC,wBAAwB,OAAO,kBAAkB;AACjD,cAAc;AACd,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA,wDAAwD;AACxD,wDAAwD;AACxD,8BAA8B;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB,YAAY,IAAI;AAChB;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qCAAqC;AACrC;AACA,mCAAmC;AACnC,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC,mCAAmC;AACnC;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,KAAK;AACnB;AACA,qBAAqB;AACrB,sBAAsB;AACtB;AACA,gBAAgB,aAAa;AAC7B;AACA;;AAEA,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,KAAK;AACvC;AACA,4BAA4B,KAAK;AACjC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM,OAAO;AACzB,cAAc,KAAK,OAAO;AAC1B;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI,OAAO,UAAU;AACjC,YAAY,MAAM;AAClB;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA,wBAAwB,KAAK,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,YAAY,IAAI;AAChB;AACA;AACA;AACA,gBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,YAAY,SAAS,aAAa,SAAS;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,MAAM,aAAa,MAAM;AACrC;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,IAAI,OAAO;AACvB;AACA;AACA,YAAY,IAAI,OAAO;AACvB;AACA;;AAEA;;AAEA,kDAAkD,YAAY,cAAc,cAAc,cAAc;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,KAAK,OAAO,qBAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA,MAAM;AACN,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,qBAAqB,aAAa,aAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB,yCAAyC,IAAI;AAC7C;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB,yCAAyC,IAAI;AAC7C;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC;AACzC,qCAAqC;AACrC,0CAA0C,yBAAyB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,+BAA+B,gCAAgC;AAC5G,iCAAiC,sCAAsC;AACvE;AACA,mCAAmC,8CAA8C;AACjF;AACA,0BAA0B,oCAAoC;AAC9D;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gDAAgD;AAC5E,2BAA2B,0CAA0C;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS,WAAW,SAAS,mBAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oBAAoB,OAAO;AAC3B;AACA;;AAEA,oBAAoB,OAAO;AAC3B;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA,oBAAoB,OAAO;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA,gBAAgB,IAAI;AACpB,sBAAsB;AACtB,sBAAsB,OAAO;AAC7B;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA,kBAAkB,OAAO;AACzB;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA,mCAAmC;AACnC;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,sBAAsB,OAAO,qBAAqB,mBAAmB;AACrE,UAAU;AACV;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,qBAAqB,OAAO;AAC5B,aAAa;AACb;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA,sBAAsB;AACtB,YAAY,IAAI;AAChB;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA,wBAAwB;AACxB,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gCAAgC;AAC1E,uCAAuC,cAAc,WAAW,MAAM;AACtE,uCAAuC,cAAc,WAAW,MAAM;AACtE,uCAAuC,aAAa,WAAW,MAAM;AACrE;AACA;AACA;AACA;AACA,6CAA6C,iBAAiB,WAAW,6BAA6B;AACtG;AACA,oBAAoB,WAAW;AAC/B,iCAAiC,2BAA2B;AAC5D;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,0CAA0C;AAC1C,0CAA0C;AAC1C,0CAA0C;AAC1C;AACA,0CAA0C;AAC1C,0CAA0C;AAC1C;AACA,0CAA0C;AAC1C,0CAA0C;AAC1C;AACA,0CAA0C;AAC1C,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;;AAEA;AACA;AACA;AACA,uBAAuB;;AAEvB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC;AACA,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA,sBAAsB;AACtB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,cAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA,sCAAsC;AACtC;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA,gCAAgC;AAChC;AACA,YAAY,IAAI;AAChB;AACA;;AAEA;AACA;;AAEA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,gBAAgB,QAAQ;AACxB;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,wBAAwB,UAAU;AAClC;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN,gBAAgB,QAAQ;AACxB;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,oBAAoB,QAAQ;AAC5B;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,QAAQ;AACxB;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,WAAW;AAC/B;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA,2BAA2B,QAAQ;AACnC,wBAAwB,QAAQ;AAChC;AACA;AACA;;AAEA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,4BAA4B,WAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,gBAAgB,8CAA8C;AAC9D;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA,cAAc,OAAO;AACrB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA;AACA,cAAc,OAAO;AACrB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,cAAc,OAAO;AACrB;AACA,cAAc,OAAO;AACrB;AACA,aAAa,OAAO;AACpB;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA,wBAAwB,mBAAmB;AAC3C,IAAI;AACJ;AACA,aAAa,SAAS;AACtB;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,MAAM;AACN;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,YAAY;AACtB;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW,OAAO,gBAAgB,mBAAmB;AACjE,YAAY,WAAW,OAAO,gBAAgB,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACv0IA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD,uEAAuE;;AAEvE;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,qBAAqB;;AAErB,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;;AAExsCAAsC;;AAEtC;AACA;AACA;AACA,wBAAwB;;AAExB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8HAA8H;;AAE9H,yCAAyC;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,MAAM;AACN;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA,yCAAyC;;AAEzC;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,4DAA4D;;AAE5D;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA,mGAAmG;;AAEnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wFAAwF;;AAExF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzuBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB,kCAAkC;AAClC;;AAEA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC;;AAEvC;AACA;;AAEA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC;;AAErC;AACA;AACA,MAAM;AACN;AACA;;AAEA,yCAAyC;;AAEzC;AACA;AACA;AACA,wCAAwC;;AAExoCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kKAAkK;;AAElK;AACA;AACA;AACA;AACA;AACA,sDAAsD;;AAEtD,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA,kCAAkC;;AAElC,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC,SAAS;;AAElD;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sEAAsE,aAAa;AACnF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;;AAEA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;;AAEA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;;AAEA;AACA;AACA;AACA;AACA,oEAAoE;AACpnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEqP;;;;;;;;;;;;;;;AC/+F9O;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BpC;AACA;AACA;AACA;AACA;AACP;AACA;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,kCAAkC;AAClC,8BAA8B;AAC9B,8BAA8B;AAC9B,mCAAmC;;;;;;;;;;;;;;;ACriBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,igBAAigB,QAAQ;AACzgB;AACA;AACA;AACA;AACA,iBAAiB;AACjiBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;;;;;;;;;;;;;;;;;;;;ACp2B2C;AACA;AACjD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,qCAAqC,gEAAoB;AACzD;AACA;AACA;AACA;AACA;AACO;AACP,oBAAoB,oEAAU;AAC9B;AACA;AACA;AACA;AACO;AACP,oCAAoC;AACpC;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9B0C;AACkB;AACqB;AAClC;AACK;AACX;AACzC;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uDAAuB;AACvC;AACA;AACA;AACA;AACA;AACA,kBAAkB,mDAAO;AACzB,kBAAkB,mDAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP,kBAAkB,8DAAW,KAAK;AAClC,gBAAgB,sEAAmB;AACnC,iBAAiB,sEAAmB,8BAA8B,mDAAO,gCAAgC,mDAAO;AAChH;AACA,aAAa,8EAA2B;AACxC,gBAAgB,8EAA2B;AAC3C,6BAA6B,mDAAO;AACpC,+BAA+B,mDAAO;AACtC,qCAAqC,mDAAO;AAC5C;AACA,gBAAgB,8DAAW,CAAC,uEAAoB;AAChD,gBAAgB,sEAAmB,aAAa,8CAAE;AAClD;AACA;AACA,mDAAmD;AACnD;AACA,mBAAmB,kDAAkB;AACrC,iCAAiC,iDAAS,qBAAqB,yEAAuB,oBAAoB,0EAAwB;AAClI;AACA;AACA;AACO;AACP,yCAAyC,mDAAO;AAChD,6CAA6C,mDAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,cAAc,6DAAI;AAClB;AACA,mCAAmC,gEAAoB;AACvD,iBAAiB,gDAAgB;AACjC;AACA,mBAAmB;AACnB;AACA;AACA;AACA,eAAe,6DAAI;AACnB;AACA,mCAAmC,gEAAoB;AACvD,qBAAqB,gDAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,CAAC;AACM,kFAAkF,mDAAO,oCAAoC,mDAAO;AACpI;AACP;AACA,8CAA8C,yEAAuB;AACrE;AACA,8CAA8C,0EAAwB;AACtE;AACA,8CAA8C,4EAA0B;AACxE;AACA;AACA;;;;;;;;;;;;;;;;;ACxIO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;UCjBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACiD;AACnB;AACY;AACe;AAC2E;AAC/E;AACkG;AAC/D;AACxF;AACA;AACA;AACA,mBAAmB;AACnB,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC,iCAAiC;AACjC,6BAA6B;AAC7B,8BAA8B;AAC9B,0BAA0B;AAC1B;AACA,kCAAkC;AAClC,yCAAyC;AACzC,gCAAgC;AAChC,gCAAgC;AAChC,iBAAiB;AACjB;AACA;AACA,kBAAkB;AAClB,oCAAoC;AACpC;AACA,yBAAyB;AACzB,6BAA6B;AAC7B,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mDAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,wDAAwB;AACrD;AACA;AACA;AACA,yDAAyD;AACzD;AACA,kDAAkD;AAClD,mDAAmD;AACnD,kEAAkE,+CAAG,EAAE;AACvE;AACA;AACA,6FAA6F,2DAAe;AAC5G;AACA,8FAA8F,2DAAe;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wDAAwB;AAC7C;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,uCAAuC;AACvC,wCAAwC;AACxC,4DAA4D,8CAAE,GAAG;AACjE;AACA;AACA;AACA,4EAA4E,2DAAe;AAC3F,6EAA6E,2DAAe;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iDAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,mDAAO;AACrE,6DAA6D,mDAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,iDAAiD,EAAE,kFAAkB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,sEAAoB;AACvG;AACA,YAAY,yEAAa;AACzB;AACA;AACA;AACA,YAAY,yEAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,IAAI,yEAAa;AACjB,IAAI,yEAAa;AACjB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qCAAqC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kDAAkB;AAC1C;AACA,6BAA6B,uDAAuB,mBAAmB;AACvE;AACA,6BAA6B,+EAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,eAAe;AAChD,6EAA6E,mDAAO,0BAA0B,mDAAO;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA,iEAAiE,mDAAO;AACxE,qCAAqC,+EAAe;AACpD;AACA,iCAAiC,yDAAyB;AAC1D,wBAAwB,kFAAkB;AAC1C,8BAA8B,uDAAuB;AACrD;AACA;AACA,sCAAsC;AACtC;AACA;AACA,iCAAiC,uEAAW;AAC5C,wBAAwB,yEAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,iEAAiE,mDAAO;AACxE,qCAAqC,+EAAe;AACpD;AACA,iCAAiC,yDAAyB;AAC1D,wBAAwB,kFAAkB;AAC1C,8BAA8B,uDAAuB;AACrD;AACA;AACA,sCAAsC;AACtC;AACA;AACA,iCAAiC,uEAAW;AAC5C,wBAAwB,yEAAa;AACrC;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,uBAAuB,2EAAuB;AAC9C,cAAc,+EAAe,wBAAwB,mDAAO,0BAA0B,mDAAO,EAAE,yDAAa;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,mDAAO;AAC7E,sEAAsE,mDAAO;AAC7E,sEAAsE,mDAAO;AAC7E,sEAAsE,mDAAO;AAC7E;AACA,QAAQ,yEAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,mDAAO;AACpE,6DAA6D,mDAAO;AACpE,6DAA6D,mDAAO;AACpE,6DAA6D,mDAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kDAAkB,GAAG,kBAAkB;AACzD,QAAQ,uDAAuB,GAAG,kBAAkB;AACpD;AACA;AACA;AACA,mBAAmB,uEAAO,CAAC,yDAAyB;AACpD;AACA;AACO;AACP,8CAA8C,mDAAO;AACrD,8CAA8C,mDAAO;AACrD,8CAA8C,mDAAO;AACrD,8CAA8C,mDAAO;AACrD,qBAAqB,2DAAe,GAAG,kEAAsB,uCAAuC;AACpG,yBAAyB,2DAAe,GAAG,kEAAsB;AACjE,yBAAyB,2DAAe,GAAG,kEAAsB;AACjE;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,SAAS,8CAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,8CAAE;AAC5B,uBAAuB,+CAAG;AAC1B;AACA,yBAAyB,8CAAE;AAC3B,uBAAuB,+CAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iDAAS;AAC3C,yBAAyB,yDAAyB,oBAAoB,kDAAkB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,qBAAqB;AACrB;AACA,kCAAkC,2DAAe,iHAAiH,mDAAO;AACzK;AACA,sBAAsB,yDAAa;AACnC,gBAAgB,mDAAO;AACvB;AACA;AACA,sBAAsB,kDAAW;AACjC;AACA,oKAAoK,mDAAO;AAC3K;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,8BAA8B,iDAAS;AACvC;AACA,4BAA4B,oBAAoB;AAChD;AACA,qCAAqC,yEAAuB;AAC5D;AACA;AACA;AACA;AACA;AACA,gDAAgD,mDAAO;AACvD,+CAA+C,mDAAO;AACtD;AACA;AACA;AACA,sCAAsC,kDAAkB,qBAAqB;AAC7E,qCAAqC,yDAAyB;AAC9D;AACA;AACA;AACA;AACA,mCAAmC,uEAAO;AAC1C;AACA;AACA;AACA;AACA,kCAAkC,yEAAuB;AACzD,+BAA+B,uEAAO;AACtC;AACA;AACA;AACA;AACA;AACO;AACA;AACP,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,QAAQ,yEAAa;AACrB,QAAQ,yEAAa;AACrB;AACA;AACA;AACO;AACP;AACA;AACA;AACA,gDAAgD,iDAAS;AACzD;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+EAAe,cAAc,mDAAO,eAAe,mDAAO;AACtF,QAAQ,yEAAa;AACrB,QAAQ,yEAAa;AACrB;AACA;AACA;AACA;AACA,kCAAkC,iDAAS;AAC3C;AACA;AACA,gCAAgC,iFAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,2CAA2C;AACzG;AACA,+CAA+C,sBAAsB;AACrE,8BAA8B,kDAAkB,CAAC,+EAAe;AAChE;AACA;AACA,qCAAqC,uEAAW;AAChD,4BAA4B,yEAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,2CAA2C;AACzG;AACA,+CAA+C,sBAAsB;AACrE,8BAA8B,kDAAkB,CAAC,+EAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,uEAAW;AAC5C,wBAAwB,yEAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,2CAA2C;AAC7G;AACA,oDAAoD,uBAAuB;AAC3E,kCAAkC,kDAAkB,CAAC,+EAAe;AACpE;AACA,qCAAqC,uEAAW;AAChD,4BAA4B,yEAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,2CAA2C;AAC7G;AACA,oDAAoD,uBAAuB;AAC3E,kCAAkC,kDAAkB,CAAC,+EAAe;AACpE;AACA,qCAAqC,uEAAW;AAChD,4BAA4B,yEAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,2CAA2C;AACzG;AACA,+CAA+C,sBAAsB;AACrE,8BAA8B,kDAAkB,CAAC,+EAAe;AAChE;AACA,iCAAiC,uEAAW;AAC5C,wBAAwB,yEAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,2CAA2C;AACrG,6BAA6B,qCAAqC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kDAAkB,CAAC,+EAAe;AAC5D;AACA;AACA;AACA;AACA;AACA,6BAA6B,uEAAW;AACxC,oBAAoB,yEAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,4CAA4C;AACvG,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kDAAkB,CAAC,+EAAe;AAC5D;AACA;AACA;AACA;AACA;AACA,6BAA6B,uEAAW;AACxC,oBAAoB,yEAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qCAAqC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,sBAAsB;AACjE,0BAA0B,kDAAkB,CAAC,+EAAe;AAC5D;AACA;AACA;AACA;AACA;AACA,6BAA6B,uEAAW;AACxC,oBAAoB,yEAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sCAAsC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,uBAAuB;AACvE,8BAA8B,kDAAkB,CAAC,+EAAe;AAChE;AACA;AACA;AACA;AACA;AACA,iCAAiC,uEAAW;AAC5C,wBAAwB,yEAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,4BAA4B;AACnE,yBAAyB,qCAAqC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kDAAkB,CAAC,+EAAe;AACxD;AACA;AACA;AACA;AACA;AACA,yBAAyB,uEAAW;AACpC,gBAAgB,yEAAa;AAC7B;AACA;AACA;AACA,uCAAuC,4BAA4B;AACnE,yBAAyB,qCAAqC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kDAAkB,CAAC,+EAAe;AACxD;AACA;AACA;AACA;AACA;AACA,yBAAyB,uEAAW;AACpC,gBAAgB,yEAAa;AAC7B;AACA;AACA;AACA;AACA,0DAA0D,2CAA2C;AACrG,6BAA6B,qCAAqC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kDAAkB,CAAC,+EAAe;AAC5D;AACA;AACA;AACA;AACA;AACA,6BAA6B,uEAAW;AACxC,oBAAoB,yEAAa;AACjC;AACA;AACA;AACA;AACA;AACA,uCAAuC,wBAAwB;AAC/D,+CAA+C,0BAA0B;AACzE,0BAA0B,kDAAkB,CAAC,+EAAe;AAC5D;AACA;AACA;AACA;AACA;AACA,6BAA6B,uEAAW;AACxC,oBAAoB,yEAAa;AACjC;AACA;AACA;AACA,uCAAuC,wBAAwB;AAC/D,+CAA+C,0BAA0B;AACzE,0BAA0B,kDAAkB,CAAC,+EAAe;AAC5D;AACA;AACA;AACA;AACA;AACA,6BAA6B,uEAAW;AACxC,oBAAoB,yEAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://keeptrack.space/./src/js/lib/external/dateFormat.js","webpack://keeptrack.space/./src/js/lib/suncalc.js","webpack://keeptrack.space/./node_modules/numeric/numeric-1.2.6.js","webpack://keeptrack.space/./node_modules/satellite.js/dist/satellite.es.js","webpack://keeptrack.space/./src/js/api/SpaceObjectType.ts","webpack://keeptrack.space/./src/js/lib/constants.ts","webpack://keeptrack.space/./src/js/lib/external/meuusjs.ts","webpack://keeptrack.space/./src/js/timeManager/transforms.ts","webpack://keeptrack.space/./src/js/webworker/constants.ts","webpack://keeptrack.space/./src/js/webworker/positionCruncher/calculations.ts","webpack://keeptrack.space/./src/js/webworker/positionCruncher/satCache.ts","webpack://keeptrack.space/webpack/bootstrap","webpack://keeptrack.space/webpack/runtime/compat get default export","webpack://keeptrack.space/webpack/runtime/define property getters","webpack://keeptrack.space/webpack/runtime/global","webpack://keeptrack.space/webpack/runtime/hasOwnProperty shorthand","webpack://keeptrack.space/webpack/runtime/make namespace object","webpack://keeptrack.space/./src/js/webworker/positionCruncher.ts"],"sourcesContent":["/* eslint-disable */\n\n/* */\n\n/*! Date Format 1.2.4\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by:\n * Scott Trenda <scott.trenda.net>\n * Kris Kowal <cixar.com/~kris.kowal/>\n * Theodore Kruczek\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to formats.masks.default.\n */\n\nvar pad = (val, len) => {\n  val = String(val);\n  len = len || 2;\n  while (val.length < len) val = '0' + val;\n  return val;\n};\n\nvar formats = {\n  masks: {\n    // Common Formats\n    default: 'ddd mmm dd yyyy HH:MM:ss',\n    shortDate: 'm/d/yy',\n    mediumDate: 'mmm d, yyyy',\n    longDate: 'mmmm d, yyyy',\n    fullDate: 'dddd, mmmm d, yyyy',\n    shortTime: 'h:MM TT',\n    mediumTime: 'h:MM:ss TT',\n    longTime: 'h:MM:ss TT Z',\n    isoDate: 'yyyy-mm-dd',\n    isoTime: 'HH:MM:ss',\n    isoDateTime: \"yyyy-mm-dd' 'HH:MM:ss\",\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\n  },\n  i18n: {\n    // Internationalization strings\n    dayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    monthNames: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ],\n  },\n};\n\n// eslint-disable-next-line prefer-named-capture-group\nvar token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/gu;\nvar timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/gu;\nvar timezoneClip = /[^-+\\dA-Z]/gu;\nvar dateFormat = function (date, mask, utc) {\n  // You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\n  if (arguments.length === 1 && Object.prototype.toString.call(date) === '[object String]' && !/\\d/u.test(date)) {\n    mask = date;\n    // eslint-disable-next-line no-undefined\n    date = undefined;\n  }\n\n  // Passing date through Date applies Date.parse, if necessary\n  date = date ? new Date(date) : new Date();\n  if (Number.isNaN(date)) throw SyntaxError(`invalid date - ${date}`);\n\n  mask = String(formats.masks[mask] || mask || formats.masks['default']);\n\n  // Allow setting the utc argument via the mask\n  if (mask.slice(0, 4) === 'UTC:') {\n    mask = mask.slice(4);\n    utc = true;\n  }\n\n  var _ = utc ? 'getUTC' : 'get';\n  var d = date[_ + 'Date']();\n  var D = date[_ + 'Day']();\n  var m = date[_ + 'Month']();\n  var y = date[_ + 'FullYear']();\n  var H = date[_ + 'Hours']();\n  var M = date[_ + 'Minutes']();\n  var s = date[_ + 'Seconds']();\n  var L = date[_ + 'Milliseconds']();\n  var o = utc ? 0 : date.getTimezoneOffset();\n  var flags = {\n    d: d,\n    dd: pad(d),\n    ddd: formats.i18n.dayNames[D],\n    dddd: formats.i18n.dayNames[D + 7],\n    m: m + 1,\n    mm: pad(m + 1),\n    mmm: formats.i18n.monthNames[m],\n    mmmm: formats.i18n.monthNames[m + 12],\n    yy: String(y).slice(2),\n    yyyy: y,\n    h: H % 12 || 12,\n    hh: pad(H % 12 || 12),\n    H: H,\n    HH: pad(H),\n    M: M,\n    MM: pad(M),\n    s: s,\n    ss: pad(s),\n    l: pad(L, 3),\n    L: pad(L > 99 ? Math.round(L / 10) : L),\n    t: H < 12 ? 'a' : 'p',\n    tt: H < 12 ? 'am' : 'pm',\n    T: H < 12 ? 'A' : 'P',\n    TT: H < 12 ? 'AM' : 'PM',\n    Z: utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n    o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4),\n    S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (((d % 100) - (d % 10) !== 10) * d) % 10],\n  };\n\n  return mask.replace(token, function ($0) {\n    return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\n  });\n};\n\nexport { dateFormat };\n","/*!\nSunCalc is a JavaScript library for calculating sun/moon position and light phases.\nhttps://github.com/mourner/suncalc\n\nOriginal Copyright (c) 2011-2015, Vladimir Agafonkin\nES2019 Modifications Copyright (c) 2020, Theoodre Kruczek\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are\npermitted provided that the following conditions are met:\n\n   1. Redistributions of source code must retain the above copyright notice, this list of\n      conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright notice, this list\n      of conditions and the following disclaimer in the documentation and/or other materials\n      provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\nCOPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\nTORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nsun calculations are based on http://aa.quae.nl/en/reken/zonpositie.html formulas\n*/\n\nimport { DEG2RAD, TAU } from './constants';\n\nexport const SunCalc = {\n  MILLISECONDS_IN_A_DAY: 1000 * 60 * 60 * 24,\n  J1970: 2440588,\n  J2000: 2451545,\n  J0: 0.0009, // calculations for sun times\n  // Make some variables we can reusue a bunch\n  lw: null,\n  phi: null,\n  d: null,\n  H: null,\n  h: null,\n\n  // sun times configuration (angle, morning name, evening name)\n  times: [\n    [-0.833, 'sunrise', 'sunset'],\n    [-0.3, 'sunriseEnd', 'sunsetStart'],\n    [-6, 'dawn', 'dusk'],\n    [-12, 'nauticalDawn', 'nauticalDusk'],\n    [-18, 'nightEnd', 'night'],\n    [6, 'goldenHourEnd', 'goldenHour'],\n  ],\n  toJulian: (date) => date.valueOf() / SunCalc.MILLISECONDS_IN_A_DAY - 0.5 + SunCalc.J1970,\n  fromJulian: (j) => new Date((j + 0.5 - SunCalc.J1970) * SunCalc.MILLISECONDS_IN_A_DAY),\n  toDays(date) {\n    return SunCalc.toJulian(date) - SunCalc.J2000;\n  },\n  e: (TAU / 360) * 23.4397, // obliquity of the Earth\n  rightAscension: (l, b) => Math.atan2(Math.sin(l) * Math.cos(SunCalc.e) - Math.tan(b) * Math.sin(SunCalc.e), Math.cos(l)),\n  declination: (l, b) => Math.asin(Math.sin(b) * Math.cos(SunCalc.e) + Math.cos(b) * Math.sin(SunCalc.e) * Math.sin(l)),\n  azimuth: (H, phi, dec) => Math.atan2(Math.sin(H), Math.cos(H) * Math.sin(phi) - Math.tan(dec) * Math.cos(phi)),\n  altitude: (H, phi, dec) => Math.asin(Math.sin(phi) * Math.sin(dec) + Math.cos(phi) * Math.cos(dec) * Math.cos(H)),\n  siderealTime: (d, lw) => (TAU / 360) * (280.16 + 360.9856235 * d) - lw,\n  astroRefraction: (h) => {\n    if (h < 0)\n      // the following formula works for positive altitudes only.\n      h = 0; // if h = -0.08901179 a div/0 would occur.\n\n    // formula 16.4 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n    // 1.02 / Math.tan(h + 10.26 / (h + 5.10)) h in degrees, result in arc minutes -> converted to TAU / 360:\n    return 0.0002967 / Math.tan(h + 0.00312536 / (h + 0.08901179));\n  },\n  // general sun calculations\n  solarMeanAnomaly: (d) => (TAU / 360) * (357.5291 + 0.98560028 * d),\n  eclipticLongitude: (M) => {\n    var C = (TAU / 360) * (1.9148 * Math.sin(M) + 0.02 * Math.sin(2 * M) + 0.0003 * Math.sin(3 * M)), // equation of center\n      P = (TAU / 360) * 102.9372; // perihelion of the Earth\n\n    return M + C + P + TAU / 2;\n  },\n  sunCoords: (d) => {\n    var M = SunCalc.solarMeanAnomaly(d),\n      L = SunCalc.eclipticLongitude(M);\n\n    return {\n      dec: SunCalc.declination(L, 0),\n      ra: SunCalc.rightAscension(L, 0),\n    };\n  },\n  julianCycle: (d, lw) => Math.round(d - SunCalc.J0 - lw / ((2 * TAU) / 2)),\n  approxTransit: (Ht, lw, n) => SunCalc.J0 + (Ht + lw) / ((2 * TAU) / 2) + n,\n  solarTransitJ: (ds, M, L) => SunCalc.J2000 + ds + 0.0053 * Math.sin(M) - 0.0069 * Math.sin(2 * L),\n  hourAngle: (h, phi, d) => Math.acos((Math.sin(h) - Math.sin(phi) * Math.sin(d)) / (Math.cos(phi) * Math.cos(d))),\n  // returns set time for the given sun altitude\n  getSetJ: (h, lw, phi, dec, n, M, L) => {\n    var w = SunCalc.hourAngle(h, phi, dec),\n      a = SunCalc.approxTransit(w, lw, n);\n    return SunCalc.solarTransitJ(a, M, L);\n  },\n  moonCoords: (d) => {\n    // geocentric ecliptic coordinates of the moon\n\n    var L = (TAU / 360) * (218.316 + 13.176396 * d), // ecliptic longitude\n      M = (TAU / 360) * (134.963 + 13.064993 * d), // mean anomaly\n      F = (TAU / 360) * (93.272 + 13.22935 * d), // mean distance\n      l = L + (TAU / 360) * 6.289 * Math.sin(M), // longitude\n      b = (TAU / 360) * 5.128 * Math.sin(F), // latitude\n      dt = 385001 - 20905 * Math.cos(M); // distance to the moon in km\n\n    return {\n      ra: SunCalc.rightAscension(l, b),\n      dec: SunCalc.declination(l, b),\n      dist: dt,\n    };\n  },\n  hoursLater: (date, h) => new Date(date.valueOf() + (h * SunCalc.MILLISECONDS_IN_A_DAY) / 24),\n  getStarPosition: (date, lat, lng, c) => {\n    SunCalc.lw = DEG2RAD * -lng;\n    SunCalc.phi = DEG2RAD * lat;\n    SunCalc.d = SunCalc.toDays(date);\n    SunCalc.H = SunCalc.siderealTime(SunCalc.d, SunCalc.lw) - (c.ra / 12) * Math.PI;\n    SunCalc.h = SunCalc.altitude(SunCalc.H, SunCalc.phi, (c.dec / 180) * Math.PI);\n\n    SunCalc.h += SunCalc.astroRefraction(SunCalc.h); // altitude correction for refraction\n\n    return {\n      azimuth: SunCalc.azimuth(SunCalc.H, SunCalc.phi, (c.dec / 180) * Math.PI),\n      altitude: SunCalc.h,\n      vmag: c.vmag,\n      name: c.name,\n      dist: c.dist,\n    };\n  },\n  // calculates sun position for a given date and latitude/longitude\n  getSunPosition: (date, lat, lng) => {\n    var lw = (TAU / 360) * -lng,\n      phi = (TAU / 360) * lat,\n      d = SunCalc.toDays(date),\n      c = SunCalc.sunCoords(d),\n      H = SunCalc.siderealTime(d, lw) - c.ra;\n\n    return {\n      azimuth: SunCalc.azimuth(H, phi, c.dec),\n      altitude: SunCalc.altitude(H, phi, c.dec),\n    };\n  },\n  // adds a custom time to the times config\n  addTime: (angle, riseName, setName) => {\n    SunCalc.times.push([angle, riseName, setName]);\n  },\n  // calculates sun times for a given date and latitude/longitude\n  getTimes: (date, lat, lng) => {\n    var lw = (TAU / 360) * -lng,\n      phi = (TAU / 360) * lat,\n      d = SunCalc.toDays(date),\n      n = SunCalc.julianCycle(d, lw),\n      ds = SunCalc.approxTransit(0, lw, n),\n      M = SunCalc.solarMeanAnomaly(ds),\n      L = SunCalc.eclipticLongitude(M),\n      dec = SunCalc.declination(L, 0),\n      Jnoon = SunCalc.solarTransitJ(ds, M, L),\n      i,\n      len,\n      time,\n      Jset,\n      Jrise;\n\n    var result = {\n      solarNoon: SunCalc.fromJulian(Jnoon),\n      nadir: SunCalc.fromJulian(Jnoon - 0.5),\n    };\n\n    for (i = 0, len = SunCalc.times.length; i < len; i += 1) {\n      time = SunCalc.times[i];\n\n      Jset = SunCalc.getSetJ((time[0] * TAU) / 360, lw, phi, dec, n, M, L);\n      Jrise = Jnoon - (Jset - Jnoon);\n\n      result[time[1]] = SunCalc.fromJulian(Jrise);\n      result[time[2]] = SunCalc.fromJulian(Jset);\n    }\n\n    return result;\n  },\n  // moon calculations, based on http://aa.quae.nl/en/reken/hemelpositie.html formulas\n  getMoonPosition: (date, lat, lng) => {\n    var lw = (TAU / 360) * -lng,\n      phi = (TAU / 360) * lat,\n      d = SunCalc.toDays(date),\n      c = SunCalc.moonCoords(d),\n      H = SunCalc.siderealTime(d, lw) - c.ra,\n      h = SunCalc.altitude(H, phi, c.dec),\n      // formula 14.1 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n      pa = Math.atan2(Math.sin(H), Math.tan(phi) * Math.cos(c.dec) - Math.sin(c.dec) * Math.cos(H));\n\n    h = h + SunCalc.astroRefraction(h); // altitude correction for refraction\n\n    return {\n      azimuth: SunCalc.azimuth(H, phi, c.dec),\n      altitude: h,\n      distance: c.dist,\n      parallacticAngle: pa,\n    };\n  },\n  // calculations for illumination parameters of the moon,\n  // based on http://idlastro.gsfc.nasa.gov/ftp/pro/astro/mphase.pro formulas and\n  // Chapter 48 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n  getMoonIllumination: (date) => {\n    var d = SunCalc.toDays(date || new Date()),\n      s = SunCalc.sunCoords(d),\n      m = SunCalc.moonCoords(d),\n      sdist = 149598000, // distance from Earth to Sun in km\n      phi = Math.acos(Math.sin(s.dec) * Math.sin(m.dec) + Math.cos(s.dec) * Math.cos(m.dec) * Math.cos(s.ra - m.ra)),\n      inc = Math.atan2(sdist * Math.sin(phi), m.dist - sdist * Math.cos(phi)),\n      angle = Math.atan2(Math.cos(s.dec) * Math.sin(s.ra - m.ra), Math.sin(s.dec) * Math.cos(m.dec) - Math.cos(s.dec) * Math.sin(m.dec) * Math.cos(s.ra - m.ra));\n\n    return {\n      fraction: (1 + Math.cos(inc)) / 2,\n      phase: 0.5 + (0.5 * inc * (angle < 0 ? -1 : 1)) / TAU / 2,\n      angle: angle,\n    };\n  },\n  // calculations for moon rise/set times are based on http://www.stargazing.net/kepler/moonrise.html article\n  getMoonTimes: (date, lat, lng, inUTC) => {\n    var t = new Date(date);\n    if (inUTC) t.setUTCHours(0, 0, 0, 0);\n    else t.setHours(0, 0, 0, 0);\n\n    var hc = (0.133 * TAU) / 360,\n      h0 = SunCalc.getMoonPosition(t, lat, lng).altitude - hc,\n      h1,\n      h2,\n      rise,\n      set,\n      a,\n      b,\n      xe,\n      ye,\n      d,\n      roots,\n      x1,\n      x2,\n      dx;\n\n    // go in 2-hour chunks, each time seeing if a 3-point quadratic curve crosses zero (which means rise or set)\n    for (var i = 1; i <= 24; i += 2) {\n      h1 = SunCalc.getMoonPosition(SunCalc.hoursLater(t, i), lat, lng).altitude - hc;\n      h2 = SunCalc.getMoonPosition(SunCalc.hoursLater(t, i + 1), lat, lng).altitude - hc;\n\n      a = (h0 + h2) / 2 - h1;\n      b = (h2 - h0) / 2;\n      xe = -b / (2 * a);\n      ye = (a * xe + b) * xe + h1;\n      d = b * b - 4 * a * h1;\n      roots = 0;\n\n      if (d >= 0) {\n        dx = Math.sqrt(d) / (Math.abs(a) * 2);\n        x1 = xe - dx;\n        x2 = xe + dx;\n        if (Math.abs(x1) <= 1) roots++;\n        if (Math.abs(x2) <= 1) roots++;\n        if (x1 < -1) x1 = x2;\n      }\n\n      if (roots === 1) {\n        if (h0 < 0) rise = i + x1;\n        else set = i + x1;\n      } else if (roots === 2) {\n        rise = i + (ye < 0 ? x2 : x1);\n        set = i + (ye < 0 ? x1 : x2);\n      }\n\n      if (rise && set) break;\n\n      h0 = h2;\n    }\n\n    var result = {};\n\n    if (rise) result.rise = SunCalc.hoursLater(t, rise);\n    if (set) result.set = SunCalc.hoursLater(t, set);\n\n    if (!rise && !set) result[ye > 0 ? 'alwaysUp' : 'alwaysDown'] = true;\n\n    return result;\n  },\n};\n","\"use strict\";\n\nvar numeric = (typeof exports === \"undefined\")?(function numeric() {}):(exports);\nif(typeof global !== \"undefined\") { global.numeric = numeric; }\n\nnumeric.version = \"1.2.6\";\n\n// 1. Utility functions\nnumeric.bench = function bench (f,interval) {\n    var t1,t2,n,i;\n    if(typeof interval === \"undefined\") { interval = 15; }\n    n = 0.5;\n    t1 = new Date();\n    while(1) {\n        n*=2;\n        for(i=n;i>3;i-=4) { f(); f(); f(); f(); }\n        while(i>0) { f(); i--; }\n        t2 = new Date();\n        if(t2-t1 > interval) break;\n    }\n    for(i=n;i>3;i-=4) { f(); f(); f(); f(); }\n    while(i>0) { f(); i--; }\n    t2 = new Date();\n    return 1000*(3*n-1)/(t2-t1);\n}\n\nnumeric._myIndexOf = (function _myIndexOf(w) {\n    var n = this.length,k;\n    for(k=0;k<n;++k) if(this[k]===w) return k;\n    return -1;\n});\nnumeric.myIndexOf = (Array.prototype.indexOf)?Array.prototype.indexOf:numeric._myIndexOf;\n\nnumeric.Function = Function;\nnumeric.precision = 4;\nnumeric.largeArray = 50;\n\nnumeric.prettyPrint = function prettyPrint(x) {\n    function fmtnum(x) {\n        if(x === 0) { return '0'; }\n        if(isNaN(x)) { return 'NaN'; }\n        if(x<0) { return '-'+fmtnum(-x); }\n        if(isFinite(x)) {\n            var scale = Math.floor(Math.log(x) / Math.log(10));\n            var normalized = x / Math.pow(10,scale);\n            var basic = normalized.toPrecision(numeric.precision);\n            if(parseFloat(basic) === 10) { scale++; normalized = 1; basic = normalized.toPrecision(numeric.precision); }\n            return parseFloat(basic).toString()+'e'+scale.toString();\n        }\n        return 'Infinity';\n    }\n    var ret = [];\n    function foo(x) {\n        var k;\n        if(typeof x === \"undefined\") { ret.push(Array(numeric.precision+8).join(' ')); return false; }\n        if(typeof x === \"string\") { ret.push('\"'+x+'\"'); return false; }\n        if(typeof x === \"boolean\") { ret.push(x.toString()); return false; }\n        if(typeof x === \"number\") {\n            var a = fmtnum(x);\n            var b = x.toPrecision(numeric.precision);\n            var c = parseFloat(x.toString()).toString();\n            var d = [a,b,c,parseFloat(b).toString(),parseFloat(c).toString()];\n            for(k=1;k<d.length;k++) { if(d[k].length < a.length) a = d[k]; }\n            ret.push(Array(numeric.precision+8-a.length).join(' ')+a);\n            return false;\n        }\n        if(x === null) { ret.push(\"null\"); return false; }\n        if(typeof x === \"function\") { \n            ret.push(x.toString());\n            var flag = false;\n            for(k in x) { if(x.hasOwnProperty(k)) { \n                if(flag) ret.push(',\\n');\n                else ret.push('\\n{');\n                flag = true; \n                ret.push(k); \n                ret.push(': \\n'); \n                foo(x[k]); \n            } }\n            if(flag) ret.push('}\\n');\n            return true;\n        }\n        if(x instanceof Array) {\n            if(x.length > numeric.largeArray) { ret.push('...Large Array...'); return true; }\n            var flag = false;\n            ret.push('[');\n            for(k=0;k<x.length;k++) { if(k>0) { ret.push(','); if(flag) ret.push('\\n '); } flag = foo(x[k]); }\n            ret.push(']');\n            return true;\n        }\n        ret.push('{');\n        var flag = false;\n        for(k in x) { if(x.hasOwnProperty(k)) { if(flag) ret.push(',\\n'); flag = true; ret.push(k); ret.push(': \\n'); foo(x[k]); } }\n        ret.push('}');\n        return true;\n    }\n    foo(x);\n    return ret.join('');\n}\n\nnumeric.parseDate = function parseDate(d) {\n    function foo(d) {\n        if(typeof d === 'string') { return Date.parse(d.replace(/-/g,'/')); }\n        if(!(d instanceof Array)) { throw new Error(\"parseDate: parameter must be arrays of strings\"); }\n        var ret = [],k;\n        for(k=0;k<d.length;k++) { ret[k] = foo(d[k]); }\n        return ret;\n    }\n    return foo(d);\n}\n\nnumeric.parseFloat = function parseFloat_(d) {\n    function foo(d) {\n        if(typeof d === 'string') { return parseFloat(d); }\n        if(!(d instanceof Array)) { throw new Error(\"parseFloat: parameter must be arrays of strings\"); }\n        var ret = [],k;\n        for(k=0;k<d.length;k++) { ret[k] = foo(d[k]); }\n        return ret;\n    }\n    return foo(d);\n}\n\nnumeric.parseCSV = function parseCSV(t) {\n    var foo = t.split('\\n');\n    var j,k;\n    var ret = [];\n    var pat = /(([^'\",]*)|('[^']*')|(\"[^\"]*\")),/g;\n    var patnum = /^\\s*(([+-]?[0-9]+(\\.[0-9]*)?(e[+-]?[0-9]+)?)|([+-]?[0-9]*(\\.[0-9]+)?(e[+-]?[0-9]+)?))\\s*$/;\n    var stripper = function(n) { return n.substr(0,n.length-1); }\n    var count = 0;\n    for(k=0;k<foo.length;k++) {\n      var bar = (foo[k]+\",\").match(pat),baz;\n      if(bar.length>0) {\n          ret[count] = [];\n          for(j=0;j<bar.length;j++) {\n              baz = stripper(bar[j]);\n              if(patnum.test(baz)) { ret[count][j] = parseFloat(baz); }\n              else ret[count][j] = baz;\n          }\n          count++;\n      }\n    }\n    return ret;\n}\n\nnumeric.toCSV = function toCSV(A) {\n    var s = numeric.dim(A);\n    var i,j,m,n,row,ret;\n    m = s[0];\n    n = s[1];\n    ret = [];\n    for(i=0;i<m;i++) {\n        row = [];\n        for(j=0;j<m;j++) { row[j] = A[i][j].toString(); }\n        ret[i] = row.join(', ');\n    }\n    return ret.join('\\n')+'\\n';\n}\n\nnumeric.getURL = function getURL(url) {\n    var client = new XMLHttpRequest();\n    client.open(\"GET\",url,false);\n    client.send();\n    return client;\n}\n\nnumeric.imageURL = function imageURL(img) {\n    function base64(A) {\n        var n = A.length, i,x,y,z,p,q,r,s;\n        var key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        var ret = \"\";\n        for(i=0;i<n;i+=3) {\n            x = A[i];\n            y = A[i+1];\n            z = A[i+2];\n            p = x >> 2;\n            q = ((x & 3) << 4) + (y >> 4);\n            r = ((y & 15) << 2) + (z >> 6);\n            s = z & 63;\n            if(i+1>=n) { r = s = 64; }\n            else if(i+2>=n) { s = 64; }\n            ret += key.charAt(p) + key.charAt(q) + key.charAt(r) + key.charAt(s);\n            }\n        return ret;\n    }\n    function crc32Array (a,from,to) {\n        if(typeof from === \"undefined\") { from = 0; }\n        if(typeof to === \"undefined\") { to = a.length; }\n        var table = [0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,\n                     0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91, \n                     0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,\n                     0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5, \n                     0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, \n                     0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59, \n                     0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,\n                     0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,\n                     0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,\n                     0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01, \n                     0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, \n                     0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65, \n                     0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, \n                     0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9, \n                     0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F, \n                     0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, \n                     0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683, \n                     0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, \n                     0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7, \n                     0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, \n                     0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B, \n                     0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79, \n                     0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, \n                     0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D, \n                     0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713, \n                     0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, \n                     0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777, \n                     0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, \n                     0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB, \n                     0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9, \n                     0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF, \n                     0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D];\n     \n        var crc = -1, y = 0, n = a.length,i;\n\n        for (i = from; i < to; i++) {\n            y = (crc ^ a[i]) & 0xFF;\n            crc = (crc >>> 8) ^ table[y];\n        }\n     \n        return crc ^ (-1);\n    }\n\n    var h = img[0].length, w = img[0][0].length, s1, s2, next,k,length,a,b,i,j,adler32,crc32;\n    var stream = [\n                  137, 80, 78, 71, 13, 10, 26, 10,                           //  0: PNG signature\n                  0,0,0,13,                                                  //  8: IHDR Chunk length\n                  73, 72, 68, 82,                                            // 12: \"IHDR\" \n                  (w >> 24) & 255, (w >> 16) & 255, (w >> 8) & 255, w&255,   // 16: Width\n                  (h >> 24) & 255, (h >> 16) & 255, (h >> 8) & 255, h&255,   // 20: Height\n                  8,                                                         // 24: bit depth\n                  2,                                                         // 25: RGB\n                  0,                                                         // 26: deflate\n                  0,                                                         // 27: no filter\n                  0,                                                         // 28: no interlace\n                  -1,-2,-3,-4,                                               // 29: CRC\n                  -5,-6,-7,-8,                                               // 33: IDAT Chunk length\n                  73, 68, 65, 84,                                            // 37: \"IDAT\"\n                  // RFC 1950 header starts here\n                  8,                                                         // 41: RFC1950 CMF\n                  29                                                         // 42: RFC1950 FLG\n                  ];\n    crc32 = crc32Array(stream,12,29);\n    stream[29] = (crc32>>24)&255;\n    stream[30] = (crc32>>16)&255;\n    stream[31] = (crc32>>8)&255;\n    stream[32] = (crc32)&255;\n    s1 = 1;\n    s2 = 0;\n    for(i=0;i<h;i++) {\n        if(i<h-1) { stream.push(0); }\n        else { stream.push(1); }\n        a = (3*w+1+(i===0))&255; b = ((3*w+1+(i===0))>>8)&255;\n        stream.push(a); stream.push(b);\n        stream.push((~a)&255); stream.push((~b)&255);\n        if(i===0) stream.push(0);\n        for(j=0;j<w;j++) {\n            for(k=0;k<3;k++) {\n                a = img[k][i][j];\n                if(a>255) a = 255;\n                else if(a<0) a=0;\n                else a = Math.round(a);\n                s1 = (s1 + a )%65521;\n                s2 = (s2 + s1)%65521;\n                stream.push(a);\n            }\n        }\n        stream.push(0);\n    }\n    adler32 = (s2<<16)+s1;\n    stream.push((adler32>>24)&255);\n    stream.push((adler32>>16)&255);\n    stream.push((adler32>>8)&255);\n    stream.push((adler32)&255);\n    length = stream.length - 41;\n    stream[33] = (length>>24)&255;\n    stream[34] = (length>>16)&255;\n    stream[35] = (length>>8)&255;\n    stream[36] = (length)&255;\n    crc32 = crc32Array(stream,37);\n    stream.push((crc32>>24)&255);\n    stream.push((crc32>>16)&255);\n    stream.push((crc32>>8)&255);\n    stream.push((crc32)&255);\n    stream.push(0);\n    stream.push(0);\n    stream.push(0);\n    stream.push(0);\n//    a = stream.length;\n    stream.push(73);  // I\n    stream.push(69);  // E\n    stream.push(78);  // N\n    stream.push(68);  // D\n    stream.push(174); // CRC1\n    stream.push(66);  // CRC2\n    stream.push(96);  // CRC3\n    stream.push(130); // CRC4\n    return 'data:image/png;base64,'+base64(stream);\n}\n\n// 2. Linear algebra with Arrays.\nnumeric._dim = function _dim(x) {\n    var ret = [];\n    while(typeof x === \"object\") { ret.push(x.length); x = x[0]; }\n    return ret;\n}\n\nnumeric.dim = function dim(x) {\n    var y,z;\n    if(typeof x === \"object\") {\n        y = x[0];\n        if(typeof y === \"object\") {\n            z = y[0];\n            if(typeof z === \"object\") {\n                return numeric._dim(x);\n            }\n            return [x.length,y.length];\n        }\n        return [x.length];\n    }\n    return [];\n}\n\nnumeric.mapreduce = function mapreduce(body,init) {\n    return Function('x','accum','_s','_k',\n            'if(typeof accum === \"undefined\") accum = '+init+';\\n'+\n            'if(typeof x === \"number\") { var xi = x; '+body+'; return accum; }\\n'+\n            'if(typeof _s === \"undefined\") _s = numeric.dim(x);\\n'+\n            'if(typeof _k === \"undefined\") _k = 0;\\n'+\n            'var _n = _s[_k];\\n'+\n            'var i,xi;\\n'+\n            'if(_k < _s.length-1) {\\n'+\n            '    for(i=_n-1;i>=0;i--) {\\n'+\n            '        accum = arguments.callee(x[i],accum,_s,_k+1);\\n'+\n            '    }'+\n            '    return accum;\\n'+\n            '}\\n'+\n            'for(i=_n-1;i>=1;i-=2) { \\n'+\n            '    xi = x[i];\\n'+\n            '    '+body+';\\n'+\n            '    xi = x[i-1];\\n'+\n            '    '+body+';\\n'+\n            '}\\n'+\n            'if(i === 0) {\\n'+\n            '    xi = x[i];\\n'+\n            '    '+body+'\\n'+\n            '}\\n'+\n            'return accum;'\n            );\n}\nnumeric.mapreduce2 = function mapreduce2(body,setup) {\n    return Function('x',\n            'var n = x.length;\\n'+\n            'var i,xi;\\n'+setup+';\\n'+\n            'for(i=n-1;i!==-1;--i) { \\n'+\n            '    xi = x[i];\\n'+\n            '    '+body+';\\n'+\n            '}\\n'+\n            'return accum;'\n            );\n}\n\n\nnumeric.same = function same(x,y) {\n    var i,n;\n    if(!(x instanceof Array) || !(y instanceof Array)) { return false; }\n    n = x.length;\n    if(n !== y.length) { return false; }\n    for(i=0;i<n;i++) {\n        if(x[i] === y[i]) { continue; }\n        if(typeof x[i] === \"object\") { if(!same(x[i],y[i])) return false; }\n        else { return false; }\n    }\n    return true;\n}\n\nnumeric.rep = function rep(s,v,k) {\n    if(typeof k === \"undefined\") { k=0; }\n    var n = s[k], ret = Array(n), i;\n    if(k === s.length-1) {\n        for(i=n-2;i>=0;i-=2) { ret[i+1] = v; ret[i] = v; }\n        if(i===-1) { ret[0] = v; }\n        return ret;\n    }\n    for(i=n-1;i>=0;i--) { ret[i] = numeric.rep(s,v,k+1); }\n    return ret;\n}\n\n\nnumeric.dotMMsmall = function dotMMsmall(x,y) {\n    var i,j,k,p,q,r,ret,foo,bar,woo,i0,k0,p0,r0;\n    p = x.length; q = y.length; r = y[0].length;\n    ret = Array(p);\n    for(i=p-1;i>=0;i--) {\n        foo = Array(r);\n        bar = x[i];\n        for(k=r-1;k>=0;k--) {\n            woo = bar[q-1]*y[q-1][k];\n            for(j=q-2;j>=1;j-=2) {\n                i0 = j-1;\n                woo += bar[j]*y[j][k] + bar[i0]*y[i0][k];\n            }\n            if(j===0) { woo += bar[0]*y[0][k]; }\n            foo[k] = woo;\n        }\n        ret[i] = foo;\n    }\n    return ret;\n}\nnumeric._getCol = function _getCol(A,j,x) {\n    var n = A.length, i;\n    for(i=n-1;i>0;--i) {\n        x[i] = A[i][j];\n        --i;\n        x[i] = A[i][j];\n    }\n    if(i===0) x[0] = A[0][j];\n}\nnumeric.dotMMbig = function dotMMbig(x,y){\n    var gc = numeric._getCol, p = y.length, v = Array(p);\n    var m = x.length, n = y[0].length, A = new Array(m), xj;\n    var VV = numeric.dotVV;\n    var i,j,k,z;\n    --p;\n    --m;\n    for(i=m;i!==-1;--i) A[i] = Array(n);\n    --n;\n    for(i=n;i!==-1;--i) {\n        gc(y,i,v);\n        for(j=m;j!==-1;--j) {\n            z=0;\n            xj = x[j];\n            A[j][i] = VV(xj,v);\n        }\n    }\n    return A;\n}\n\nnumeric.dotMV = function dotMV(x,y) {\n    var p = x.length, q = y.length,i;\n    var ret = Array(p), dotVV = numeric.dotVV;\n    for(i=p-1;i>=0;i--) { ret[i] = dotVV(x[i],y); }\n    return ret;\n}\n\nnumeric.dotVM = function dotVM(x,y) {\n    var i,j,k,p,q,r,ret,foo,bar,woo,i0,k0,p0,r0,s1,s2,s3,baz,accum;\n    p = x.length; q = y[0].length;\n    ret = Array(q);\n    for(k=q-1;k>=0;k--) {\n        woo = x[p-1]*y[p-1][k];\n        for(j=p-2;j>=1;j-=2) {\n            i0 = j-1;\n            woo += x[j]*y[j][k] + x[i0]*y[i0][k];\n        }\n        if(j===0) { woo += x[0]*y[0][k]; }\n        ret[k] = woo;\n    }\n    return ret;\n}\n\nnumeric.dotVV = function dotVV(x,y) {\n    var i,n=x.length,i1,ret = x[n-1]*y[n-1];\n    for(i=n-2;i>=1;i-=2) {\n        i1 = i-1;\n        ret += x[i]*y[i] + x[i1]*y[i1];\n    }\n    if(i===0) { ret += x[0]*y[0]; }\n    return ret;\n}\n\nnumeric.dot = function dot(x,y) {\n    var d = numeric.dim;\n    switch(d(x).length*1000+d(y).length) {\n    case 2002:\n        if(y.length < 10) return numeric.dotMMsmall(x,y);\n        else return numeric.dotMMbig(x,y);\n    case 2001: return numeric.dotMV(x,y);\n    case 1002: return numeric.dotVM(x,y);\n    case 1001: return numeric.dotVV(x,y);\n    case 1000: return numeric.mulVS(x,y);\n    case 1: return numeric.mulSV(x,y);\n    case 0: return x*y;\n    default: throw new Error('numeric.dot only works on vectors and matrices');\n    }\n}\n\nnumeric.diag = function diag(d) {\n    var i,i1,j,n = d.length, A = Array(n), Ai;\n    for(i=n-1;i>=0;i--) {\n        Ai = Array(n);\n        i1 = i+2;\n        for(j=n-1;j>=i1;j-=2) {\n            Ai[j] = 0;\n            Ai[j-1] = 0;\n        }\n        if(j>i) { Ai[j] = 0; }\n        Ai[i] = d[i];\n        for(j=i-1;j>=1;j-=2) {\n            Ai[j] = 0;\n            Ai[j-1] = 0;\n        }\n        if(j===0) { Ai[0] = 0; }\n        A[i] = Ai;\n    }\n    return A;\n}\nnumeric.getDiag = function(A) {\n    var n = Math.min(A.length,A[0].length),i,ret = Array(n);\n    for(i=n-1;i>=1;--i) {\n        ret[i] = A[i][i];\n        --i;\n        ret[i] = A[i][i];\n    }\n    if(i===0) {\n        ret[0] = A[0][0];\n    }\n    return ret;\n}\n\nnumeric.identity = function identity(n) { return numeric.diag(numeric.rep([n],1)); }\nnumeric.pointwise = function pointwise(params,body,setup) {\n    if(typeof setup === \"undefined\") { setup = \"\"; }\n    var fun = [];\n    var k;\n    var avec = /\\[i\\]$/,p,thevec = '';\n    var haveret = false;\n    for(k=0;k<params.length;k++) {\n        if(avec.test(params[k])) {\n            p = params[k].substring(0,params[k].length-3);\n            thevec = p;\n        } else { p = params[k]; }\n        if(p==='ret') haveret = true;\n        fun.push(p);\n    }\n    fun[params.length] = '_s';\n    fun[params.length+1] = '_k';\n    fun[params.length+2] = (\n            'if(typeof _s === \"undefined\") _s = numeric.dim('+thevec+');\\n'+\n            'if(typeof _k === \"undefined\") _k = 0;\\n'+\n            'var _n = _s[_k];\\n'+\n            'var i'+(haveret?'':', ret = Array(_n)')+';\\n'+\n            'if(_k < _s.length-1) {\\n'+\n            '    for(i=_n-1;i>=0;i--) ret[i] = arguments.callee('+params.join(',')+',_s,_k+1);\\n'+\n            '    return ret;\\n'+\n            '}\\n'+\n            setup+'\\n'+\n            'for(i=_n-1;i!==-1;--i) {\\n'+\n            '    '+body+'\\n'+\n            '}\\n'+\n            'return ret;'\n            );\n    return Function.apply(null,fun);\n}\nnumeric.pointwise2 = function pointwise2(params,body,setup) {\n    if(typeof setup === \"undefined\") { setup = \"\"; }\n    var fun = [];\n    var k;\n    var avec = /\\[i\\]$/,p,thevec = '';\n    var haveret = false;\n    for(k=0;k<params.length;k++) {\n        if(avec.test(params[k])) {\n            p = params[k].substring(0,params[k].length-3);\n            thevec = p;\n        } else { p = params[k]; }\n        if(p==='ret') haveret = true;\n        fun.push(p);\n    }\n    fun[params.length] = (\n            'var _n = '+thevec+'.length;\\n'+\n            'var i'+(haveret?'':', ret = Array(_n)')+';\\n'+\n            setup+'\\n'+\n            'for(i=_n-1;i!==-1;--i) {\\n'+\n            body+'\\n'+\n            '}\\n'+\n            'return ret;'\n            );\n    return Function.apply(null,fun);\n}\nnumeric._biforeach = (function _biforeach(x,y,s,k,f) {\n    if(k === s.length-1) { f(x,y); return; }\n    var i,n=s[k];\n    for(i=n-1;i>=0;i--) { _biforeach(typeof x===\"object\"?x[i]:x,typeof y===\"object\"?y[i]:y,s,k+1,f); }\n});\nnumeric._biforeach2 = (function _biforeach2(x,y,s,k,f) {\n    if(k === s.length-1) { return f(x,y); }\n    var i,n=s[k],ret = Array(n);\n    for(i=n-1;i>=0;--i) { ret[i] = _biforeach2(typeof x===\"object\"?x[i]:x,typeof y===\"object\"?y[i]:y,s,k+1,f); }\n    return ret;\n});\nnumeric._foreach = (function _foreach(x,s,k,f) {\n    if(k === s.length-1) { f(x); return; }\n    var i,n=s[k];\n    for(i=n-1;i>=0;i--) { _foreach(x[i],s,k+1,f); }\n});\nnumeric._foreach2 = (function _foreach2(x,s,k,f) {\n    if(k === s.length-1) { return f(x); }\n    var i,n=s[k], ret = Array(n);\n    for(i=n-1;i>=0;i--) { ret[i] = _foreach2(x[i],s,k+1,f); }\n    return ret;\n});\n\n/*numeric.anyV = numeric.mapreduce('if(xi) return true;','false');\nnumeric.allV = numeric.mapreduce('if(!xi) return false;','true');\nnumeric.any = function(x) { if(typeof x.length === \"undefined\") return x; return numeric.anyV(x); }\nnumeric.all = function(x) { if(typeof x.length === \"undefined\") return x; return numeric.allV(x); }*/\n\nnumeric.ops2 = {\n        add: '+',\n        sub: '-',\n        mul: '*',\n        div: '/',\n        mod: '%',\n        and: '&&',\n        or:  '||',\n        eq:  '===',\n        neq: '!==',\n        lt:  '<',\n        gt:  '>',\n        leq: '<=',\n        geq: '>=',\n        band: '&',\n        bor: '|',\n        bxor: '^',\n        lshift: '<<',\n        rshift: '>>',\n        rrshift: '>>>'\n};\nnumeric.opseq = {\n        addeq: '+=',\n        subeq: '-=',\n        muleq: '*=',\n        diveq: '/=',\n        modeq: '%=',\n        lshifteq: '<<=',\n        rshifteq: '>>=',\n        rrshifteq: '>>>=',\n        bandeq: '&=',\n        boreq: '|=',\n        bxoreq: '^='\n};\nnumeric.mathfuns = ['abs','acos','asin','atan','ceil','cos',\n                    'exp','floor','log','round','sin','sqrt','tan',\n                    'isNaN','isFinite'];\nnumeric.mathfuns2 = ['atan2','pow','max','min'];\nnumeric.ops1 = {\n        neg: '-',\n        not: '!',\n        bnot: '~',\n        clone: ''\n};\nnumeric.mapreducers = {\n        any: ['if(xi) return true;','var accum = false;'],\n        all: ['if(!xi) return false;','var accum = true;'],\n        sum: ['accum += xi;','var accum = 0;'],\n        prod: ['accum *= xi;','var accum = 1;'],\n        norm2Squared: ['accum += xi*xi;','var accum = 0;'],\n        norminf: ['accum = max(accum,abs(xi));','var accum = 0, max = Math.max, abs = Math.abs;'],\n        norm1: ['accum += abs(xi)','var accum = 0, abs = Math.abs;'],\n        sup: ['accum = max(accum,xi);','var accum = -Infinity, max = Math.max;'],\n        inf: ['accum = min(accum,xi);','var accum = Infinity, min = Math.min;']\n};\n\n(function () {\n    var i,o;\n    for(i=0;i<numeric.mathfuns2.length;++i) {\n        o = numeric.mathfuns2[i];\n        numeric.ops2[o] = o;\n    }\n    for(i in numeric.ops2) {\n        if(numeric.ops2.hasOwnProperty(i)) {\n            o = numeric.ops2[i];\n            var code, codeeq, setup = '';\n            if(numeric.myIndexOf.call(numeric.mathfuns2,i)!==-1) {\n                setup = 'var '+o+' = Math.'+o+';\\n';\n                code = function(r,x,y) { return r+' = '+o+'('+x+','+y+')'; };\n                codeeq = function(x,y) { return x+' = '+o+'('+x+','+y+')'; };\n            } else {\n                code = function(r,x,y) { return r+' = '+x+' '+o+' '+y; };\n                if(numeric.opseq.hasOwnProperty(i+'eq')) {\n                    codeeq = function(x,y) { return x+' '+o+'= '+y; };\n                } else {\n                    codeeq = function(x,y) { return x+' = '+x+' '+o+' '+y; };                    \n                }\n            }\n            numeric[i+'VV'] = numeric.pointwise2(['x[i]','y[i]'],code('ret[i]','x[i]','y[i]'),setup);\n            numeric[i+'SV'] = numeric.pointwise2(['x','y[i]'],code('ret[i]','x','y[i]'),setup);\n            numeric[i+'VS'] = numeric.pointwise2(['x[i]','y'],code('ret[i]','x[i]','y'),setup);\n            numeric[i] = Function(\n                    'var n = arguments.length, i, x = arguments[0], y;\\n'+\n                    'var VV = numeric.'+i+'VV, VS = numeric.'+i+'VS, SV = numeric.'+i+'SV;\\n'+\n                    'var dim = numeric.dim;\\n'+\n                    'for(i=1;i!==n;++i) { \\n'+\n                    '  y = arguments[i];\\n'+\n                    '  if(typeof x === \"object\") {\\n'+\n                    '      if(typeof y === \"object\") x = numeric._biforeach2(x,y,dim(x),0,VV);\\n'+\n                    '      else x = numeric._biforeach2(x,y,dim(x),0,VS);\\n'+\n                    '  } else if(typeof y === \"object\") x = numeric._biforeach2(x,y,dim(y),0,SV);\\n'+\n                    '  else '+codeeq('x','y')+'\\n'+\n                    '}\\nreturn x;\\n');\n            numeric[o] = numeric[i];\n            numeric[i+'eqV'] = numeric.pointwise2(['ret[i]','x[i]'], codeeq('ret[i]','x[i]'),setup);\n            numeric[i+'eqS'] = numeric.pointwise2(['ret[i]','x'], codeeq('ret[i]','x'),setup);\n            numeric[i+'eq'] = Function(\n                    'var n = arguments.length, i, x = arguments[0], y;\\n'+\n                    'var V = numeric.'+i+'eqV, S = numeric.'+i+'eqS\\n'+\n                    'var s = numeric.dim(x);\\n'+\n                    'for(i=1;i!==n;++i) { \\n'+\n                    '  y = arguments[i];\\n'+\n                    '  if(typeof y === \"object\") numeric._biforeach(x,y,s,0,V);\\n'+\n                    '  else numeric._biforeach(x,y,s,0,S);\\n'+\n                    '}\\nreturn x;\\n');\n        }\n    }\n    for(i=0;i<numeric.mathfuns2.length;++i) {\n        o = numeric.mathfuns2[i];\n        delete numeric.ops2[o];\n    }\n    for(i=0;i<numeric.mathfuns.length;++i) {\n        o = numeric.mathfuns[i];\n        numeric.ops1[o] = o;\n    }\n    for(i in numeric.ops1) {\n        if(numeric.ops1.hasOwnProperty(i)) {\n            setup = '';\n            o = numeric.ops1[i];\n            if(numeric.myIndexOf.call(numeric.mathfuns,i)!==-1) {\n                if(Math.hasOwnProperty(o)) setup = 'var '+o+' = Math.'+o+';\\n';\n            }\n            numeric[i+'eqV'] = numeric.pointwise2(['ret[i]'],'ret[i] = '+o+'(ret[i]);',setup);\n            numeric[i+'eq'] = Function('x',\n                    'if(typeof x !== \"object\") return '+o+'x\\n'+\n                    'var i;\\n'+\n                    'var V = numeric.'+i+'eqV;\\n'+\n                    'var s = numeric.dim(x);\\n'+\n                    'numeric._foreach(x,s,0,V);\\n'+\n                    'return x;\\n');\n            numeric[i+'V'] = numeric.pointwise2(['x[i]'],'ret[i] = '+o+'(x[i]);',setup);\n            numeric[i] = Function('x',\n                    'if(typeof x !== \"object\") return '+o+'(x)\\n'+\n                    'var i;\\n'+\n                    'var V = numeric.'+i+'V;\\n'+\n                    'var s = numeric.dim(x);\\n'+\n                    'return numeric._foreach2(x,s,0,V);\\n');\n        }\n    }\n    for(i=0;i<numeric.mathfuns.length;++i) {\n        o = numeric.mathfuns[i];\n        delete numeric.ops1[o];\n    }\n    for(i in numeric.mapreducers) {\n        if(numeric.mapreducers.hasOwnProperty(i)) {\n            o = numeric.mapreducers[i];\n            numeric[i+'V'] = numeric.mapreduce2(o[0],o[1]);\n            numeric[i] = Function('x','s','k',\n                    o[1]+\n                    'if(typeof x !== \"object\") {'+\n                    '    xi = x;\\n'+\n                    o[0]+';\\n'+\n                    '    return accum;\\n'+\n                    '}'+\n                    'if(typeof s === \"undefined\") s = numeric.dim(x);\\n'+\n                    'if(typeof k === \"undefined\") k = 0;\\n'+\n                    'if(k === s.length-1) return numeric.'+i+'V(x);\\n'+\n                    'var xi;\\n'+\n                    'var n = x.length, i;\\n'+\n                    'for(i=n-1;i!==-1;--i) {\\n'+\n                    '   xi = arguments.callee(x[i]);\\n'+\n                    o[0]+';\\n'+\n                    '}\\n'+\n                    'return accum;\\n');\n        }\n    }\n}());\n\nnumeric.truncVV = numeric.pointwise(['x[i]','y[i]'],'ret[i] = round(x[i]/y[i])*y[i];','var round = Math.round;');\nnumeric.truncVS = numeric.pointwise(['x[i]','y'],'ret[i] = round(x[i]/y)*y;','var round = Math.round;');\nnumeric.truncSV = numeric.pointwise(['x','y[i]'],'ret[i] = round(x/y[i])*y[i];','var round = Math.round;');\nnumeric.trunc = function trunc(x,y) {\n    if(typeof x === \"object\") {\n        if(typeof y === \"object\") return numeric.truncVV(x,y);\n        return numeric.truncVS(x,y);\n    }\n    if (typeof y === \"object\") return numeric.truncSV(x,y);\n    return Math.round(x/y)*y;\n}\n\nnumeric.inv = function inv(x) {\n    var s = numeric.dim(x), abs = Math.abs, m = s[0], n = s[1];\n    var A = numeric.clone(x), Ai, Aj;\n    var I = numeric.identity(m), Ii, Ij;\n    var i,j,k,x;\n    for(j=0;j<n;++j) {\n        var i0 = -1;\n        var v0 = -1;\n        for(i=j;i!==m;++i) { k = abs(A[i][j]); if(k>v0) { i0 = i; v0 = k; } }\n        Aj = A[i0]; A[i0] = A[j]; A[j] = Aj;\n        Ij = I[i0]; I[i0] = I[j]; I[j] = Ij;\n        x = Aj[j];\n        for(k=j;k!==n;++k)    Aj[k] /= x; \n        for(k=n-1;k!==-1;--k) Ij[k] /= x;\n        for(i=m-1;i!==-1;--i) {\n            if(i!==j) {\n                Ai = A[i];\n                Ii = I[i];\n                x = Ai[j];\n                for(k=j+1;k!==n;++k)  Ai[k] -= Aj[k]*x;\n                for(k=n-1;k>0;--k) { Ii[k] -= Ij[k]*x; --k; Ii[k] -= Ij[k]*x; }\n                if(k===0) Ii[0] -= Ij[0]*x;\n            }\n        }\n    }\n    return I;\n}\n\nnumeric.det = function det(x) {\n    var s = numeric.dim(x);\n    if(s.length !== 2 || s[0] !== s[1]) { throw new Error('numeric: det() only works on square matrices'); }\n    var n = s[0], ret = 1,i,j,k,A = numeric.clone(x),Aj,Ai,alpha,temp,k1,k2,k3;\n    for(j=0;j<n-1;j++) {\n        k=j;\n        for(i=j+1;i<n;i++) { if(Math.abs(A[i][j]) > Math.abs(A[k][j])) { k = i; } }\n        if(k !== j) {\n            temp = A[k]; A[k] = A[j]; A[j] = temp;\n            ret *= -1;\n        }\n        Aj = A[j];\n        for(i=j+1;i<n;i++) {\n            Ai = A[i];\n            alpha = Ai[j]/Aj[j];\n            for(k=j+1;k<n-1;k+=2) {\n                k1 = k+1;\n                Ai[k] -= Aj[k]*alpha;\n                Ai[k1] -= Aj[k1]*alpha;\n            }\n            if(k!==n) { Ai[k] -= Aj[k]*alpha; }\n        }\n        if(Aj[j] === 0) { return 0; }\n        ret *= Aj[j];\n    }\n    return ret*A[j][j];\n}\n\nnumeric.transpose = function transpose(x) {\n    var i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;\n    for(j=0;j<n;j++) ret[j] = Array(m);\n    for(i=m-1;i>=1;i-=2) {\n        A1 = x[i];\n        A0 = x[i-1];\n        for(j=n-1;j>=1;--j) {\n            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];\n            --j;\n            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];\n        }\n        if(j===0) {\n            Bj = ret[0]; Bj[i] = A1[0]; Bj[i-1] = A0[0];\n        }\n    }\n    if(i===0) {\n        A0 = x[0];\n        for(j=n-1;j>=1;--j) {\n            ret[j][0] = A0[j];\n            --j;\n            ret[j][0] = A0[j];\n        }\n        if(j===0) { ret[0][0] = A0[0]; }\n    }\n    return ret;\n}\nnumeric.negtranspose = function negtranspose(x) {\n    var i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;\n    for(j=0;j<n;j++) ret[j] = Array(m);\n    for(i=m-1;i>=1;i-=2) {\n        A1 = x[i];\n        A0 = x[i-1];\n        for(j=n-1;j>=1;--j) {\n            Bj = ret[j]; Bj[i] = -A1[j]; Bj[i-1] = -A0[j];\n            --j;\n            Bj = ret[j]; Bj[i] = -A1[j]; Bj[i-1] = -A0[j];\n        }\n        if(j===0) {\n            Bj = ret[0]; Bj[i] = -A1[0]; Bj[i-1] = -A0[0];\n        }\n    }\n    if(i===0) {\n        A0 = x[0];\n        for(j=n-1;j>=1;--j) {\n            ret[j][0] = -A0[j];\n            --j;\n            ret[j][0] = -A0[j];\n        }\n        if(j===0) { ret[0][0] = -A0[0]; }\n    }\n    return ret;\n}\n\nnumeric._random = function _random(s,k) {\n    var i,n=s[k],ret=Array(n), rnd;\n    if(k === s.length-1) {\n        rnd = Math.random;\n        for(i=n-1;i>=1;i-=2) {\n            ret[i] = rnd();\n            ret[i-1] = rnd();\n        }\n        if(i===0) { ret[0] = rnd(); }\n        return ret;\n    }\n    for(i=n-1;i>=0;i--) ret[i] = _random(s,k+1);\n    return ret;\n}\nnumeric.random = function random(s) { return numeric._random(s,0); }\n\nnumeric.norm2 = function norm2(x) { return Math.sqrt(numeric.norm2Squared(x)); }\n\nnumeric.linspace = function linspace(a,b,n) {\n    if(typeof n === \"undefined\") n = Math.max(Math.round(b-a)+1,1);\n    if(n<2) { return n===1?[a]:[]; }\n    var i,ret = Array(n);\n    n--;\n    for(i=n;i>=0;i--) { ret[i] = (i*b+(n-i)*a)/n; }\n    return ret;\n}\n\nnumeric.getBlock = function getBlock(x,from,to) {\n    var s = numeric.dim(x);\n    function foo(x,k) {\n        var i,a = from[k], n = to[k]-a, ret = Array(n);\n        if(k === s.length-1) {\n            for(i=n;i>=0;i--) { ret[i] = x[i+a]; }\n            return ret;\n        }\n        for(i=n;i>=0;i--) { ret[i] = foo(x[i+a],k+1); }\n        return ret;\n    }\n    return foo(x,0);\n}\n\nnumeric.setBlock = function setBlock(x,from,to,B) {\n    var s = numeric.dim(x);\n    function foo(x,y,k) {\n        var i,a = from[k], n = to[k]-a;\n        if(k === s.length-1) { for(i=n;i>=0;i--) { x[i+a] = y[i]; } }\n        for(i=n;i>=0;i--) { foo(x[i+a],y[i],k+1); }\n    }\n    foo(x,B,0);\n    return x;\n}\n\nnumeric.getRange = function getRange(A,I,J) {\n    var m = I.length, n = J.length;\n    var i,j;\n    var B = Array(m), Bi, AI;\n    for(i=m-1;i!==-1;--i) {\n        B[i] = Array(n);\n        Bi = B[i];\n        AI = A[I[i]];\n        for(j=n-1;j!==-1;--j) Bi[j] = AI[J[j]];\n    }\n    return B;\n}\n\nnumeric.blockMatrix = function blockMatrix(X) {\n    var s = numeric.dim(X);\n    if(s.length<4) return numeric.blockMatrix([X]);\n    var m=s[0],n=s[1],M,N,i,j,Xij;\n    M = 0; N = 0;\n    for(i=0;i<m;++i) M+=X[i][0].length;\n    for(j=0;j<n;++j) N+=X[0][j][0].length;\n    var Z = Array(M);\n    for(i=0;i<M;++i) Z[i] = Array(N);\n    var I=0,J,ZI,k,l,Xijk;\n    for(i=0;i<m;++i) {\n        J=N;\n        for(j=n-1;j!==-1;--j) {\n            Xij = X[i][j];\n            J -= Xij[0].length;\n            for(k=Xij.length-1;k!==-1;--k) {\n                Xijk = Xij[k];\n                ZI = Z[I+k];\n                for(l = Xijk.length-1;l!==-1;--l) ZI[J+l] = Xijk[l];\n            }\n        }\n        I += X[i][0].length;\n    }\n    return Z;\n}\n\nnumeric.tensor = function tensor(x,y) {\n    if(typeof x === \"number\" || typeof y === \"number\") return numeric.mul(x,y);\n    var s1 = numeric.dim(x), s2 = numeric.dim(y);\n    if(s1.length !== 1 || s2.length !== 1) {\n        throw new Error('numeric: tensor product is only defined for vectors');\n    }\n    var m = s1[0], n = s2[0], A = Array(m), Ai, i,j,xi;\n    for(i=m-1;i>=0;i--) {\n        Ai = Array(n);\n        xi = x[i];\n        for(j=n-1;j>=3;--j) {\n            Ai[j] = xi * y[j];\n            --j;\n            Ai[j] = xi * y[j];\n            --j;\n            Ai[j] = xi * y[j];\n            --j;\n            Ai[j] = xi * y[j];\n        }\n        while(j>=0) { Ai[j] = xi * y[j]; --j; }\n        A[i] = Ai;\n    }\n    return A;\n}\n\n// 3. The Tensor type T\nnumeric.T = function T(x,y) { this.x = x; this.y = y; }\nnumeric.t = function t(x,y) { return new numeric.T(x,y); }\n\nnumeric.Tbinop = function Tbinop(rr,rc,cr,cc,setup) {\n    var io = numeric.indexOf;\n    if(typeof setup !== \"string\") {\n        var k;\n        setup = '';\n        for(k in numeric) {\n            if(numeric.hasOwnProperty(k) && (rr.indexOf(k)>=0 || rc.indexOf(k)>=0 || cr.indexOf(k)>=0 || cc.indexOf(k)>=0) && k.length>1) {\n                setup += 'var '+k+' = numeric.'+k+';\\n';\n            }\n        }\n    }\n    return Function(['y'],\n            'var x = this;\\n'+\n            'if(!(y instanceof numeric.T)) { y = new numeric.T(y); }\\n'+\n            setup+'\\n'+\n            'if(x.y) {'+\n            '  if(y.y) {'+\n            '    return new numeric.T('+cc+');\\n'+\n            '  }\\n'+\n            '  return new numeric.T('+cr+');\\n'+\n            '}\\n'+\n            'if(y.y) {\\n'+\n            '  return new numeric.T('+rc+');\\n'+\n            '}\\n'+\n            'return new numeric.T('+rr+');\\n'\n    );\n}\n\nnumeric.T.prototype.add = numeric.Tbinop(\n        'add(x.x,y.x)',\n        'add(x.x,y.x),y.y',\n        'add(x.x,y.x),x.y',\n        'add(x.x,y.x),add(x.y,y.y)');\nnumeric.T.prototype.sub = numeric.Tbinop(\n        'sub(x.x,y.x)',\n        'sub(x.x,y.x),neg(y.y)',\n        'sub(x.x,y.x),x.y',\n        'sub(x.x,y.x),sub(x.y,y.y)');\nnumeric.T.prototype.mul = numeric.Tbinop(\n        'mul(x.x,y.x)',\n        'mul(x.x,y.x),mul(x.x,y.y)',\n        'mul(x.x,y.x),mul(x.y,y.x)',\n        'sub(mul(x.x,y.x),mul(x.y,y.y)),add(mul(x.x,y.y),mul(x.y,y.x))');\n\nnumeric.T.prototype.reciprocal = function reciprocal() {\n    var mul = numeric.mul, div = numeric.div;\n    if(this.y) {\n        var d = numeric.add(mul(this.x,this.x),mul(this.y,this.y));\n        return new numeric.T(div(this.x,d),div(numeric.neg(this.y),d));\n    }\n    return new T(div(1,this.x));\n}\nnumeric.T.prototype.div = function div(y) {\n    if(!(y instanceof numeric.T)) y = new numeric.T(y);\n    if(y.y) { return this.mul(y.reciprocal()); }\n    var div = numeric.div;\n    if(this.y) { return new numeric.T(div(this.x,y.x),div(this.y,y.x)); }\n    return new numeric.T(div(this.x,y.x));\n}\nnumeric.T.prototype.dot = numeric.Tbinop(\n        'dot(x.x,y.x)',\n        'dot(x.x,y.x),dot(x.x,y.y)',\n        'dot(x.x,y.x),dot(x.y,y.x)',\n        'sub(dot(x.x,y.x),dot(x.y,y.y)),add(dot(x.x,y.y),dot(x.y,y.x))'\n        );\nnumeric.T.prototype.transpose = function transpose() {\n    var t = numeric.transpose, x = this.x, y = this.y;\n    if(y) { return new numeric.T(t(x),t(y)); }\n    return new numeric.T(t(x));\n}\nnumeric.T.prototype.transjugate = function transjugate() {\n    var t = numeric.transpose, x = this.x, y = this.y;\n    if(y) { return new numeric.T(t(x),numeric.negtranspose(y)); }\n    return new numeric.T(t(x));\n}\nnumeric.Tunop = function Tunop(r,c,s) {\n    if(typeof s !== \"string\") { s = ''; }\n    return Function(\n            'var x = this;\\n'+\n            s+'\\n'+\n            'if(x.y) {'+\n            '  '+c+';\\n'+\n            '}\\n'+\n            r+';\\n'\n    );\n}\n\nnumeric.T.prototype.exp = numeric.Tunop(\n        'return new numeric.T(ex)',\n        'return new numeric.T(mul(cos(x.y),ex),mul(sin(x.y),ex))',\n        'var ex = numeric.exp(x.x), cos = numeric.cos, sin = numeric.sin, mul = numeric.mul;');\nnumeric.T.prototype.conj = numeric.Tunop(\n        'return new numeric.T(x.x);',\n        'return new numeric.T(x.x,numeric.neg(x.y));');\nnumeric.T.prototype.neg = numeric.Tunop(\n        'return new numeric.T(neg(x.x));',\n        'return new numeric.T(neg(x.x),neg(x.y));',\n        'var neg = numeric.neg;');\nnumeric.T.prototype.sin = numeric.Tunop(\n        'return new numeric.T(numeric.sin(x.x))',\n        'return x.exp().sub(x.neg().exp()).div(new numeric.T(0,2));');\nnumeric.T.prototype.cos = numeric.Tunop(\n        'return new numeric.T(numeric.cos(x.x))',\n        'return x.exp().add(x.neg().exp()).div(2);');\nnumeric.T.prototype.abs = numeric.Tunop(\n        'return new numeric.T(numeric.abs(x.x));',\n        'return new numeric.T(numeric.sqrt(numeric.add(mul(x.x,x.x),mul(x.y,x.y))));',\n        'var mul = numeric.mul;');\nnumeric.T.prototype.log = numeric.Tunop(\n        'return new numeric.T(numeric.log(x.x));',\n        'var theta = new numeric.T(numeric.atan2(x.y,x.x)), r = x.abs();\\n'+\n        'return new numeric.T(numeric.log(r.x),theta.x);');\nnumeric.T.prototype.norm2 = numeric.Tunop(\n        'return numeric.norm2(x.x);',\n        'var f = numeric.norm2Squared;\\n'+\n        'return Math.sqrt(f(x.x)+f(x.y));');\nnumeric.T.prototype.inv = function inv() {\n    var A = this;\n    if(typeof A.y === \"undefined\") { return new numeric.T(numeric.inv(A.x)); }\n    var n = A.x.length, i, j, k;\n    var Rx = numeric.identity(n),Ry = numeric.rep([n,n],0);\n    var Ax = numeric.clone(A.x), Ay = numeric.clone(A.y);\n    var Aix, Aiy, Ajx, Ajy, Rix, Riy, Rjx, Rjy;\n    var i,j,k,d,d1,ax,ay,bx,by,temp;\n    for(i=0;i<n;i++) {\n        ax = Ax[i][i]; ay = Ay[i][i];\n        d = ax*ax+ay*ay;\n        k = i;\n        for(j=i+1;j<n;j++) {\n            ax = Ax[j][i]; ay = Ay[j][i];\n            d1 = ax*ax+ay*ay;\n            if(d1 > d) { k=j; d = d1; }\n        }\n        if(k!==i) {\n            temp = Ax[i]; Ax[i] = Ax[k]; Ax[k] = temp;\n            temp = Ay[i]; Ay[i] = Ay[k]; Ay[k] = temp;\n            temp = Rx[i]; Rx[i] = Rx[k]; Rx[k] = temp;\n            temp = Ry[i]; Ry[i] = Ry[k]; Ry[k] = temp;\n        }\n        Aix = Ax[i]; Aiy = Ay[i];\n        Rix = Rx[i]; Riy = Ry[i];\n        ax = Aix[i]; ay = Aiy[i];\n        for(j=i+1;j<n;j++) {\n            bx = Aix[j]; by = Aiy[j];\n            Aix[j] = (bx*ax+by*ay)/d;\n            Aiy[j] = (by*ax-bx*ay)/d;\n        }\n        for(j=0;j<n;j++) {\n            bx = Rix[j]; by = Riy[j];\n            Rix[j] = (bx*ax+by*ay)/d;\n            Riy[j] = (by*ax-bx*ay)/d;\n        }\n        for(j=i+1;j<n;j++) {\n            Ajx = Ax[j]; Ajy = Ay[j];\n            Rjx = Rx[j]; Rjy = Ry[j];\n            ax = Ajx[i]; ay = Ajy[i];\n            for(k=i+1;k<n;k++) {\n                bx = Aix[k]; by = Aiy[k];\n                Ajx[k] -= bx*ax-by*ay;\n                Ajy[k] -= by*ax+bx*ay;\n            }\n            for(k=0;k<n;k++) {\n                bx = Rix[k]; by = Riy[k];\n                Rjx[k] -= bx*ax-by*ay;\n                Rjy[k] -= by*ax+bx*ay;\n            }\n        }\n    }\n    for(i=n-1;i>0;i--) {\n        Rix = Rx[i]; Riy = Ry[i];\n        for(j=i-1;j>=0;j--) {\n            Rjx = Rx[j]; Rjy = Ry[j];\n            ax = Ax[j][i]; ay = Ay[j][i];\n            for(k=n-1;k>=0;k--) {\n                bx = Rix[k]; by = Riy[k];\n                Rjx[k] -= ax*bx - ay*by;\n                Rjy[k] -= ax*by + ay*bx;\n            }\n        }\n    }\n    return new numeric.T(Rx,Ry);\n}\nnumeric.T.prototype.get = function get(i) {\n    var x = this.x, y = this.y, k = 0, ik, n = i.length;\n    if(y) {\n        while(k<n) {\n            ik = i[k];\n            x = x[ik];\n            y = y[ik];\n            k++;\n        }\n        return new numeric.T(x,y);\n    }\n    while(k<n) {\n        ik = i[k];\n        x = x[ik];\n        k++;\n    }\n    return new numeric.T(x);\n}\nnumeric.T.prototype.set = function set(i,v) {\n    var x = this.x, y = this.y, k = 0, ik, n = i.length, vx = v.x, vy = v.y;\n    if(n===0) {\n        if(vy) { this.y = vy; }\n        else if(y) { this.y = undefined; }\n        this.x = x;\n        return this;\n    }\n    if(vy) {\n        if(y) { /* ok */ }\n        else {\n            y = numeric.rep(numeric.dim(x),0);\n            this.y = y;\n        }\n        while(k<n-1) {\n            ik = i[k];\n            x = x[ik];\n            y = y[ik];\n            k++;\n        }\n        ik = i[k];\n        x[ik] = vx;\n        y[ik] = vy;\n        return this;\n    }\n    if(y) {\n        while(k<n-1) {\n            ik = i[k];\n            x = x[ik];\n            y = y[ik];\n            k++;\n        }\n        ik = i[k];\n        x[ik] = vx;\n        if(vx instanceof Array) y[ik] = numeric.rep(numeric.dim(vx),0);\n        else y[ik] = 0;\n        return this;\n    }\n    while(k<n-1) {\n        ik = i[k];\n        x = x[ik];\n        k++;\n    }\n    ik = i[k];\n    x[ik] = vx;\n    return this;\n}\nnumeric.T.prototype.getRows = function getRows(i0,i1) {\n    var n = i1-i0+1, j;\n    var rx = Array(n), ry, x = this.x, y = this.y;\n    for(j=i0;j<=i1;j++) { rx[j-i0] = x[j]; }\n    if(y) {\n        ry = Array(n);\n        for(j=i0;j<=i1;j++) { ry[j-i0] = y[j]; }\n        return new numeric.T(rx,ry);\n    }\n    return new numeric.T(rx);\n}\nnumeric.T.prototype.setRows = function setRows(i0,i1,A) {\n    var j;\n    var rx = this.x, ry = this.y, x = A.x, y = A.y;\n    for(j=i0;j<=i1;j++) { rx[j] = x[j-i0]; }\n    if(y) {\n        if(!ry) { ry = numeric.rep(numeric.dim(rx),0); this.y = ry; }\n        for(j=i0;j<=i1;j++) { ry[j] = y[j-i0]; }\n    } else if(ry) {\n        for(j=i0;j<=i1;j++) { ry[j] = numeric.rep([x[j-i0].length],0); }\n    }\n    return this;\n}\nnumeric.T.prototype.getRow = function getRow(k) {\n    var x = this.x, y = this.y;\n    if(y) { return new numeric.T(x[k],y[k]); }\n    return new numeric.T(x[k]);\n}\nnumeric.T.prototype.setRow = function setRow(i,v) {\n    var rx = this.x, ry = this.y, x = v.x, y = v.y;\n    rx[i] = x;\n    if(y) {\n        if(!ry) { ry = numeric.rep(numeric.dim(rx),0); this.y = ry; }\n        ry[i] = y;\n    } else if(ry) {\n        ry = numeric.rep([x.length],0);\n    }\n    return this;\n}\n\nnumeric.T.prototype.getBlock = function getBlock(from,to) {\n    var x = this.x, y = this.y, b = numeric.getBlock;\n    if(y) { return new numeric.T(b(x,from,to),b(y,from,to)); }\n    return new numeric.T(b(x,from,to));\n}\nnumeric.T.prototype.setBlock = function setBlock(from,to,A) {\n    if(!(A instanceof numeric.T)) A = new numeric.T(A);\n    var x = this.x, y = this.y, b = numeric.setBlock, Ax = A.x, Ay = A.y;\n    if(Ay) {\n        if(!y) { this.y = numeric.rep(numeric.dim(this),0); y = this.y; }\n        b(x,from,to,Ax);\n        b(y,from,to,Ay);\n        return this;\n    }\n    b(x,from,to,Ax);\n    if(y) b(y,from,to,numeric.rep(numeric.dim(Ax),0));\n}\nnumeric.T.rep = function rep(s,v) {\n    var T = numeric.T;\n    if(!(v instanceof T)) v = new T(v);\n    var x = v.x, y = v.y, r = numeric.rep;\n    if(y) return new T(r(s,x),r(s,y));\n    return new T(r(s,x));\n}\nnumeric.T.diag = function diag(d) {\n    if(!(d instanceof numeric.T)) d = new numeric.T(d);\n    var x = d.x, y = d.y, diag = numeric.diag;\n    if(y) return new numeric.T(diag(x),diag(y));\n    return new numeric.T(diag(x));\n}\nnumeric.T.eig = function eig() {\n    if(this.y) { throw new Error('eig: not implemented for complex matrices.'); }\n    return numeric.eig(this.x);\n}\nnumeric.T.identity = function identity(n) { return new numeric.T(numeric.identity(n)); }\nnumeric.T.prototype.getDiag = function getDiag() {\n    var n = numeric;\n    var x = this.x, y = this.y;\n    if(y) { return new n.T(n.getDiag(x),n.getDiag(y)); }\n    return new n.T(n.getDiag(x));\n}\n\n// 4. Eigenvalues of real matrices\n\nnumeric.house = function house(x) {\n    var v = numeric.clone(x);\n    var s = x[0] >= 0 ? 1 : -1;\n    var alpha = s*numeric.norm2(x);\n    v[0] += alpha;\n    var foo = numeric.norm2(v);\n    if(foo === 0) { /* this should not happen */ throw new Error('eig: internal error'); }\n    return numeric.div(v,foo);\n}\n\nnumeric.toUpperHessenberg = function toUpperHessenberg(me) {\n    var s = numeric.dim(me);\n    if(s.length !== 2 || s[0] !== s[1]) { throw new Error('numeric: toUpperHessenberg() only works on square matrices'); }\n    var m = s[0], i,j,k,x,v,A = numeric.clone(me),B,C,Ai,Ci,Q = numeric.identity(m),Qi;\n    for(j=0;j<m-2;j++) {\n        x = Array(m-j-1);\n        for(i=j+1;i<m;i++) { x[i-j-1] = A[i][j]; }\n        if(numeric.norm2(x)>0) {\n            v = numeric.house(x);\n            B = numeric.getBlock(A,[j+1,j],[m-1,m-1]);\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<m;i++) { Ai = A[i]; Ci = C[i-j-1]; for(k=j;k<m;k++) Ai[k] -= 2*Ci[k-j]; }\n            B = numeric.getBlock(A,[0,j+1],[m-1,m-1]);\n            C = numeric.tensor(numeric.dot(B,v),v);\n            for(i=0;i<m;i++) { Ai = A[i]; Ci = C[i]; for(k=j+1;k<m;k++) Ai[k] -= 2*Ci[k-j-1]; }\n            B = Array(m-j-1);\n            for(i=j+1;i<m;i++) B[i-j-1] = Q[i];\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<m;i++) { Qi = Q[i]; Ci = C[i-j-1]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }\n        }\n    }\n    return {H:A, Q:Q};\n}\n\nnumeric.epsilon = 2.220446049250313e-16;\n\nnumeric.QRFrancis = function(H,maxiter) {\n    if(typeof maxiter === \"undefined\") { maxiter = 10000; }\n    H = numeric.clone(H);\n    var H0 = numeric.clone(H);\n    var s = numeric.dim(H),m=s[0],x,v,a,b,c,d,det,tr, Hloc, Q = numeric.identity(m), Qi, Hi, B, C, Ci,i,j,k,iter;\n    if(m<3) { return {Q:Q, B:[ [0,m-1] ]}; }\n    var epsilon = numeric.epsilon;\n    for(iter=0;iter<maxiter;iter++) {\n        for(j=0;j<m-1;j++) {\n            if(Math.abs(H[j+1][j]) < epsilon*(Math.abs(H[j][j])+Math.abs(H[j+1][j+1]))) {\n                var QH1 = numeric.QRFrancis(numeric.getBlock(H,[0,0],[j,j]),maxiter);\n                var QH2 = numeric.QRFrancis(numeric.getBlock(H,[j+1,j+1],[m-1,m-1]),maxiter);\n                B = Array(j+1);\n                for(i=0;i<=j;i++) { B[i] = Q[i]; }\n                C = numeric.dot(QH1.Q,B);\n                for(i=0;i<=j;i++) { Q[i] = C[i]; }\n                B = Array(m-j-1);\n                for(i=j+1;i<m;i++) { B[i-j-1] = Q[i]; }\n                C = numeric.dot(QH2.Q,B);\n                for(i=j+1;i<m;i++) { Q[i] = C[i-j-1]; }\n                return {Q:Q,B:QH1.B.concat(numeric.add(QH2.B,j+1))};\n            }\n        }\n        a = H[m-2][m-2]; b = H[m-2][m-1];\n        c = H[m-1][m-2]; d = H[m-1][m-1];\n        tr = a+d;\n        det = (a*d-b*c);\n        Hloc = numeric.getBlock(H, [0,0], [2,2]);\n        if(tr*tr>=4*det) {\n            var s1,s2;\n            s1 = 0.5*(tr+Math.sqrt(tr*tr-4*det));\n            s2 = 0.5*(tr-Math.sqrt(tr*tr-4*det));\n            Hloc = numeric.add(numeric.sub(numeric.dot(Hloc,Hloc),\n                                           numeric.mul(Hloc,s1+s2)),\n                               numeric.diag(numeric.rep([3],s1*s2)));\n        } else {\n            Hloc = numeric.add(numeric.sub(numeric.dot(Hloc,Hloc),\n                                           numeric.mul(Hloc,tr)),\n                               numeric.diag(numeric.rep([3],det)));\n        }\n        x = [Hloc[0][0],Hloc[1][0],Hloc[2][0]];\n        v = numeric.house(x);\n        B = [H[0],H[1],H[2]];\n        C = numeric.tensor(v,numeric.dot(v,B));\n        for(i=0;i<3;i++) { Hi = H[i]; Ci = C[i]; for(k=0;k<m;k++) Hi[k] -= 2*Ci[k]; }\n        B = numeric.getBlock(H, [0,0],[m-1,2]);\n        C = numeric.tensor(numeric.dot(B,v),v);\n        for(i=0;i<m;i++) { Hi = H[i]; Ci = C[i]; for(k=0;k<3;k++) Hi[k] -= 2*Ci[k]; }\n        B = [Q[0],Q[1],Q[2]];\n        C = numeric.tensor(v,numeric.dot(v,B));\n        for(i=0;i<3;i++) { Qi = Q[i]; Ci = C[i]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }\n        var J;\n        for(j=0;j<m-2;j++) {\n            for(k=j;k<=j+1;k++) {\n                if(Math.abs(H[k+1][k]) < epsilon*(Math.abs(H[k][k])+Math.abs(H[k+1][k+1]))) {\n                    var QH1 = numeric.QRFrancis(numeric.getBlock(H,[0,0],[k,k]),maxiter);\n                    var QH2 = numeric.QRFrancis(numeric.getBlock(H,[k+1,k+1],[m-1,m-1]),maxiter);\n                    B = Array(k+1);\n                    for(i=0;i<=k;i++) { B[i] = Q[i]; }\n                    C = numeric.dot(QH1.Q,B);\n                    for(i=0;i<=k;i++) { Q[i] = C[i]; }\n                    B = Array(m-k-1);\n                    for(i=k+1;i<m;i++) { B[i-k-1] = Q[i]; }\n                    C = numeric.dot(QH2.Q,B);\n                    for(i=k+1;i<m;i++) { Q[i] = C[i-k-1]; }\n                    return {Q:Q,B:QH1.B.concat(numeric.add(QH2.B,k+1))};\n                }\n            }\n            J = Math.min(m-1,j+3);\n            x = Array(J-j);\n            for(i=j+1;i<=J;i++) { x[i-j-1] = H[i][j]; }\n            v = numeric.house(x);\n            B = numeric.getBlock(H, [j+1,j],[J,m-1]);\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<=J;i++) { Hi = H[i]; Ci = C[i-j-1]; for(k=j;k<m;k++) Hi[k] -= 2*Ci[k-j]; }\n            B = numeric.getBlock(H, [0,j+1],[m-1,J]);\n            C = numeric.tensor(numeric.dot(B,v),v);\n            for(i=0;i<m;i++) { Hi = H[i]; Ci = C[i]; for(k=j+1;k<=J;k++) Hi[k] -= 2*Ci[k-j-1]; }\n            B = Array(J-j);\n            for(i=j+1;i<=J;i++) B[i-j-1] = Q[i];\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<=J;i++) { Qi = Q[i]; Ci = C[i-j-1]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }\n        }\n    }\n    throw new Error('numeric: eigenvalue iteration does not converge -- increase maxiter?');\n}\n\nnumeric.eig = function eig(A,maxiter) {\n    var QH = numeric.toUpperHessenberg(A);\n    var QB = numeric.QRFrancis(QH.H,maxiter);\n    var T = numeric.T;\n    var n = A.length,i,k,flag = false,B = QB.B,H = numeric.dot(QB.Q,numeric.dot(QH.H,numeric.transpose(QB.Q)));\n    var Q = new T(numeric.dot(QB.Q,QH.Q)),Q0;\n    var m = B.length,j;\n    var a,b,c,d,p1,p2,disc,x,y,p,q,n1,n2;\n    var sqrt = Math.sqrt;\n    for(k=0;k<m;k++) {\n        i = B[k][0];\n        if(i === B[k][1]) {\n            // nothing\n        } else {\n            j = i+1;\n            a = H[i][i];\n            b = H[i][j];\n            c = H[j][i];\n            d = H[j][j];\n            if(b === 0 && c === 0) continue;\n            p1 = -a-d;\n            p2 = a*d-b*c;\n            disc = p1*p1-4*p2;\n            if(disc>=0) {\n                if(p1<0) x = -0.5*(p1-sqrt(disc));\n                else     x = -0.5*(p1+sqrt(disc));\n                n1 = (a-x)*(a-x)+b*b;\n                n2 = c*c+(d-x)*(d-x);\n                if(n1>n2) {\n                    n1 = sqrt(n1);\n                    p = (a-x)/n1;\n                    q = b/n1;\n                } else {\n                    n2 = sqrt(n2);\n                    p = c/n2;\n                    q = (d-x)/n2;\n                }\n                Q0 = new T([[q,-p],[p,q]]);\n                Q.setRows(i,j,Q0.dot(Q.getRows(i,j)));\n            } else {\n                x = -0.5*p1;\n                y = 0.5*sqrt(-disc);\n                n1 = (a-x)*(a-x)+b*b;\n                n2 = c*c+(d-x)*(d-x);\n                if(n1>n2) {\n                    n1 = sqrt(n1+y*y);\n                    p = (a-x)/n1;\n                    q = b/n1;\n                    x = 0;\n                    y /= n1;\n                } else {\n                    n2 = sqrt(n2+y*y);\n                    p = c/n2;\n                    q = (d-x)/n2;\n                    x = y/n2;\n                    y = 0;\n                }\n                Q0 = new T([[q,-p],[p,q]],[[x,y],[y,-x]]);\n                Q.setRows(i,j,Q0.dot(Q.getRows(i,j)));\n            }\n        }\n    }\n    var R = Q.dot(A).dot(Q.transjugate()), n = A.length, E = numeric.T.identity(n);\n    for(j=0;j<n;j++) {\n        if(j>0) {\n            for(k=j-1;k>=0;k--) {\n                var Rk = R.get([k,k]), Rj = R.get([j,j]);\n                if(numeric.neq(Rk.x,Rj.x) || numeric.neq(Rk.y,Rj.y)) {\n                    x = R.getRow(k).getBlock([k],[j-1]);\n                    y = E.getRow(j).getBlock([k],[j-1]);\n                    E.set([j,k],(R.get([k,j]).neg().sub(x.dot(y))).div(Rk.sub(Rj)));\n                } else {\n                    E.setRow(j,E.getRow(k));\n                    continue;\n                }\n            }\n        }\n    }\n    for(j=0;j<n;j++) {\n        x = E.getRow(j);\n        E.setRow(j,x.div(x.norm2()));\n    }\n    E = E.transpose();\n    E = Q.transjugate().dot(E);\n    return { lambda:R.getDiag(), E:E };\n};\n\n// 5. Compressed Column Storage matrices\nnumeric.ccsSparse = function ccsSparse(A) {\n    var m = A.length,n,foo, i,j, counts = [];\n    for(i=m-1;i!==-1;--i) {\n        foo = A[i];\n        for(j in foo) {\n            j = parseInt(j);\n            while(j>=counts.length) counts[counts.length] = 0;\n            if(foo[j]!==0) counts[j]++;\n        }\n    }\n    var n = counts.length;\n    var Ai = Array(n+1);\n    Ai[0] = 0;\n    for(i=0;i<n;++i) Ai[i+1] = Ai[i] + counts[i];\n    var Aj = Array(Ai[n]), Av = Array(Ai[n]);\n    for(i=m-1;i!==-1;--i) {\n        foo = A[i];\n        for(j in foo) {\n            if(foo[j]!==0) {\n                counts[j]--;\n                Aj[Ai[j]+counts[j]] = i;\n                Av[Ai[j]+counts[j]] = foo[j];\n            }\n        }\n    }\n    return [Ai,Aj,Av];\n}\nnumeric.ccsFull = function ccsFull(A) {\n    var Ai = A[0], Aj = A[1], Av = A[2], s = numeric.ccsDim(A), m = s[0], n = s[1], i,j,j0,j1,k;\n    var B = numeric.rep([m,n],0);\n    for(i=0;i<n;i++) {\n        j0 = Ai[i];\n        j1 = Ai[i+1];\n        for(j=j0;j<j1;++j) { B[Aj[j]][i] = Av[j]; }\n    }\n    return B;\n}\nnumeric.ccsTSolve = function ccsTSolve(A,b,x,bj,xj) {\n    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, max = Math.max,n=0;\n    if(typeof bj === \"undefined\") x = numeric.rep([m],0);\n    if(typeof bj === \"undefined\") bj = numeric.linspace(0,x.length-1);\n    if(typeof xj === \"undefined\") xj = [];\n    function dfs(j) {\n        var k;\n        if(x[j] !== 0) return;\n        x[j] = 1;\n        for(k=Ai[j];k<Ai[j+1];++k) dfs(Aj[k]);\n        xj[n] = j;\n        ++n;\n    }\n    var i,j,j0,j1,k,l,l0,l1,a;\n    for(i=bj.length-1;i!==-1;--i) { dfs(bj[i]); }\n    xj.length = n;\n    for(i=xj.length-1;i!==-1;--i) { x[xj[i]] = 0; }\n    for(i=bj.length-1;i!==-1;--i) { j = bj[i]; x[j] = b[j]; }\n    for(i=xj.length-1;i!==-1;--i) {\n        j = xj[i];\n        j0 = Ai[j];\n        j1 = max(Ai[j+1],j0);\n        for(k=j0;k!==j1;++k) { if(Aj[k] === j) { x[j] /= Av[k]; break; } }\n        a = x[j];\n        for(k=j0;k!==j1;++k) {\n            l = Aj[k];\n            if(l !== j) x[l] -= a*Av[k];\n        }\n    }\n    return x;\n}\nnumeric.ccsDFS = function ccsDFS(n) {\n    this.k = Array(n);\n    this.k1 = Array(n);\n    this.j = Array(n);\n}\nnumeric.ccsDFS.prototype.dfs = function dfs(J,Ai,Aj,x,xj,Pinv) {\n    var m = 0,foo,n=xj.length;\n    var k = this.k, k1 = this.k1, j = this.j,km,k11;\n    if(x[J]!==0) return;\n    x[J] = 1;\n    j[0] = J;\n    k[0] = km = Ai[J];\n    k1[0] = k11 = Ai[J+1];\n    while(1) {\n        if(km >= k11) {\n            xj[n] = j[m];\n            if(m===0) return;\n            ++n;\n            --m;\n            km = k[m];\n            k11 = k1[m];\n        } else {\n            foo = Pinv[Aj[km]];\n            if(x[foo] === 0) {\n                x[foo] = 1;\n                k[m] = km;\n                ++m;\n                j[m] = foo;\n                km = Ai[foo];\n                k1[m] = k11 = Ai[foo+1];\n            } else ++km;\n        }\n    }\n}\nnumeric.ccsLPSolve = function ccsLPSolve(A,B,x,xj,I,Pinv,dfs) {\n    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, n=0;\n    var Bi = B[0], Bj = B[1], Bv = B[2];\n    \n    var i,i0,i1,j,J,j0,j1,k,l,l0,l1,a;\n    i0 = Bi[I];\n    i1 = Bi[I+1];\n    xj.length = 0;\n    for(i=i0;i<i1;++i) { dfs.dfs(Pinv[Bj[i]],Ai,Aj,x,xj,Pinv); }\n    for(i=xj.length-1;i!==-1;--i) { x[xj[i]] = 0; }\n    for(i=i0;i!==i1;++i) { j = Pinv[Bj[i]]; x[j] = Bv[i]; }\n    for(i=xj.length-1;i!==-1;--i) {\n        j = xj[i];\n        j0 = Ai[j];\n        j1 = Ai[j+1];\n        for(k=j0;k<j1;++k) { if(Pinv[Aj[k]] === j) { x[j] /= Av[k]; break; } }\n        a = x[j];\n        for(k=j0;k<j1;++k) {\n            l = Pinv[Aj[k]];\n            if(l !== j) x[l] -= a*Av[k];\n        }\n    }\n    return x;\n}\nnumeric.ccsLUP1 = function ccsLUP1(A,threshold) {\n    var m = A[0].length-1;\n    var L = [numeric.rep([m+1],0),[],[]], U = [numeric.rep([m+1], 0),[],[]];\n    var Li = L[0], Lj = L[1], Lv = L[2], Ui = U[0], Uj = U[1], Uv = U[2];\n    var x = numeric.rep([m],0), xj = numeric.rep([m],0);\n    var i,j,k,j0,j1,a,e,c,d,K;\n    var sol = numeric.ccsLPSolve, max = Math.max, abs = Math.abs;\n    var P = numeric.linspace(0,m-1),Pinv = numeric.linspace(0,m-1);\n    var dfs = new numeric.ccsDFS(m);\n    if(typeof threshold === \"undefined\") { threshold = 1; }\n    for(i=0;i<m;++i) {\n        sol(L,A,x,xj,i,Pinv,dfs);\n        a = -1;\n        e = -1;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            if(k <= i) continue;\n            c = abs(x[k]);\n            if(c > a) { e = k; a = c; }\n        }\n        if(abs(x[i])<threshold*a) {\n            j = P[i];\n            a = P[e];\n            P[i] = a; Pinv[a] = i;\n            P[e] = j; Pinv[j] = e;\n            a = x[i]; x[i] = x[e]; x[e] = a;\n        }\n        a = Li[i];\n        e = Ui[i];\n        d = x[i];\n        Lj[a] = P[i];\n        Lv[a] = 1;\n        ++a;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            c = x[k];\n            xj[j] = 0;\n            x[k] = 0;\n            if(k<=i) { Uj[e] = k; Uv[e] = c;   ++e; }\n            else     { Lj[a] = P[k]; Lv[a] = c/d; ++a; }\n        }\n        Li[i+1] = a;\n        Ui[i+1] = e;\n    }\n    for(j=Lj.length-1;j!==-1;--j) { Lj[j] = Pinv[Lj[j]]; }\n    return {L:L, U:U, P:P, Pinv:Pinv};\n}\nnumeric.ccsDFS0 = function ccsDFS0(n) {\n    this.k = Array(n);\n    this.k1 = Array(n);\n    this.j = Array(n);\n}\nnumeric.ccsDFS0.prototype.dfs = function dfs(J,Ai,Aj,x,xj,Pinv,P) {\n    var m = 0,foo,n=xj.length;\n    var k = this.k, k1 = this.k1, j = this.j,km,k11;\n    if(x[J]!==0) return;\n    x[J] = 1;\n    j[0] = J;\n    k[0] = km = Ai[Pinv[J]];\n    k1[0] = k11 = Ai[Pinv[J]+1];\n    while(1) {\n        if(isNaN(km)) throw new Error(\"Ow!\");\n        if(km >= k11) {\n            xj[n] = Pinv[j[m]];\n            if(m===0) return;\n            ++n;\n            --m;\n            km = k[m];\n            k11 = k1[m];\n        } else {\n            foo = Aj[km];\n            if(x[foo] === 0) {\n                x[foo] = 1;\n                k[m] = km;\n                ++m;\n                j[m] = foo;\n                foo = Pinv[foo];\n                km = Ai[foo];\n                k1[m] = k11 = Ai[foo+1];\n            } else ++km;\n        }\n    }\n}\nnumeric.ccsLPSolve0 = function ccsLPSolve0(A,B,y,xj,I,Pinv,P,dfs) {\n    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, n=0;\n    var Bi = B[0], Bj = B[1], Bv = B[2];\n    \n    var i,i0,i1,j,J,j0,j1,k,l,l0,l1,a;\n    i0 = Bi[I];\n    i1 = Bi[I+1];\n    xj.length = 0;\n    for(i=i0;i<i1;++i) { dfs.dfs(Bj[i],Ai,Aj,y,xj,Pinv,P); }\n    for(i=xj.length-1;i!==-1;--i) { j = xj[i]; y[P[j]] = 0; }\n    for(i=i0;i!==i1;++i) { j = Bj[i]; y[j] = Bv[i]; }\n    for(i=xj.length-1;i!==-1;--i) {\n        j = xj[i];\n        l = P[j];\n        j0 = Ai[j];\n        j1 = Ai[j+1];\n        for(k=j0;k<j1;++k) { if(Aj[k] === l) { y[l] /= Av[k]; break; } }\n        a = y[l];\n        for(k=j0;k<j1;++k) y[Aj[k]] -= a*Av[k];\n        y[l] = a;\n    }\n}\nnumeric.ccsLUP0 = function ccsLUP0(A,threshold) {\n    var m = A[0].length-1;\n    var L = [numeric.rep([m+1],0),[],[]], U = [numeric.rep([m+1], 0),[],[]];\n    var Li = L[0], Lj = L[1], Lv = L[2], Ui = U[0], Uj = U[1], Uv = U[2];\n    var y = numeric.rep([m],0), xj = numeric.rep([m],0);\n    var i,j,k,j0,j1,a,e,c,d,K;\n    var sol = numeric.ccsLPSolve0, max = Math.max, abs = Math.abs;\n    var P = numeric.linspace(0,m-1),Pinv = numeric.linspace(0,m-1);\n    var dfs = new numeric.ccsDFS0(m);\n    if(typeof threshold === \"undefined\") { threshold = 1; }\n    for(i=0;i<m;++i) {\n        sol(L,A,y,xj,i,Pinv,P,dfs);\n        a = -1;\n        e = -1;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            if(k <= i) continue;\n            c = abs(y[P[k]]);\n            if(c > a) { e = k; a = c; }\n        }\n        if(abs(y[P[i]])<threshold*a) {\n            j = P[i];\n            a = P[e];\n            P[i] = a; Pinv[a] = i;\n            P[e] = j; Pinv[j] = e;\n        }\n        a = Li[i];\n        e = Ui[i];\n        d = y[P[i]];\n        Lj[a] = P[i];\n        Lv[a] = 1;\n        ++a;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            c = y[P[k]];\n            xj[j] = 0;\n            y[P[k]] = 0;\n            if(k<=i) { Uj[e] = k; Uv[e] = c;   ++e; }\n            else     { Lj[a] = P[k]; Lv[a] = c/d; ++a; }\n        }\n        Li[i+1] = a;\n        Ui[i+1] = e;\n    }\n    for(j=Lj.length-1;j!==-1;--j) { Lj[j] = Pinv[Lj[j]]; }\n    return {L:L, U:U, P:P, Pinv:Pinv};\n}\nnumeric.ccsLUP = numeric.ccsLUP0;\n\nnumeric.ccsDim = function ccsDim(A) { return [numeric.sup(A[1])+1,A[0].length-1]; }\nnumeric.ccsGetBlock = function ccsGetBlock(A,i,j) {\n    var s = numeric.ccsDim(A),m=s[0],n=s[1];\n    if(typeof i === \"undefined\") { i = numeric.linspace(0,m-1); }\n    else if(typeof i === \"number\") { i = [i]; }\n    if(typeof j === \"undefined\") { j = numeric.linspace(0,n-1); }\n    else if(typeof j === \"number\") { j = [j]; }\n    var p,p0,p1,P = i.length,q,Q = j.length,r,jq,ip;\n    var Bi = numeric.rep([n],0), Bj=[], Bv=[], B = [Bi,Bj,Bv];\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var x = numeric.rep([m],0),count=0,flags = numeric.rep([m],0);\n    for(q=0;q<Q;++q) {\n        jq = j[q];\n        var q0 = Ai[jq];\n        var q1 = Ai[jq+1];\n        for(p=q0;p<q1;++p) {\n            r = Aj[p];\n            flags[r] = 1;\n            x[r] = Av[p];\n        }\n        for(p=0;p<P;++p) {\n            ip = i[p];\n            if(flags[ip]) {\n                Bj[count] = p;\n                Bv[count] = x[i[p]];\n                ++count;\n            }\n        }\n        for(p=q0;p<q1;++p) {\n            r = Aj[p];\n            flags[r] = 0;\n        }\n        Bi[q+1] = count;\n    }\n    return B;\n}\n\nnumeric.ccsDot = function ccsDot(A,B) {\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var Bi = B[0], Bj = B[1], Bv = B[2];\n    var sA = numeric.ccsDim(A), sB = numeric.ccsDim(B);\n    var m = sA[0], n = sA[1], o = sB[1];\n    var x = numeric.rep([m],0), flags = numeric.rep([m],0), xj = Array(m);\n    var Ci = numeric.rep([o],0), Cj = [], Cv = [], C = [Ci,Cj,Cv];\n    var i,j,k,j0,j1,i0,i1,l,p,a,b;\n    for(k=0;k!==o;++k) {\n        j0 = Bi[k];\n        j1 = Bi[k+1];\n        p = 0;\n        for(j=j0;j<j1;++j) {\n            a = Bj[j];\n            b = Bv[j];\n            i0 = Ai[a];\n            i1 = Ai[a+1];\n            for(i=i0;i<i1;++i) {\n                l = Aj[i];\n                if(flags[l]===0) {\n                    xj[p] = l;\n                    flags[l] = 1;\n                    p = p+1;\n                }\n                x[l] = x[l] + Av[i]*b;\n            }\n        }\n        j0 = Ci[k];\n        j1 = j0+p;\n        Ci[k+1] = j1;\n        for(j=p-1;j!==-1;--j) {\n            b = j0+j;\n            i = xj[j];\n            Cj[b] = i;\n            Cv[b] = x[i];\n            flags[i] = 0;\n            x[i] = 0;\n        }\n        Ci[k+1] = Ci[k]+p;\n    }\n    return C;\n}\n\nnumeric.ccsLUPSolve = function ccsLUPSolve(LUP,B) {\n    var L = LUP.L, U = LUP.U, P = LUP.P;\n    var Bi = B[0];\n    var flag = false;\n    if(typeof Bi !== \"object\") { B = [[0,B.length],numeric.linspace(0,B.length-1),B]; Bi = B[0]; flag = true; }\n    var Bj = B[1], Bv = B[2];\n    var n = L[0].length-1, m = Bi.length-1;\n    var x = numeric.rep([n],0), xj = Array(n);\n    var b = numeric.rep([n],0), bj = Array(n);\n    var Xi = numeric.rep([m+1],0), Xj = [], Xv = [];\n    var sol = numeric.ccsTSolve;\n    var i,j,j0,j1,k,J,N=0;\n    for(i=0;i<m;++i) {\n        k = 0;\n        j0 = Bi[i];\n        j1 = Bi[i+1];\n        for(j=j0;j<j1;++j) { \n            J = LUP.Pinv[Bj[j]];\n            bj[k] = J;\n            b[J] = Bv[j];\n            ++k;\n        }\n        bj.length = k;\n        sol(L,b,x,bj,xj);\n        for(j=bj.length-1;j!==-1;--j) b[bj[j]] = 0;\n        sol(U,x,b,xj,bj);\n        if(flag) return b;\n        for(j=xj.length-1;j!==-1;--j) x[xj[j]] = 0;\n        for(j=bj.length-1;j!==-1;--j) {\n            J = bj[j];\n            Xj[N] = J;\n            Xv[N] = b[J];\n            b[J] = 0;\n            ++N;\n        }\n        Xi[i+1] = N;\n    }\n    return [Xi,Xj,Xv];\n}\n\nnumeric.ccsbinop = function ccsbinop(body,setup) {\n    if(typeof setup === \"undefined\") setup='';\n    return Function('X','Y',\n            'var Xi = X[0], Xj = X[1], Xv = X[2];\\n'+\n            'var Yi = Y[0], Yj = Y[1], Yv = Y[2];\\n'+\n            'var n = Xi.length-1,m = Math.max(numeric.sup(Xj),numeric.sup(Yj))+1;\\n'+\n            'var Zi = numeric.rep([n+1],0), Zj = [], Zv = [];\\n'+\n            'var x = numeric.rep([m],0),y = numeric.rep([m],0);\\n'+\n            'var xk,yk,zk;\\n'+\n            'var i,j,j0,j1,k,p=0;\\n'+\n            setup+\n            'for(i=0;i<n;++i) {\\n'+\n            '  j0 = Xi[i]; j1 = Xi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) {\\n'+\n            '    k = Xj[j];\\n'+\n            '    x[k] = 1;\\n'+\n            '    Zj[p] = k;\\n'+\n            '    ++p;\\n'+\n            '  }\\n'+\n            '  j0 = Yi[i]; j1 = Yi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) {\\n'+\n            '    k = Yj[j];\\n'+\n            '    y[k] = Yv[j];\\n'+\n            '    if(x[k] === 0) {\\n'+\n            '      Zj[p] = k;\\n'+\n            '      ++p;\\n'+\n            '    }\\n'+\n            '  }\\n'+\n            '  Zi[i+1] = p;\\n'+\n            '  j0 = Xi[i]; j1 = Xi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) x[Xj[j]] = Xv[j];\\n'+\n            '  j0 = Zi[i]; j1 = Zi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) {\\n'+\n            '    k = Zj[j];\\n'+\n            '    xk = x[k];\\n'+\n            '    yk = y[k];\\n'+\n            body+'\\n'+\n            '    Zv[j] = zk;\\n'+\n            '  }\\n'+\n            '  j0 = Xi[i]; j1 = Xi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) x[Xj[j]] = 0;\\n'+\n            '  j0 = Yi[i]; j1 = Yi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) y[Yj[j]] = 0;\\n'+\n            '}\\n'+\n            'return [Zi,Zj,Zv];'\n            );\n};\n\n(function() {\n    var k,A,B,C;\n    for(k in numeric.ops2) {\n        if(isFinite(eval('1'+numeric.ops2[k]+'0'))) A = '[Y[0],Y[1],numeric.'+k+'(X,Y[2])]';\n        else A = 'NaN';\n        if(isFinite(eval('0'+numeric.ops2[k]+'1'))) B = '[X[0],X[1],numeric.'+k+'(X[2],Y)]';\n        else B = 'NaN';\n        if(isFinite(eval('1'+numeric.ops2[k]+'0')) && isFinite(eval('0'+numeric.ops2[k]+'1'))) C = 'numeric.ccs'+k+'MM(X,Y)';\n        else C = 'NaN';\n        numeric['ccs'+k+'MM'] = numeric.ccsbinop('zk = xk '+numeric.ops2[k]+'yk;');\n        numeric['ccs'+k] = Function('X','Y',\n                'if(typeof X === \"number\") return '+A+';\\n'+\n                'if(typeof Y === \"number\") return '+B+';\\n'+\n                'return '+C+';\\n'\n                );\n    }\n}());\n\nnumeric.ccsScatter = function ccsScatter(A) {\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var n = numeric.sup(Aj)+1,m=Ai.length;\n    var Ri = numeric.rep([n],0),Rj=Array(m), Rv = Array(m);\n    var counts = numeric.rep([n],0),i;\n    for(i=0;i<m;++i) counts[Aj[i]]++;\n    for(i=0;i<n;++i) Ri[i+1] = Ri[i] + counts[i];\n    var ptr = Ri.slice(0),k,Aii;\n    for(i=0;i<m;++i) {\n        Aii = Aj[i];\n        k = ptr[Aii];\n        Rj[k] = Ai[i];\n        Rv[k] = Av[i];\n        ptr[Aii]=ptr[Aii]+1;\n    }\n    return [Ri,Rj,Rv];\n}\n\nnumeric.ccsGather = function ccsGather(A) {\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var n = Ai.length-1,m = Aj.length;\n    var Ri = Array(m), Rj = Array(m), Rv = Array(m);\n    var i,j,j0,j1,p;\n    p=0;\n    for(i=0;i<n;++i) {\n        j0 = Ai[i];\n        j1 = Ai[i+1];\n        for(j=j0;j!==j1;++j) {\n            Rj[p] = i;\n            Ri[p] = Aj[j];\n            Rv[p] = Av[j];\n            ++p;\n        }\n    }\n    return [Ri,Rj,Rv];\n}\n\n// The following sparse linear algebra routines are deprecated.\n\nnumeric.sdim = function dim(A,ret,k) {\n    if(typeof ret === \"undefined\") { ret = []; }\n    if(typeof A !== \"object\") return ret;\n    if(typeof k === \"undefined\") { k=0; }\n    if(!(k in ret)) { ret[k] = 0; }\n    if(A.length > ret[k]) ret[k] = A.length;\n    var i;\n    for(i in A) {\n        if(A.hasOwnProperty(i)) dim(A[i],ret,k+1);\n    }\n    return ret;\n};\n\nnumeric.sclone = function clone(A,k,n) {\n    if(typeof k === \"undefined\") { k=0; }\n    if(typeof n === \"undefined\") { n = numeric.sdim(A).length; }\n    var i,ret = Array(A.length);\n    if(k === n-1) {\n        for(i in A) { if(A.hasOwnProperty(i)) ret[i] = A[i]; }\n        return ret;\n    }\n    for(i in A) {\n        if(A.hasOwnProperty(i)) ret[i] = clone(A[i],k+1,n);\n    }\n    return ret;\n}\n\nnumeric.sdiag = function diag(d) {\n    var n = d.length,i,ret = Array(n),i1,i2,i3;\n    for(i=n-1;i>=1;i-=2) {\n        i1 = i-1;\n        ret[i] = []; ret[i][i] = d[i];\n        ret[i1] = []; ret[i1][i1] = d[i1];\n    }\n    if(i===0) { ret[0] = []; ret[0][0] = d[i]; }\n    return ret;\n}\n\nnumeric.sidentity = function identity(n) { return numeric.sdiag(numeric.rep([n],1)); }\n\nnumeric.stranspose = function transpose(A) {\n    var ret = [], n = A.length, i,j,Ai;\n    for(i in A) {\n        if(!(A.hasOwnProperty(i))) continue;\n        Ai = A[i];\n        for(j in Ai) {\n            if(!(Ai.hasOwnProperty(j))) continue;\n            if(typeof ret[j] !== \"object\") { ret[j] = []; }\n            ret[j][i] = Ai[j];\n        }\n    }\n    return ret;\n}\n\nnumeric.sLUP = function LUP(A,tol) {\n    throw new Error(\"The function numeric.sLUP had a bug in it and has been removed. Please use the new numeric.ccsLUP function instead.\");\n};\n\nnumeric.sdotMM = function dotMM(A,B) {\n    var p = A.length, q = B.length, BT = numeric.stranspose(B), r = BT.length, Ai, BTk;\n    var i,j,k,accum;\n    var ret = Array(p),reti;\n    for(i=p-1;i>=0;i--) {\n        reti = [];\n        Ai = A[i];\n        for(k=r-1;k>=0;k--) {\n            accum = 0;\n            BTk = BT[k];\n            for(j in Ai) {\n                if(!(Ai.hasOwnProperty(j))) continue;\n                if(j in BTk) { accum += Ai[j]*BTk[j]; }\n            }\n            if(accum) reti[k] = accum;\n        }\n        ret[i] = reti;\n    }\n    return ret;\n}\n\nnumeric.sdotMV = function dotMV(A,x) {\n    var p = A.length, Ai, i,j;\n    var ret = Array(p), accum;\n    for(i=p-1;i>=0;i--) {\n        Ai = A[i];\n        accum = 0;\n        for(j in Ai) {\n            if(!(Ai.hasOwnProperty(j))) continue;\n            if(x[j]) accum += Ai[j]*x[j];\n        }\n        if(accum) ret[i] = accum;\n    }\n    return ret;\n}\n\nnumeric.sdotVM = function dotMV(x,A) {\n    var i,j,Ai,alpha;\n    var ret = [], accum;\n    for(i in x) {\n        if(!x.hasOwnProperty(i)) continue;\n        Ai = A[i];\n        alpha = x[i];\n        for(j in Ai) {\n            if(!Ai.hasOwnProperty(j)) continue;\n            if(!ret[j]) { ret[j] = 0; }\n            ret[j] += alpha*Ai[j];\n        }\n    }\n    return ret;\n}\n\nnumeric.sdotVV = function dotVV(x,y) {\n    var i,ret=0;\n    for(i in x) { if(x[i] && y[i]) ret+= x[i]*y[i]; }\n    return ret;\n}\n\nnumeric.sdot = function dot(A,B) {\n    var m = numeric.sdim(A).length, n = numeric.sdim(B).length;\n    var k = m*1000+n;\n    switch(k) {\n    case 0: return A*B;\n    case 1001: return numeric.sdotVV(A,B);\n    case 2001: return numeric.sdotMV(A,B);\n    case 1002: return numeric.sdotVM(A,B);\n    case 2002: return numeric.sdotMM(A,B);\n    default: throw new Error('numeric.sdot not implemented for tensors of order '+m+' and '+n);\n    }\n}\n\nnumeric.sscatter = function scatter(V) {\n    var n = V[0].length, Vij, i, j, m = V.length, A = [], Aj;\n    for(i=n-1;i>=0;--i) {\n        if(!V[m-1][i]) continue;\n        Aj = A;\n        for(j=0;j<m-2;j++) {\n            Vij = V[j][i];\n            if(!Aj[Vij]) Aj[Vij] = [];\n            Aj = Aj[Vij];\n        }\n        Aj[V[j][i]] = V[j+1][i];\n    }\n    return A;\n}\n\nnumeric.sgather = function gather(A,ret,k) {\n    if(typeof ret === \"undefined\") ret = [];\n    if(typeof k === \"undefined\") k = [];\n    var n,i,Ai;\n    n = k.length;\n    for(i in A) {\n        if(A.hasOwnProperty(i)) {\n            k[n] = parseInt(i);\n            Ai = A[i];\n            if(typeof Ai === \"number\") {\n                if(Ai) {\n                    if(ret.length === 0) {\n                        for(i=n+1;i>=0;--i) ret[i] = [];\n                    }\n                    for(i=n;i>=0;--i) ret[i].push(k[i]);\n                    ret[n+1].push(Ai);\n                }\n            } else gather(Ai,ret,k);\n        }\n    }\n    if(k.length>n) k.pop();\n    return ret;\n}\n\n// 6. Coordinate matrices\nnumeric.cLU = function LU(A) {\n    var I = A[0], J = A[1], V = A[2];\n    var p = I.length, m=0, i,j,k,a,b,c;\n    for(i=0;i<p;i++) if(I[i]>m) m=I[i];\n    m++;\n    var L = Array(m), U = Array(m), left = numeric.rep([m],Infinity), right = numeric.rep([m],-Infinity);\n    var Ui, Uj,alpha;\n    for(k=0;k<p;k++) {\n        i = I[k];\n        j = J[k];\n        if(j<left[i]) left[i] = j;\n        if(j>right[i]) right[i] = j;\n    }\n    for(i=0;i<m-1;i++) { if(right[i] > right[i+1]) right[i+1] = right[i]; }\n    for(i=m-1;i>=1;i--) { if(left[i]<left[i-1]) left[i-1] = left[i]; }\n    var countL = 0, countU = 0;\n    for(i=0;i<m;i++) {\n        U[i] = numeric.rep([right[i]-left[i]+1],0);\n        L[i] = numeric.rep([i-left[i]],0);\n        countL += i-left[i]+1;\n        countU += right[i]-i+1;\n    }\n    for(k=0;k<p;k++) { i = I[k]; U[i][J[k]-left[i]] = V[k]; }\n    for(i=0;i<m-1;i++) {\n        a = i-left[i];\n        Ui = U[i];\n        for(j=i+1;left[j]<=i && j<m;j++) {\n            b = i-left[j];\n            c = right[i]-i;\n            Uj = U[j];\n            alpha = Uj[b]/Ui[a];\n            if(alpha) {\n                for(k=1;k<=c;k++) { Uj[k+b] -= alpha*Ui[k+a]; }\n                L[j][i-left[j]] = alpha;\n            }\n        }\n    }\n    var Ui = [], Uj = [], Uv = [], Li = [], Lj = [], Lv = [];\n    var p,q,foo;\n    p=0; q=0;\n    for(i=0;i<m;i++) {\n        a = left[i];\n        b = right[i];\n        foo = U[i];\n        for(j=i;j<=b;j++) {\n            if(foo[j-a]) {\n                Ui[p] = i;\n                Uj[p] = j;\n                Uv[p] = foo[j-a];\n                p++;\n            }\n        }\n        foo = L[i];\n        for(j=a;j<i;j++) {\n            if(foo[j-a]) {\n                Li[q] = i;\n                Lj[q] = j;\n                Lv[q] = foo[j-a];\n                q++;\n            }\n        }\n        Li[q] = i;\n        Lj[q] = i;\n        Lv[q] = 1;\n        q++;\n    }\n    return {U:[Ui,Uj,Uv], L:[Li,Lj,Lv]};\n};\n\nnumeric.cLUsolve = function LUsolve(lu,b) {\n    var L = lu.L, U = lu.U, ret = numeric.clone(b);\n    var Li = L[0], Lj = L[1], Lv = L[2];\n    var Ui = U[0], Uj = U[1], Uv = U[2];\n    var p = Ui.length, q = Li.length;\n    var m = ret.length,i,j,k;\n    k = 0;\n    for(i=0;i<m;i++) {\n        while(Lj[k] < i) {\n            ret[i] -= Lv[k]*ret[Lj[k]];\n            k++;\n        }\n        k++;\n    }\n    k = p-1;\n    for(i=m-1;i>=0;i--) {\n        while(Uj[k] > i) {\n            ret[i] -= Uv[k]*ret[Uj[k]];\n            k--;\n        }\n        ret[i] /= Uv[k];\n        k--;\n    }\n    return ret;\n};\n\nnumeric.cgrid = function grid(n,shape) {\n    if(typeof n === \"number\") n = [n,n];\n    var ret = numeric.rep(n,-1);\n    var i,j,count;\n    if(typeof shape !== \"function\") {\n        switch(shape) {\n        case 'L':\n            shape = function(i,j) { return (i>=n[0]/2 || j<n[1]/2); }\n            break;\n        default:\n            shape = function(i,j) { return true; };\n            break;\n        }\n    }\n    count=0;\n    for(i=1;i<n[0]-1;i++) for(j=1;j<n[1]-1;j++) \n        if(shape(i,j)) {\n            ret[i][j] = count;\n            count++;\n        }\n    return ret;\n}\n\nnumeric.cdelsq = function delsq(g) {\n    var dir = [[-1,0],[0,-1],[0,1],[1,0]];\n    var s = numeric.dim(g), m = s[0], n = s[1], i,j,k,p,q;\n    var Li = [], Lj = [], Lv = [];\n    for(i=1;i<m-1;i++) for(j=1;j<n-1;j++) {\n        if(g[i][j]<0) continue;\n        for(k=0;k<4;k++) {\n            p = i+dir[k][0];\n            q = j+dir[k][1];\n            if(g[p][q]<0) continue;\n            Li.push(g[i][j]);\n            Lj.push(g[p][q]);\n            Lv.push(-1);\n        }\n        Li.push(g[i][j]);\n        Lj.push(g[i][j]);\n        Lv.push(4);\n    }\n    return [Li,Lj,Lv];\n}\n\nnumeric.cdotMV = function dotMV(A,x) {\n    var ret, Ai = A[0], Aj = A[1], Av = A[2],k,p=Ai.length,N;\n    N=0;\n    for(k=0;k<p;k++) { if(Ai[k]>N) N = Ai[k]; }\n    N++;\n    ret = numeric.rep([N],0);\n    for(k=0;k<p;k++) { ret[Ai[k]]+=Av[k]*x[Aj[k]]; }\n    return ret;\n}\n\n// 7. Splines\n\nnumeric.Spline = function Spline(x,yl,yr,kl,kr) { this.x = x; this.yl = yl; this.yr = yr; this.kl = kl; this.kr = kr; }\nnumeric.Spline.prototype._at = function _at(x1,p) {\n    var x = this.x;\n    var yl = this.yl;\n    var yr = this.yr;\n    var kl = this.kl;\n    var kr = this.kr;\n    var x1,a,b,t;\n    var add = numeric.add, sub = numeric.sub, mul = numeric.mul;\n    a = sub(mul(kl[p],x[p+1]-x[p]),sub(yr[p+1],yl[p]));\n    b = add(mul(kr[p+1],x[p]-x[p+1]),sub(yr[p+1],yl[p]));\n    t = (x1-x[p])/(x[p+1]-x[p]);\n    var s = t*(1-t);\n    return add(add(add(mul(1-t,yl[p]),mul(t,yr[p+1])),mul(a,s*(1-t))),mul(b,s*t));\n}\nnumeric.Spline.prototype.at = function at(x0) {\n    if(typeof x0 === \"number\") {\n        var x = this.x;\n        var n = x.length;\n        var p,q,mid,floor = Math.floor,a,b,t;\n        p = 0;\n        q = n-1;\n        while(q-p>1) {\n            mid = floor((p+q)/2);\n            if(x[mid] <= x0) p = mid;\n            else q = mid;\n        }\n        return this._at(x0,p);\n    }\n    var n = x0.length, i, ret = Array(n);\n    for(i=n-1;i!==-1;--i) ret[i] = this.at(x0[i]);\n    return ret;\n}\nnumeric.Spline.prototype.diff = function diff() {\n    var x = this.x;\n    var yl = this.yl;\n    var yr = this.yr;\n    var kl = this.kl;\n    var kr = this.kr;\n    var n = yl.length;\n    var i,dx,dy;\n    var zl = kl, zr = kr, pl = Array(n), pr = Array(n);\n    var add = numeric.add, mul = numeric.mul, div = numeric.div, sub = numeric.sub;\n    for(i=n-1;i!==-1;--i) {\n        dx = x[i+1]-x[i];\n        dy = sub(yr[i+1],yl[i]);\n        pl[i] = div(add(mul(dy, 6),mul(kl[i],-4*dx),mul(kr[i+1],-2*dx)),dx*dx);\n        pr[i+1] = div(add(mul(dy,-6),mul(kl[i], 2*dx),mul(kr[i+1], 4*dx)),dx*dx);\n    }\n    return new numeric.Spline(x,zl,zr,pl,pr);\n}\nnumeric.Spline.prototype.roots = function roots() {\n    function sqr(x) { return x*x; }\n    function heval(y0,y1,k0,k1,x) {\n        var A = k0*2-(y1-y0);\n        var B = -k1*2+(y1-y0);\n        var t = (x+1)*0.5;\n        var s = t*(1-t);\n        return (1-t)*y0+t*y1+A*s*(1-t)+B*s*t;\n    }\n    var ret = [];\n    var x = this.x, yl = this.yl, yr = this.yr, kl = this.kl, kr = this.kr;\n    if(typeof yl[0] === \"number\") {\n        yl = [yl];\n        yr = [yr];\n        kl = [kl];\n        kr = [kr];\n    }\n    var m = yl.length,n=x.length-1,i,j,k,y,s,t;\n    var ai,bi,ci,di, ret = Array(m),ri,k0,k1,y0,y1,A,B,D,dx,cx,stops,z0,z1,zm,t0,t1,tm;\n    var sqrt = Math.sqrt;\n    for(i=0;i!==m;++i) {\n        ai = yl[i];\n        bi = yr[i];\n        ci = kl[i];\n        di = kr[i];\n        ri = [];\n        for(j=0;j!==n;j++) {\n            if(j>0 && bi[j]*ai[j]<0) ri.push(x[j]);\n            dx = (x[j+1]-x[j]);\n            cx = x[j];\n            y0 = ai[j];\n            y1 = bi[j+1];\n            k0 = ci[j]/dx;\n            k1 = di[j+1]/dx;\n            D = sqr(k0-k1+3*(y0-y1)) + 12*k1*y0;\n            A = k1+3*y0+2*k0-3*y1;\n            B = 3*(k1+k0+2*(y0-y1));\n            if(D<=0) {\n                z0 = A/B;\n                if(z0>x[j] && z0<x[j+1]) stops = [x[j],z0,x[j+1]];\n                else stops = [x[j],x[j+1]];\n            } else {\n                z0 = (A-sqrt(D))/B;\n                z1 = (A+sqrt(D))/B;\n                stops = [x[j]];\n                if(z0>x[j] && z0<x[j+1]) stops.push(z0);\n                if(z1>x[j] && z1<x[j+1]) stops.push(z1);\n                stops.push(x[j+1]);\n            }\n            t0 = stops[0];\n            z0 = this._at(t0,j);\n            for(k=0;k<stops.length-1;k++) {\n                t1 = stops[k+1];\n                z1 = this._at(t1,j);\n                if(z0 === 0) {\n                    ri.push(t0); \n                    t0 = t1;\n                    z0 = z1;\n                    continue;\n                }\n                if(z1 === 0 || z0*z1>0) {\n                    t0 = t1;\n                    z0 = z1;\n                    continue;\n                }\n                var side = 0;\n                while(1) {\n                    tm = (z0*t1-z1*t0)/(z0-z1);\n                    if(tm <= t0 || tm >= t1) { break; }\n                    zm = this._at(tm,j);\n                    if(zm*z1>0) {\n                        t1 = tm;\n                        z1 = zm;\n                        if(side === -1) z0*=0.5;\n                        side = -1;\n                    } else if(zm*z0>0) {\n                        t0 = tm;\n                        z0 = zm;\n                        if(side === 1) z1*=0.5;\n                        side = 1;\n                    } else break;\n                }\n                ri.push(tm);\n                t0 = stops[k+1];\n                z0 = this._at(t0, j);\n            }\n            if(z1 === 0) ri.push(t1);\n        }\n        ret[i] = ri;\n    }\n    if(typeof this.yl[0] === \"number\") return ret[0];\n    return ret;\n}\nnumeric.spline = function spline(x,y,k1,kn) {\n    var n = x.length, b = [], dx = [], dy = [];\n    var i;\n    var sub = numeric.sub,mul = numeric.mul,add = numeric.add;\n    for(i=n-2;i>=0;i--) { dx[i] = x[i+1]-x[i]; dy[i] = sub(y[i+1],y[i]); }\n    if(typeof k1 === \"string\" || typeof kn === \"string\") { \n        k1 = kn = \"periodic\";\n    }\n    // Build sparse tridiagonal system\n    var T = [[],[],[]];\n    switch(typeof k1) {\n    case \"undefined\":\n        b[0] = mul(3/(dx[0]*dx[0]),dy[0]);\n        T[0].push(0,0);\n        T[1].push(0,1);\n        T[2].push(2/dx[0],1/dx[0]);\n        break;\n    case \"string\":\n        b[0] = add(mul(3/(dx[n-2]*dx[n-2]),dy[n-2]),mul(3/(dx[0]*dx[0]),dy[0]));\n        T[0].push(0,0,0);\n        T[1].push(n-2,0,1);\n        T[2].push(1/dx[n-2],2/dx[n-2]+2/dx[0],1/dx[0]);\n        break;\n    default:\n        b[0] = k1;\n        T[0].push(0);\n        T[1].push(0);\n        T[2].push(1);\n        break;\n    }\n    for(i=1;i<n-1;i++) {\n        b[i] = add(mul(3/(dx[i-1]*dx[i-1]),dy[i-1]),mul(3/(dx[i]*dx[i]),dy[i]));\n        T[0].push(i,i,i);\n        T[1].push(i-1,i,i+1);\n        T[2].push(1/dx[i-1],2/dx[i-1]+2/dx[i],1/dx[i]);\n    }\n    switch(typeof kn) {\n    case \"undefined\":\n        b[n-1] = mul(3/(dx[n-2]*dx[n-2]),dy[n-2]);\n        T[0].push(n-1,n-1);\n        T[1].push(n-2,n-1);\n        T[2].push(1/dx[n-2],2/dx[n-2]);\n        break;\n    case \"string\":\n        T[1][T[1].length-1] = 0;\n        break;\n    default:\n        b[n-1] = kn;\n        T[0].push(n-1);\n        T[1].push(n-1);\n        T[2].push(1);\n        break;\n    }\n    if(typeof b[0] !== \"number\") b = numeric.transpose(b);\n    else b = [b];\n    var k = Array(b.length);\n    if(typeof k1 === \"string\") {\n        for(i=k.length-1;i!==-1;--i) {\n            k[i] = numeric.ccsLUPSolve(numeric.ccsLUP(numeric.ccsScatter(T)),b[i]);\n            k[i][n-1] = k[i][0];\n        }\n    } else {\n        for(i=k.length-1;i!==-1;--i) {\n            k[i] = numeric.cLUsolve(numeric.cLU(T),b[i]);\n        }\n    }\n    if(typeof y[0] === \"number\") k = k[0];\n    else k = numeric.transpose(k);\n    return new numeric.Spline(x,y,y,k,k);\n}\n\n// 8. FFT\nnumeric.fftpow2 = function fftpow2(x,y) {\n    var n = x.length;\n    if(n === 1) return;\n    var cos = Math.cos, sin = Math.sin, i,j;\n    var xe = Array(n/2), ye = Array(n/2), xo = Array(n/2), yo = Array(n/2);\n    j = n/2;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        xo[j] = x[i];\n        yo[j] = y[i];\n        --i;\n        xe[j] = x[i];\n        ye[j] = y[i];\n    }\n    fftpow2(xe,ye);\n    fftpow2(xo,yo);\n    j = n/2;\n    var t,k = (-6.2831853071795864769252867665590057683943387987502116419/n),ci,si;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        if(j === -1) j = n/2-1;\n        t = k*i;\n        ci = cos(t);\n        si = sin(t);\n        x[i] = xe[j] + ci*xo[j] - si*yo[j];\n        y[i] = ye[j] + ci*yo[j] + si*xo[j];\n    }\n}\nnumeric._ifftpow2 = function _ifftpow2(x,y) {\n    var n = x.length;\n    if(n === 1) return;\n    var cos = Math.cos, sin = Math.sin, i,j;\n    var xe = Array(n/2), ye = Array(n/2), xo = Array(n/2), yo = Array(n/2);\n    j = n/2;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        xo[j] = x[i];\n        yo[j] = y[i];\n        --i;\n        xe[j] = x[i];\n        ye[j] = y[i];\n    }\n    _ifftpow2(xe,ye);\n    _ifftpow2(xo,yo);\n    j = n/2;\n    var t,k = (6.2831853071795864769252867665590057683943387987502116419/n),ci,si;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        if(j === -1) j = n/2-1;\n        t = k*i;\n        ci = cos(t);\n        si = sin(t);\n        x[i] = xe[j] + ci*xo[j] - si*yo[j];\n        y[i] = ye[j] + ci*yo[j] + si*xo[j];\n    }\n}\nnumeric.ifftpow2 = function ifftpow2(x,y) {\n    numeric._ifftpow2(x,y);\n    numeric.diveq(x,x.length);\n    numeric.diveq(y,y.length);\n}\nnumeric.convpow2 = function convpow2(ax,ay,bx,by) {\n    numeric.fftpow2(ax,ay);\n    numeric.fftpow2(bx,by);\n    var i,n = ax.length,axi,bxi,ayi,byi;\n    for(i=n-1;i!==-1;--i) {\n        axi = ax[i]; ayi = ay[i]; bxi = bx[i]; byi = by[i];\n        ax[i] = axi*bxi-ayi*byi;\n        ay[i] = axi*byi+ayi*bxi;\n    }\n    numeric.ifftpow2(ax,ay);\n}\nnumeric.T.prototype.fft = function fft() {\n    var x = this.x, y = this.y;\n    var n = x.length, log = Math.log, log2 = log(2),\n        p = Math.ceil(log(2*n-1)/log2), m = Math.pow(2,p);\n    var cx = numeric.rep([m],0), cy = numeric.rep([m],0), cos = Math.cos, sin = Math.sin;\n    var k, c = (-3.141592653589793238462643383279502884197169399375105820/n),t;\n    var a = numeric.rep([m],0), b = numeric.rep([m],0),nhalf = Math.floor(n/2);\n    for(k=0;k<n;k++) a[k] = x[k];\n    if(typeof y !== \"undefined\") for(k=0;k<n;k++) b[k] = y[k];\n    cx[0] = 1;\n    for(k=1;k<=m/2;k++) {\n        t = c*k*k;\n        cx[k] = cos(t);\n        cy[k] = sin(t);\n        cx[m-k] = cos(t);\n        cy[m-k] = sin(t)\n    }\n    var X = new numeric.T(a,b), Y = new numeric.T(cx,cy);\n    X = X.mul(Y);\n    numeric.convpow2(X.x,X.y,numeric.clone(Y.x),numeric.neg(Y.y));\n    X = X.mul(Y);\n    X.x.length = n;\n    X.y.length = n;\n    return X;\n}\nnumeric.T.prototype.ifft = function ifft() {\n    var x = this.x, y = this.y;\n    var n = x.length, log = Math.log, log2 = log(2),\n        p = Math.ceil(log(2*n-1)/log2), m = Math.pow(2,p);\n    var cx = numeric.rep([m],0), cy = numeric.rep([m],0), cos = Math.cos, sin = Math.sin;\n    var k, c = (3.141592653589793238462643383279502884197169399375105820/n),t;\n    var a = numeric.rep([m],0), b = numeric.rep([m],0),nhalf = Math.floor(n/2);\n    for(k=0;k<n;k++) a[k] = x[k];\n    if(typeof y !== \"undefined\") for(k=0;k<n;k++) b[k] = y[k];\n    cx[0] = 1;\n    for(k=1;k<=m/2;k++) {\n        t = c*k*k;\n        cx[k] = cos(t);\n        cy[k] = sin(t);\n        cx[m-k] = cos(t);\n        cy[m-k] = sin(t)\n    }\n    var X = new numeric.T(a,b), Y = new numeric.T(cx,cy);\n    X = X.mul(Y);\n    numeric.convpow2(X.x,X.y,numeric.clone(Y.x),numeric.neg(Y.y));\n    X = X.mul(Y);\n    X.x.length = n;\n    X.y.length = n;\n    return X.div(n);\n}\n\n//9. Unconstrained optimization\nnumeric.gradient = function gradient(f,x) {\n    var n = x.length;\n    var f0 = f(x);\n    if(isNaN(f0)) throw new Error('gradient: f(x) is a NaN!');\n    var max = Math.max;\n    var i,x0 = numeric.clone(x),f1,f2, J = Array(n);\n    var div = numeric.div, sub = numeric.sub,errest,roundoff,max = Math.max,eps = 1e-3,abs = Math.abs, min = Math.min;\n    var t0,t1,t2,it=0,d1,d2,N;\n    for(i=0;i<n;i++) {\n        var h = max(1e-6*f0,1e-8);\n        while(1) {\n            ++it;\n            if(it>20) { throw new Error(\"Numerical gradient fails\"); }\n            x0[i] = x[i]+h;\n            f1 = f(x0);\n            x0[i] = x[i]-h;\n            f2 = f(x0);\n            x0[i] = x[i];\n            if(isNaN(f1) || isNaN(f2)) { h/=16; continue; }\n            J[i] = (f1-f2)/(2*h);\n            t0 = x[i]-h;\n            t1 = x[i];\n            t2 = x[i]+h;\n            d1 = (f1-f0)/h;\n            d2 = (f0-f2)/h;\n            N = max(abs(J[i]),abs(f0),abs(f1),abs(f2),abs(t0),abs(t1),abs(t2),1e-8);\n            errest = min(max(abs(d1-J[i]),abs(d2-J[i]),abs(d1-d2))/N,h/N);\n            if(errest>eps) { h/=16; }\n            else break;\n            }\n    }\n    return J;\n}\n\nnumeric.uncmin = function uncmin(f,x0,tol,gradient,maxit,callback,options) {\n    var grad = numeric.gradient;\n    if(typeof options === \"undefined\") { options = {}; }\n    if(typeof tol === \"undefined\") { tol = 1e-8; }\n    if(typeof gradient === \"undefined\") { gradient = function(x) { return grad(f,x); }; }\n    if(typeof maxit === \"undefined\") maxit = 1000;\n    x0 = numeric.clone(x0);\n    var n = x0.length;\n    var f0 = f(x0),f1,df0;\n    if(isNaN(f0)) throw new Error('uncmin: f(x0) is a NaN!');\n    var max = Math.max, norm2 = numeric.norm2;\n    tol = max(tol,numeric.epsilon);\n    var step,g0,g1,H1 = options.Hinv || numeric.identity(n);\n    var dot = numeric.dot, inv = numeric.inv, sub = numeric.sub, add = numeric.add, ten = numeric.tensor, div = numeric.div, mul = numeric.mul;\n    var all = numeric.all, isfinite = numeric.isFinite, neg = numeric.neg;\n    var it=0,i,s,x1,y,Hy,Hs,ys,i0,t,nstep,t1,t2;\n    var msg = \"\";\n    g0 = gradient(x0);\n    while(it<maxit) {\n        if(typeof callback === \"function\") { if(callback(it,x0,f0,g0,H1)) { msg = \"Callback returned true\"; break; } }\n        if(!all(isfinite(g0))) { msg = \"Gradient has Infinity or NaN\"; break; }\n        step = neg(dot(H1,g0));\n        if(!all(isfinite(step))) { msg = \"Search direction has Infinity or NaN\"; break; }\n        nstep = norm2(step);\n        if(nstep < tol) { msg=\"Newton step smaller than tol\"; break; }\n        t = 1;\n        df0 = dot(g0,step);\n        // line search\n        x1 = x0;\n        while(it < maxit) {\n            if(t*nstep < tol) { break; }\n            s = mul(step,t);\n            x1 = add(x0,s);\n            f1 = f(x1);\n            if(f1-f0 >= 0.1*t*df0 || isNaN(f1)) {\n                t *= 0.5;\n                ++it;\n                continue;\n            }\n            break;\n        }\n        if(t*nstep < tol) { msg = \"Line search step size smaller than tol\"; break; }\n        if(it === maxit) { msg = \"maxit reached during line search\"; break; }\n        g1 = gradient(x1);\n        y = sub(g1,g0);\n        ys = dot(y,s);\n        Hy = dot(H1,y);\n        H1 = sub(add(H1,\n                mul(\n                        (ys+dot(y,Hy))/(ys*ys),\n                        ten(s,s)    )),\n                div(add(ten(Hy,s),ten(s,Hy)),ys));\n        x0 = x1;\n        f0 = f1;\n        g0 = g1;\n        ++it;\n    }\n    return {solution: x0, f: f0, gradient: g0, invHessian: H1, iterations:it, message: msg};\n}\n\n// 10. Ode solver (Dormand-Prince)\nnumeric.Dopri = function Dopri(x,y,f,ymid,iterations,msg,events) {\n    this.x = x;\n    this.y = y;\n    this.f = f;\n    this.ymid = ymid;\n    this.iterations = iterations;\n    this.events = events;\n    this.message = msg;\n}\nnumeric.Dopri.prototype._at = function _at(xi,j) {\n    function sqr(x) { return x*x; }\n    var sol = this;\n    var xs = sol.x;\n    var ys = sol.y;\n    var k1 = sol.f;\n    var ymid = sol.ymid;\n    var n = xs.length;\n    var x0,x1,xh,y0,y1,yh,xi;\n    var floor = Math.floor,h;\n    var c = 0.5;\n    var add = numeric.add, mul = numeric.mul,sub = numeric.sub, p,q,w;\n    x0 = xs[j];\n    x1 = xs[j+1];\n    y0 = ys[j];\n    y1 = ys[j+1];\n    h  = x1-x0;\n    xh = x0+c*h;\n    yh = ymid[j];\n    p = sub(k1[j  ],mul(y0,1/(x0-xh)+2/(x0-x1)));\n    q = sub(k1[j+1],mul(y1,1/(x1-xh)+2/(x1-x0)));\n    w = [sqr(xi - x1) * (xi - xh) / sqr(x0 - x1) / (x0 - xh),\n         sqr(xi - x0) * sqr(xi - x1) / sqr(x0 - xh) / sqr(x1 - xh),\n         sqr(xi - x0) * (xi - xh) / sqr(x1 - x0) / (x1 - xh),\n         (xi - x0) * sqr(xi - x1) * (xi - xh) / sqr(x0-x1) / (x0 - xh),\n         (xi - x1) * sqr(xi - x0) * (xi - xh) / sqr(x0-x1) / (x1 - xh)];\n    return add(add(add(add(mul(y0,w[0]),\n                           mul(yh,w[1])),\n                           mul(y1,w[2])),\n                           mul( p,w[3])),\n                           mul( q,w[4]));\n}\nnumeric.Dopri.prototype.at = function at(x) {\n    var i,j,k,floor = Math.floor;\n    if(typeof x !== \"number\") {\n        var n = x.length, ret = Array(n);\n        for(i=n-1;i!==-1;--i) {\n            ret[i] = this.at(x[i]);\n        }\n        return ret;\n    }\n    var x0 = this.x;\n    i = 0; j = x0.length-1;\n    while(j-i>1) {\n        k = floor(0.5*(i+j));\n        if(x0[k] <= x) i = k;\n        else j = k;\n    }\n    return this._at(x,i);\n}\n\nnumeric.dopri = function dopri(x0,x1,y0,f,tol,maxit,event) {\n    if(typeof tol === \"undefined\") { tol = 1e-6; }\n    if(typeof maxit === \"undefined\") { maxit = 1000; }\n    var xs = [x0], ys = [y0], k1 = [f(x0,y0)], k2,k3,k4,k5,k6,k7, ymid = [];\n    var A2 = 1/5;\n    var A3 = [3/40,9/40];\n    var A4 = [44/45,-56/15,32/9];\n    var A5 = [19372/6561,-25360/2187,64448/6561,-212/729];\n    var A6 = [9017/3168,-355/33,46732/5247,49/176,-5103/18656];\n    var b = [35/384,0,500/1113,125/192,-2187/6784,11/84];\n    var bm = [0.5*6025192743/30085553152,\n              0,\n              0.5*51252292925/65400821598,\n              0.5*-2691868925/45128329728,\n              0.5*187940372067/1594534317056,\n              0.5*-1776094331/19743644256,\n              0.5*11237099/235043384];\n    var c = [1/5,3/10,4/5,8/9,1,1];\n    var e = [-71/57600,0,71/16695,-71/1920,17253/339200,-22/525,1/40];\n    var i = 0,er,j;\n    var h = (x1-x0)/10;\n    var it = 0;\n    var add = numeric.add, mul = numeric.mul, y1,erinf;\n    var max = Math.max, min = Math.min, abs = Math.abs, norminf = numeric.norminf,pow = Math.pow;\n    var any = numeric.any, lt = numeric.lt, and = numeric.and, sub = numeric.sub;\n    var e0, e1, ev;\n    var ret = new numeric.Dopri(xs,ys,k1,ymid,-1,\"\");\n    if(typeof event === \"function\") e0 = event(x0,y0);\n    while(x0<x1 && it<maxit) {\n        ++it;\n        if(x0+h>x1) h = x1-x0;\n        k2 = f(x0+c[0]*h,                add(y0,mul(   A2*h,k1[i])));\n        k3 = f(x0+c[1]*h,            add(add(y0,mul(A3[0]*h,k1[i])),mul(A3[1]*h,k2)));\n        k4 = f(x0+c[2]*h,        add(add(add(y0,mul(A4[0]*h,k1[i])),mul(A4[1]*h,k2)),mul(A4[2]*h,k3)));\n        k5 = f(x0+c[3]*h,    add(add(add(add(y0,mul(A5[0]*h,k1[i])),mul(A5[1]*h,k2)),mul(A5[2]*h,k3)),mul(A5[3]*h,k4)));\n        k6 = f(x0+c[4]*h,add(add(add(add(add(y0,mul(A6[0]*h,k1[i])),mul(A6[1]*h,k2)),mul(A6[2]*h,k3)),mul(A6[3]*h,k4)),mul(A6[4]*h,k5)));\n        y1 = add(add(add(add(add(y0,mul(k1[i],h*b[0])),mul(k3,h*b[2])),mul(k4,h*b[3])),mul(k5,h*b[4])),mul(k6,h*b[5]));\n        k7 = f(x0+h,y1);\n        er = add(add(add(add(add(mul(k1[i],h*e[0]),mul(k3,h*e[2])),mul(k4,h*e[3])),mul(k5,h*e[4])),mul(k6,h*e[5])),mul(k7,h*e[6]));\n        if(typeof er === \"number\") erinf = abs(er);\n        else erinf = norminf(er);\n        if(erinf > tol) { // reject\n            h = 0.2*h*pow(tol/erinf,0.25);\n            if(x0+h === x0) {\n                ret.msg = \"Step size became too small\";\n                break;\n            }\n            continue;\n        }\n        ymid[i] = add(add(add(add(add(add(y0,\n                mul(k1[i],h*bm[0])),\n                mul(k3   ,h*bm[2])),\n                mul(k4   ,h*bm[3])),\n                mul(k5   ,h*bm[4])),\n                mul(k6   ,h*bm[5])),\n                mul(k7   ,h*bm[6]));\n        ++i;\n        xs[i] = x0+h;\n        ys[i] = y1;\n        k1[i] = k7;\n        if(typeof event === \"function\") {\n            var yi,xl = x0,xr = x0+0.5*h,xi;\n            e1 = event(xr,ymid[i-1]);\n            ev = and(lt(e0,0),lt(0,e1));\n            if(!any(ev)) { xl = xr; xr = x0+h; e0 = e1; e1 = event(xr,y1); ev = and(lt(e0,0),lt(0,e1)); }\n            if(any(ev)) {\n                var xc, yc, en,ei;\n                var side=0, sl = 1.0, sr = 1.0;\n                while(1) {\n                    if(typeof e0 === \"number\") xi = (sr*e1*xl-sl*e0*xr)/(sr*e1-sl*e0);\n                    else {\n                        xi = xr;\n                        for(j=e0.length-1;j!==-1;--j) {\n                            if(e0[j]<0 && e1[j]>0) xi = min(xi,(sr*e1[j]*xl-sl*e0[j]*xr)/(sr*e1[j]-sl*e0[j]));\n                        }\n                    }\n                    if(xi <= xl || xi >= xr) break;\n                    yi = ret._at(xi, i-1);\n                    ei = event(xi,yi);\n                    en = and(lt(e0,0),lt(0,ei));\n                    if(any(en)) {\n                        xr = xi;\n                        e1 = ei;\n                        ev = en;\n                        sr = 1.0;\n                        if(side === -1) sl *= 0.5;\n                        else sl = 1.0;\n                        side = -1;\n                    } else {\n                        xl = xi;\n                        e0 = ei;\n                        sl = 1.0;\n                        if(side === 1) sr *= 0.5;\n                        else sr = 1.0;\n                        side = 1;\n                    }\n                }\n                y1 = ret._at(0.5*(x0+xi),i-1);\n                ret.f[i] = f(xi,yi);\n                ret.x[i] = xi;\n                ret.y[i] = yi;\n                ret.ymid[i-1] = y1;\n                ret.events = ev;\n                ret.iterations = it;\n                return ret;\n            }\n        }\n        x0 += h;\n        y0 = y1;\n        e0 = e1;\n        h = min(0.8*h*pow(tol/erinf,0.25),4*h);\n    }\n    ret.iterations = it;\n    return ret;\n}\n\n// 11. Ax = b\nnumeric.LU = function(A, fast) {\n  fast = fast || false;\n\n  var abs = Math.abs;\n  var i, j, k, absAjk, Akk, Ak, Pk, Ai;\n  var max;\n  var n = A.length, n1 = n-1;\n  var P = new Array(n);\n  if(!fast) A = numeric.clone(A);\n\n  for (k = 0; k < n; ++k) {\n    Pk = k;\n    Ak = A[k];\n    max = abs(Ak[k]);\n    for (j = k + 1; j < n; ++j) {\n      absAjk = abs(A[j][k]);\n      if (max < absAjk) {\n        max = absAjk;\n        Pk = j;\n      }\n    }\n    P[k] = Pk;\n\n    if (Pk != k) {\n      A[k] = A[Pk];\n      A[Pk] = Ak;\n      Ak = A[k];\n    }\n\n    Akk = Ak[k];\n\n    for (i = k + 1; i < n; ++i) {\n      A[i][k] /= Akk;\n    }\n\n    for (i = k + 1; i < n; ++i) {\n      Ai = A[i];\n      for (j = k + 1; j < n1; ++j) {\n        Ai[j] -= Ai[k] * Ak[j];\n        ++j;\n        Ai[j] -= Ai[k] * Ak[j];\n      }\n      if(j===n1) Ai[j] -= Ai[k] * Ak[j];\n    }\n  }\n\n  return {\n    LU: A,\n    P:  P\n  };\n}\n\nnumeric.LUsolve = function LUsolve(LUP, b) {\n  var i, j;\n  var LU = LUP.LU;\n  var n   = LU.length;\n  var x = numeric.clone(b);\n  var P   = LUP.P;\n  var Pi, LUi, LUii, tmp;\n\n  for (i=n-1;i!==-1;--i) x[i] = b[i];\n  for (i = 0; i < n; ++i) {\n    Pi = P[i];\n    if (P[i] !== i) {\n      tmp = x[i];\n      x[i] = x[Pi];\n      x[Pi] = tmp;\n    }\n\n    LUi = LU[i];\n    for (j = 0; j < i; ++j) {\n      x[i] -= x[j] * LUi[j];\n    }\n  }\n\n  for (i = n - 1; i >= 0; --i) {\n    LUi = LU[i];\n    for (j = i + 1; j < n; ++j) {\n      x[i] -= x[j] * LUi[j];\n    }\n\n    x[i] /= LUi[i];\n  }\n\n  return x;\n}\n\nnumeric.solve = function solve(A,b,fast) { return numeric.LUsolve(numeric.LU(A,fast), b); }\n\n// 12. Linear programming\nnumeric.echelonize = function echelonize(A) {\n    var s = numeric.dim(A), m = s[0], n = s[1];\n    var I = numeric.identity(m);\n    var P = Array(m);\n    var i,j,k,l,Ai,Ii,Z,a;\n    var abs = Math.abs;\n    var diveq = numeric.diveq;\n    A = numeric.clone(A);\n    for(i=0;i<m;++i) {\n        k = 0;\n        Ai = A[i];\n        Ii = I[i];\n        for(j=1;j<n;++j) if(abs(Ai[k])<abs(Ai[j])) k=j;\n        P[i] = k;\n        diveq(Ii,Ai[k]);\n        diveq(Ai,Ai[k]);\n        for(j=0;j<m;++j) if(j!==i) {\n            Z = A[j]; a = Z[k];\n            for(l=n-1;l!==-1;--l) Z[l] -= Ai[l]*a;\n            Z = I[j];\n            for(l=m-1;l!==-1;--l) Z[l] -= Ii[l]*a;\n        }\n    }\n    return {I:I, A:A, P:P};\n}\n\nnumeric.__solveLP = function __solveLP(c,A,b,tol,maxit,x,flag) {\n    var sum = numeric.sum, log = numeric.log, mul = numeric.mul, sub = numeric.sub, dot = numeric.dot, div = numeric.div, add = numeric.add;\n    var m = c.length, n = b.length,y;\n    var unbounded = false, cb,i0=0;\n    var alpha = 1.0;\n    var f0,df0,AT = numeric.transpose(A), svd = numeric.svd,transpose = numeric.transpose,leq = numeric.leq, sqrt = Math.sqrt, abs = Math.abs;\n    var muleq = numeric.muleq;\n    var norm = numeric.norminf, any = numeric.any,min = Math.min;\n    var all = numeric.all, gt = numeric.gt;\n    var p = Array(m), A0 = Array(n),e=numeric.rep([n],1), H;\n    var solve = numeric.solve, z = sub(b,dot(A,x)),count;\n    var dotcc = dot(c,c);\n    var g;\n    for(count=i0;count<maxit;++count) {\n        var i,j,d;\n        for(i=n-1;i!==-1;--i) A0[i] = div(A[i],z[i]);\n        var A1 = transpose(A0);\n        for(i=m-1;i!==-1;--i) p[i] = (/*x[i]+*/sum(A1[i]));\n        alpha = 0.25*abs(dotcc/dot(c,p));\n        var a1 = 100*sqrt(dotcc/dot(p,p));\n        if(!isFinite(alpha) || alpha>a1) alpha = a1;\n        g = add(c,mul(alpha,p));\n        H = dot(A1,A0);\n        for(i=m-1;i!==-1;--i) H[i][i] += 1;\n        d = solve(H,div(g,alpha),true);\n        var t0 = div(z,dot(A,d));\n        var t = 1.0;\n        for(i=n-1;i!==-1;--i) if(t0[i]<0) t = min(t,-0.999*t0[i]);\n        y = sub(x,mul(d,t));\n        z = sub(b,dot(A,y));\n        if(!all(gt(z,0))) return { solution: x, message: \"\", iterations: count };\n        x = y;\n        if(alpha<tol) return { solution: y, message: \"\", iterations: count };\n        if(flag) {\n            var s = dot(c,g), Ag = dot(A,g);\n            unbounded = true;\n            for(i=n-1;i!==-1;--i) if(s*Ag[i]<0) { unbounded = false; break; }\n        } else {\n            if(x[m-1]>=0) unbounded = false;\n            else unbounded = true;\n        }\n        if(unbounded) return { solution: y, message: \"Unbounded\", iterations: count };\n    }\n    return { solution: x, message: \"maximum iteration count exceeded\", iterations:count };\n}\n\nnumeric._solveLP = function _solveLP(c,A,b,tol,maxit) {\n    var m = c.length, n = b.length,y;\n    var sum = numeric.sum, log = numeric.log, mul = numeric.mul, sub = numeric.sub, dot = numeric.dot, div = numeric.div, add = numeric.add;\n    var c0 = numeric.rep([m],0).concat([1]);\n    var J = numeric.rep([n,1],-1);\n    var A0 = numeric.blockMatrix([[A                   ,   J  ]]);\n    var b0 = b;\n    var y = numeric.rep([m],0).concat(Math.max(0,numeric.sup(numeric.neg(b)))+1);\n    var x0 = numeric.__solveLP(c0,A0,b0,tol,maxit,y,false);\n    var x = numeric.clone(x0.solution);\n    x.length = m;\n    var foo = numeric.inf(sub(b,dot(A,x)));\n    if(foo<0) { return { solution: NaN, message: \"Infeasible\", iterations: x0.iterations }; }\n    var ret = numeric.__solveLP(c, A, b, tol, maxit-x0.iterations, x, true);\n    ret.iterations += x0.iterations;\n    return ret;\n};\n\nnumeric.solveLP = function solveLP(c,A,b,Aeq,beq,tol,maxit) {\n    if(typeof maxit === \"undefined\") maxit = 1000;\n    if(typeof tol === \"undefined\") tol = numeric.epsilon;\n    if(typeof Aeq === \"undefined\") return numeric._solveLP(c,A,b,tol,maxit);\n    var m = Aeq.length, n = Aeq[0].length, o = A.length;\n    var B = numeric.echelonize(Aeq);\n    var flags = numeric.rep([n],0);\n    var P = B.P;\n    var Q = [];\n    var i;\n    for(i=P.length-1;i!==-1;--i) flags[P[i]] = 1;\n    for(i=n-1;i!==-1;--i) if(flags[i]===0) Q.push(i);\n    var g = numeric.getRange;\n    var I = numeric.linspace(0,m-1), J = numeric.linspace(0,o-1);\n    var Aeq2 = g(Aeq,I,Q), A1 = g(A,J,P), A2 = g(A,J,Q), dot = numeric.dot, sub = numeric.sub;\n    var A3 = dot(A1,B.I);\n    var A4 = sub(A2,dot(A3,Aeq2)), b4 = sub(b,dot(A3,beq));\n    var c1 = Array(P.length), c2 = Array(Q.length);\n    for(i=P.length-1;i!==-1;--i) c1[i] = c[P[i]];\n    for(i=Q.length-1;i!==-1;--i) c2[i] = c[Q[i]];\n    var c4 = sub(c2,dot(c1,dot(B.I,Aeq2)));\n    var S = numeric._solveLP(c4,A4,b4,tol,maxit);\n    var x2 = S.solution;\n    if(x2!==x2) return S;\n    var x1 = dot(B.I,sub(beq,dot(Aeq2,x2)));\n    var x = Array(c.length);\n    for(i=P.length-1;i!==-1;--i) x[P[i]] = x1[i];\n    for(i=Q.length-1;i!==-1;--i) x[Q[i]] = x2[i];\n    return { solution: x, message:S.message, iterations: S.iterations };\n}\n\nnumeric.MPStoLP = function MPStoLP(MPS) {\n    if(MPS instanceof String) { MPS.split('\\n'); }\n    var state = 0;\n    var states = ['Initial state','NAME','ROWS','COLUMNS','RHS','BOUNDS','ENDATA'];\n    var n = MPS.length;\n    var i,j,z,N=0,rows = {}, sign = [], rl = 0, vars = {}, nv = 0;\n    var name;\n    var c = [], A = [], b = [];\n    function err(e) { throw new Error('MPStoLP: '+e+'\\nLine '+i+': '+MPS[i]+'\\nCurrent state: '+states[state]+'\\n'); }\n    for(i=0;i<n;++i) {\n        z = MPS[i];\n        var w0 = z.match(/\\S*/g);\n        var w = [];\n        for(j=0;j<w0.length;++j) if(w0[j]!==\"\") w.push(w0[j]);\n        if(w.length === 0) continue;\n        for(j=0;j<states.length;++j) if(z.substr(0,states[j].length) === states[j]) break;\n        if(j<states.length) {\n            state = j;\n            if(j===1) { name = w[1]; }\n            if(j===6) return { name:name, c:c, A:numeric.transpose(A), b:b, rows:rows, vars:vars };\n            continue;\n        }\n        switch(state) {\n        case 0: case 1: err('Unexpected line');\n        case 2: \n            switch(w[0]) {\n            case 'N': if(N===0) N = w[1]; else err('Two or more N rows'); break;\n            case 'L': rows[w[1]] = rl; sign[rl] = 1; b[rl] = 0; ++rl; break;\n            case 'G': rows[w[1]] = rl; sign[rl] = -1;b[rl] = 0; ++rl; break;\n            case 'E': rows[w[1]] = rl; sign[rl] = 0;b[rl] = 0; ++rl; break;\n            default: err('Parse error '+numeric.prettyPrint(w));\n            }\n            break;\n        case 3:\n            if(!vars.hasOwnProperty(w[0])) { vars[w[0]] = nv; c[nv] = 0; A[nv] = numeric.rep([rl],0); ++nv; }\n            var p = vars[w[0]];\n            for(j=1;j<w.length;j+=2) {\n                if(w[j] === N) { c[p] = parseFloat(w[j+1]); continue; }\n                var q = rows[w[j]];\n                A[p][q] = (sign[q]<0?-1:1)*parseFloat(w[j+1]);\n            }\n            break;\n        case 4:\n            for(j=1;j<w.length;j+=2) b[rows[w[j]]] = (sign[rows[w[j]]]<0?-1:1)*parseFloat(w[j+1]);\n            break;\n        case 5: /*FIXME*/ break;\n        case 6: err('Internal error');\n        }\n    }\n    err('Reached end of file without ENDATA');\n}\n// seedrandom.js version 2.0.\n// Author: David Bau 4/2/2011\n//\n// Defines a method Math.seedrandom() that, when called, substitutes\n// an explicitly seeded RC4-based algorithm for Math.random().  Also\n// supports automatic seeding from local or network sources of entropy.\n//\n// Usage:\n//\n//   <script src=http://davidbau.com/encode/seedrandom-min.js></script>\n//\n//   Math.seedrandom('yipee'); Sets Math.random to a function that is\n//                             initialized using the given explicit seed.\n//\n//   Math.seedrandom();        Sets Math.random to a function that is\n//                             seeded using the current time, dom state,\n//                             and other accumulated local entropy.\n//                             The generated seed string is returned.\n//\n//   Math.seedrandom('yowza', true);\n//                             Seeds using the given explicit seed mixed\n//                             together with accumulated entropy.\n//\n//   <script src=\"http://bit.ly/srandom-512\"></script>\n//                             Seeds using physical random bits downloaded\n//                             from random.org.\n//\n//   <script src=\"https://jsonlib.appspot.com/urandom?callback=Math.seedrandom\">\n//   </script>                 Seeds using urandom bits from call.jsonlib.com,\n//                             which is faster than random.org.\n//\n// Examples:\n//\n//   Math.seedrandom(\"hello\");            // Use \"hello\" as the seed.\n//   document.write(Math.random());       // Always 0.5463663768140734\n//   document.write(Math.random());       // Always 0.43973793770592234\n//   var rng1 = Math.random;              // Remember the current prng.\n//\n//   var autoseed = Math.seedrandom();    // New prng with an automatic seed.\n//   document.write(Math.random());       // Pretty much unpredictable.\n//\n//   Math.random = rng1;                  // Continue \"hello\" prng sequence.\n//   document.write(Math.random());       // Always 0.554769432473455\n//\n//   Math.seedrandom(autoseed);           // Restart at the previous seed.\n//   document.write(Math.random());       // Repeat the 'unpredictable' value.\n//\n// Notes:\n//\n// Each time seedrandom('arg') is called, entropy from the passed seed\n// is accumulated in a pool to help generate future seeds for the\n// zero-argument form of Math.seedrandom, so entropy can be injected over\n// time by calling seedrandom with explicit data repeatedly.\n//\n// On speed - This javascript implementation of Math.random() is about\n// 3-10x slower than the built-in Math.random() because it is not native\n// code, but this is typically fast enough anyway.  Seeding is more expensive,\n// especially if you use auto-seeding.  Some details (timings on Chrome 4):\n//\n// Our Math.random()            - avg less than 0.002 milliseconds per call\n// seedrandom('explicit')       - avg less than 0.5 milliseconds per call\n// seedrandom('explicit', true) - avg less than 2 milliseconds per call\n// seedrandom()                 - avg about 38 milliseconds per call\n//\n// LICENSE (BSD):\n//\n// Copyright 2010 David Bau, all rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n// \n//   1. Redistributions of source code must retain the above copyright\n//      notice, this list of conditions and the following disclaimer.\n//\n//   2. Redistributions in binary form must reproduce the above copyright\n//      notice, this list of conditions and the following disclaimer in the\n//      documentation and/or other materials provided with the distribution.\n// \n//   3. Neither the name of this module nor the names of its contributors may\n//      be used to endorse or promote products derived from this software\n//      without specific prior written permission.\n// \n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n/**\n * All code is in an anonymous closure to keep the global namespace clean.\n *\n * @param {number=} overflow \n * @param {number=} startdenom\n */\n\n// Patched by Seb so that seedrandom.js does not pollute the Math object.\n// My tests suggest that doing Math.trouble = 1 makes Math lookups about 5%\n// slower.\nnumeric.seedrandom = { pow:Math.pow, random:Math.random };\n\n(function (pool, math, width, chunks, significance, overflow, startdenom) {\n\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nmath['seedrandom'] = function seedrandom(seed, use_entropy) {\n  var key = [];\n  var arc4;\n\n  // Flatten the seed string or build one from local entropy if needed.\n  seed = mixkey(flatten(\n    use_entropy ? [seed, pool] :\n    arguments.length ? seed :\n    [new Date().getTime(), pool, window], 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  arc4 = new ARC4(key);\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(arc4.S, pool);\n\n  // Override Math.random\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n\n  math['random'] = function random() {  // Closure to return a random double:\n    var n = arc4.g(chunks);             // Start with a numerator n < 2 ^ 48\n    var d = startdenom;                 //   and denominator d = 2 ^ 48.\n    var x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  // Return the seed that was used\n  return seed;\n};\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\n/** @constructor */\nfunction ARC4(key) {\n  var t, u, me = this, keylen = key.length;\n  var i = 0, j = me.i = me.j = me.m = 0;\n  me.S = [];\n  me.c = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) { me.S[i] = i++; }\n  for (i = 0; i < width; i++) {\n    t = me.S[i];\n    j = lowbits(j + t + key[i % keylen]);\n    u = me.S[j];\n    me.S[i] = u;\n    me.S[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  me.g = function getnext(count) {\n    var s = me.S;\n    var i = lowbits(me.i + 1); var t = s[i];\n    var j = lowbits(me.j + t); var u = s[j];\n    s[i] = u;\n    s[j] = t;\n    var r = s[lowbits(t + u)];\n    while (--count) {\n      i = lowbits(i + 1); t = s[i];\n      j = lowbits(j + t); u = s[j];\n      s[i] = u;\n      s[j] = t;\n      r = r * width + s[lowbits(t + u)];\n    }\n    me.i = i;\n    me.j = j;\n    return r;\n  };\n  // For robust unpredictability discard an initial batch of values.\n  // See http://www.rsa.com/rsalabs/node.asp?id=2009\n  me.g(width);\n}\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\n/** @param {Object=} result \n  * @param {string=} prop\n  * @param {string=} typ */\nfunction flatten(obj, depth, result, prop, typ) {\n  result = [];\n  typ = typeof(obj);\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      if (prop.indexOf('S') < 5) {    // Avoid FF3 bug (local/sessionStorage)\n        try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n      }\n    }\n  }\n  return (result.length ? result : obj + (typ != 'string' ? '\\0' : ''));\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\n/** @param {number=} smear \n  * @param {number=} j */\nfunction mixkey(seed, key, smear, j) {\n  seed += '';                         // Ensure the seed is a string\n  smear = 0;\n  for (j = 0; j < seed.length; j++) {\n    key[lowbits(j)] =\n      lowbits((smear ^= key[lowbits(j)] * 19) + seed.charCodeAt(j));\n  }\n  seed = '';\n  for (j in key) { seed += String.fromCharCode(key[j]); }\n  return seed;\n}\n\n//\n// lowbits()\n// A quick \"n mod width\" for width a power of 2.\n//\nfunction lowbits(n) { return n & (width - 1); }\n\n//\n// The following constants are related to IEEE 754 limits.\n//\nstartdenom = math.pow(width, chunks);\nsignificance = math.pow(2, significance);\noverflow = significance * 2;\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to intefere with determinstic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n// End anonymous scope, and pass initial values.\n}(\n  [],   // pool: entropy pool starts empty\n  numeric.seedrandom, // math: package containing random, pow, and seedrandom\n  256,  // width: each RC4 output is 0 <= x < 256\n  6,    // chunks: at least six RC4 outputs for each double\n  52    // significance: there are 52 significant digits in a double\n  ));\n/* This file is a slightly modified version of quadprog.js from Alberto Santini.\n * It has been slightly modified by Sébastien Loisel to make sure that it handles\n * 0-based Arrays instead of 1-based Arrays.\n * License is in resources/LICENSE.quadprog */\n(function(exports) {\n\nfunction base0to1(A) {\n    if(typeof A !== \"object\") { return A; }\n    var ret = [], i,n=A.length;\n    for(i=0;i<n;i++) ret[i+1] = base0to1(A[i]);\n    return ret;\n}\nfunction base1to0(A) {\n    if(typeof A !== \"object\") { return A; }\n    var ret = [], i,n=A.length;\n    for(i=1;i<n;i++) ret[i-1] = base1to0(A[i]);\n    return ret;\n}\n\nfunction dpori(a, lda, n) {\n    var i, j, k, kp1, t;\n\n    for (k = 1; k <= n; k = k + 1) {\n        a[k][k] = 1 / a[k][k];\n        t = -a[k][k];\n        //~ dscal(k - 1, t, a[1][k], 1);\n        for (i = 1; i < k; i = i + 1) {\n            a[i][k] = t * a[i][k];\n        }\n\n        kp1 = k + 1;\n        if (n < kp1) {\n            break;\n        }\n        for (j = kp1; j <= n; j = j + 1) {\n            t = a[k][j];\n            a[k][j] = 0;\n            //~ daxpy(k, t, a[1][k], 1, a[1][j], 1);\n            for (i = 1; i <= k; i = i + 1) {\n                a[i][j] = a[i][j] + (t * a[i][k]);\n            }\n        }\n    }\n\n}\n\nfunction dposl(a, lda, n, b) {\n    var i, k, kb, t;\n\n    for (k = 1; k <= n; k = k + 1) {\n        //~ t = ddot(k - 1, a[1][k], 1, b[1], 1);\n        t = 0;\n        for (i = 1; i < k; i = i + 1) {\n            t = t + (a[i][k] * b[i]);\n        }\n\n        b[k] = (b[k] - t) / a[k][k];\n    }\n\n    for (kb = 1; kb <= n; kb = kb + 1) {\n        k = n + 1 - kb;\n        b[k] = b[k] / a[k][k];\n        t = -b[k];\n        //~ daxpy(k - 1, t, a[1][k], 1, b[1], 1);\n        for (i = 1; i < k; i = i + 1) {\n            b[i] = b[i] + (t * a[i][k]);\n        }\n    }\n}\n\nfunction dpofa(a, lda, n, info) {\n    var i, j, jm1, k, t, s;\n\n    for (j = 1; j <= n; j = j + 1) {\n        info[1] = j;\n        s = 0;\n        jm1 = j - 1;\n        if (jm1 < 1) {\n            s = a[j][j] - s;\n            if (s <= 0) {\n                break;\n            }\n            a[j][j] = Math.sqrt(s);\n        } else {\n            for (k = 1; k <= jm1; k = k + 1) {\n                //~ t = a[k][j] - ddot(k - 1, a[1][k], 1, a[1][j], 1);\n                t = a[k][j];\n                for (i = 1; i < k; i = i + 1) {\n                    t = t - (a[i][j] * a[i][k]);\n                }\n                t = t / a[k][k];\n                a[k][j] = t;\n                s = s + t * t;\n            }\n            s = a[j][j] - s;\n            if (s <= 0) {\n                break;\n            }\n            a[j][j] = Math.sqrt(s);\n        }\n        info[1] = 0;\n    }\n}\n\nfunction qpgen2(dmat, dvec, fddmat, n, sol, crval, amat,\n    bvec, fdamat, q, meq, iact, nact, iter, work, ierr) {\n\n    var i, j, l, l1, info, it1, iwzv, iwrv, iwrm, iwsv, iwuv, nvl, r, iwnbv,\n        temp, sum, t1, tt, gc, gs, nu,\n        t1inf, t2min,\n        vsmall, tmpa, tmpb,\n        go;\n\n    r = Math.min(n, q);\n    l = 2 * n + (r * (r + 5)) / 2 + 2 * q + 1;\n\n    vsmall = 1.0e-60;\n    do {\n        vsmall = vsmall + vsmall;\n        tmpa = 1 + 0.1 * vsmall;\n        tmpb = 1 + 0.2 * vsmall;\n    } while (tmpa <= 1 || tmpb <= 1);\n\n    for (i = 1; i <= n; i = i + 1) {\n        work[i] = dvec[i];\n    }\n    for (i = n + 1; i <= l; i = i + 1) {\n        work[i] = 0;\n    }\n    for (i = 1; i <= q; i = i + 1) {\n        iact[i] = 0;\n    }\n\n    info = [];\n\n    if (ierr[1] === 0) {\n        dpofa(dmat, fddmat, n, info);\n        if (info[1] !== 0) {\n            ierr[1] = 2;\n            return;\n        }\n        dposl(dmat, fddmat, n, dvec);\n        dpori(dmat, fddmat, n);\n    } else {\n        for (j = 1; j <= n; j = j + 1) {\n            sol[j] = 0;\n            for (i = 1; i <= j; i = i + 1) {\n                sol[j] = sol[j] + dmat[i][j] * dvec[i];\n            }\n        }\n        for (j = 1; j <= n; j = j + 1) {\n            dvec[j] = 0;\n            for (i = j; i <= n; i = i + 1) {\n                dvec[j] = dvec[j] + dmat[j][i] * sol[i];\n            }\n        }\n    }\n\n    crval[1] = 0;\n    for (j = 1; j <= n; j = j + 1) {\n        sol[j] = dvec[j];\n        crval[1] = crval[1] + work[j] * sol[j];\n        work[j] = 0;\n        for (i = j + 1; i <= n; i = i + 1) {\n            dmat[i][j] = 0;\n        }\n    }\n    crval[1] = -crval[1] / 2;\n    ierr[1] = 0;\n\n    iwzv = n;\n    iwrv = iwzv + n;\n    iwuv = iwrv + r;\n    iwrm = iwuv + r + 1;\n    iwsv = iwrm + (r * (r + 1)) / 2;\n    iwnbv = iwsv + q;\n\n    for (i = 1; i <= q; i = i + 1) {\n        sum = 0;\n        for (j = 1; j <= n; j = j + 1) {\n            sum = sum + amat[j][i] * amat[j][i];\n        }\n        work[iwnbv + i] = Math.sqrt(sum);\n    }\n    nact = 0;\n    iter[1] = 0;\n    iter[2] = 0;\n\n    function fn_goto_50() {\n        iter[1] = iter[1] + 1;\n\n        l = iwsv;\n        for (i = 1; i <= q; i = i + 1) {\n            l = l + 1;\n            sum = -bvec[i];\n            for (j = 1; j <= n; j = j + 1) {\n                sum = sum + amat[j][i] * sol[j];\n            }\n            if (Math.abs(sum) < vsmall) {\n                sum = 0;\n            }\n            if (i > meq) {\n                work[l] = sum;\n            } else {\n                work[l] = -Math.abs(sum);\n                if (sum > 0) {\n                    for (j = 1; j <= n; j = j + 1) {\n                        amat[j][i] = -amat[j][i];\n                    }\n                    bvec[i] = -bvec[i];\n                }\n            }\n        }\n\n        for (i = 1; i <= nact; i = i + 1) {\n            work[iwsv + iact[i]] = 0;\n        }\n\n        nvl = 0;\n        temp = 0;\n        for (i = 1; i <= q; i = i + 1) {\n            if (work[iwsv + i] < temp * work[iwnbv + i]) {\n                nvl = i;\n                temp = work[iwsv + i] / work[iwnbv + i];\n            }\n        }\n        if (nvl === 0) {\n            return 999;\n        }\n\n        return 0;\n    }\n\n    function fn_goto_55() {\n        for (i = 1; i <= n; i = i + 1) {\n            sum = 0;\n            for (j = 1; j <= n; j = j + 1) {\n                sum = sum + dmat[j][i] * amat[j][nvl];\n            }\n            work[i] = sum;\n        }\n\n        l1 = iwzv;\n        for (i = 1; i <= n; i = i + 1) {\n            work[l1 + i] = 0;\n        }\n        for (j = nact + 1; j <= n; j = j + 1) {\n            for (i = 1; i <= n; i = i + 1) {\n                work[l1 + i] = work[l1 + i] + dmat[i][j] * work[j];\n            }\n        }\n\n        t1inf = true;\n        for (i = nact; i >= 1; i = i - 1) {\n            sum = work[i];\n            l = iwrm + (i * (i + 3)) / 2;\n            l1 = l - i;\n            for (j = i + 1; j <= nact; j = j + 1) {\n                sum = sum - work[l] * work[iwrv + j];\n                l = l + j;\n            }\n            sum = sum / work[l1];\n            work[iwrv + i] = sum;\n            if (iact[i] < meq) {\n                // continue;\n                break;\n            }\n            if (sum < 0) {\n                // continue;\n                break;\n            }\n            t1inf = false;\n            it1 = i;\n        }\n\n        if (!t1inf) {\n            t1 = work[iwuv + it1] / work[iwrv + it1];\n            for (i = 1; i <= nact; i = i + 1) {\n                if (iact[i] < meq) {\n                    // continue;\n                    break;\n                }\n                if (work[iwrv + i] < 0) {\n                    // continue;\n                    break;\n                }\n                temp = work[iwuv + i] / work[iwrv + i];\n                if (temp < t1) {\n                    t1 = temp;\n                    it1 = i;\n                }\n            }\n        }\n\n        sum = 0;\n        for (i = iwzv + 1; i <= iwzv + n; i = i + 1) {\n            sum = sum + work[i] * work[i];\n        }\n        if (Math.abs(sum) <= vsmall) {\n            if (t1inf) {\n                ierr[1] = 1;\n                // GOTO 999\n                return 999;\n            } else {\n                for (i = 1; i <= nact; i = i + 1) {\n                    work[iwuv + i] = work[iwuv + i] - t1 * work[iwrv + i];\n                }\n                work[iwuv + nact + 1] = work[iwuv + nact + 1] + t1;\n                // GOTO 700\n                return 700;\n            }\n        } else {\n            sum = 0;\n            for (i = 1; i <= n; i = i + 1) {\n                sum = sum + work[iwzv + i] * amat[i][nvl];\n            }\n            tt = -work[iwsv + nvl] / sum;\n            t2min = true;\n            if (!t1inf) {\n                if (t1 < tt) {\n                    tt = t1;\n                    t2min = false;\n                }\n            }\n\n            for (i = 1; i <= n; i = i + 1) {\n                sol[i] = sol[i] + tt * work[iwzv + i];\n                if (Math.abs(sol[i]) < vsmall) {\n                    sol[i] = 0;\n                }\n            }\n\n            crval[1] = crval[1] + tt * sum * (tt / 2 + work[iwuv + nact + 1]);\n            for (i = 1; i <= nact; i = i + 1) {\n                work[iwuv + i] = work[iwuv + i] - tt * work[iwrv + i];\n            }\n            work[iwuv + nact + 1] = work[iwuv + nact + 1] + tt;\n\n            if (t2min) {\n                nact = nact + 1;\n                iact[nact] = nvl;\n\n                l = iwrm + ((nact - 1) * nact) / 2 + 1;\n                for (i = 1; i <= nact - 1; i = i + 1) {\n                    work[l] = work[i];\n                    l = l + 1;\n                }\n\n                if (nact === n) {\n                    work[l] = work[n];\n                } else {\n                    for (i = n; i >= nact + 1; i = i - 1) {\n                        if (work[i] === 0) {\n                            // continue;\n                            break;\n                        }\n                        gc = Math.max(Math.abs(work[i - 1]), Math.abs(work[i]));\n                        gs = Math.min(Math.abs(work[i - 1]), Math.abs(work[i]));\n                        if (work[i - 1] >= 0) {\n                            temp = Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n                        } else {\n                            temp = -Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n                        }\n                        gc = work[i - 1] / temp;\n                        gs = work[i] / temp;\n\n                        if (gc === 1) {\n                            // continue;\n                            break;\n                        }\n                        if (gc === 0) {\n                            work[i - 1] = gs * temp;\n                            for (j = 1; j <= n; j = j + 1) {\n                                temp = dmat[j][i - 1];\n                                dmat[j][i - 1] = dmat[j][i];\n                                dmat[j][i] = temp;\n                            }\n                        } else {\n                            work[i - 1] = temp;\n                            nu = gs / (1 + gc);\n                            for (j = 1; j <= n; j = j + 1) {\n                                temp = gc * dmat[j][i - 1] + gs * dmat[j][i];\n                                dmat[j][i] = nu * (dmat[j][i - 1] + temp) - dmat[j][i];\n                                dmat[j][i - 1] = temp;\n\n                            }\n                        }\n                    }\n                    work[l] = work[nact];\n                }\n            } else {\n                sum = -bvec[nvl];\n                for (j = 1; j <= n; j = j + 1) {\n                    sum = sum + sol[j] * amat[j][nvl];\n                }\n                if (nvl > meq) {\n                    work[iwsv + nvl] = sum;\n                } else {\n                    work[iwsv + nvl] = -Math.abs(sum);\n                    if (sum > 0) {\n                        for (j = 1; j <= n; j = j + 1) {\n                            amat[j][nvl] = -amat[j][nvl];\n                        }\n                        bvec[nvl] = -bvec[nvl];\n                    }\n                }\n                // GOTO 700\n                return 700;\n            }\n        }\n\n        return 0;\n    }\n\n    function fn_goto_797() {\n        l = iwrm + (it1 * (it1 + 1)) / 2 + 1;\n        l1 = l + it1;\n        if (work[l1] === 0) {\n            // GOTO 798\n            return 798;\n        }\n        gc = Math.max(Math.abs(work[l1 - 1]), Math.abs(work[l1]));\n        gs = Math.min(Math.abs(work[l1 - 1]), Math.abs(work[l1]));\n        if (work[l1 - 1] >= 0) {\n            temp = Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n        } else {\n            temp = -Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n        }\n        gc = work[l1 - 1] / temp;\n        gs = work[l1] / temp;\n\n        if (gc === 1) {\n            // GOTO 798\n            return 798;\n        }\n        if (gc === 0) {\n            for (i = it1 + 1; i <= nact; i = i + 1) {\n                temp = work[l1 - 1];\n                work[l1 - 1] = work[l1];\n                work[l1] = temp;\n                l1 = l1 + i;\n            }\n            for (i = 1; i <= n; i = i + 1) {\n                temp = dmat[i][it1];\n                dmat[i][it1] = dmat[i][it1 + 1];\n                dmat[i][it1 + 1] = temp;\n            }\n        } else {\n            nu = gs / (1 + gc);\n            for (i = it1 + 1; i <= nact; i = i + 1) {\n                temp = gc * work[l1 - 1] + gs * work[l1];\n                work[l1] = nu * (work[l1 - 1] + temp) - work[l1];\n                work[l1 - 1] = temp;\n                l1 = l1 + i;\n            }\n            for (i = 1; i <= n; i = i + 1) {\n                temp = gc * dmat[i][it1] + gs * dmat[i][it1 + 1];\n                dmat[i][it1 + 1] = nu * (dmat[i][it1] + temp) - dmat[i][it1 + 1];\n                dmat[i][it1] = temp;\n            }\n        }\n\n        return 0;\n    }\n\n    function fn_goto_798() {\n        l1 = l - it1;\n        for (i = 1; i <= it1; i = i + 1) {\n            work[l1] = work[l];\n            l = l + 1;\n            l1 = l1 + 1;\n        }\n\n        work[iwuv + it1] = work[iwuv + it1 + 1];\n        iact[it1] = iact[it1 + 1];\n        it1 = it1 + 1;\n        if (it1 < nact) {\n            // GOTO 797\n            return 797;\n        }\n\n        return 0;\n    }\n\n    function fn_goto_799() {\n        work[iwuv + nact] = work[iwuv + nact + 1];\n        work[iwuv + nact + 1] = 0;\n        iact[nact] = 0;\n        nact = nact - 1;\n        iter[2] = iter[2] + 1;\n\n        return 0;\n    }\n\n    go = 0;\n    while (true) {\n        go = fn_goto_50();\n        if (go === 999) {\n            return;\n        }\n        while (true) {\n            go = fn_goto_55();\n            if (go === 0) {\n                break;\n            }\n            if (go === 999) {\n                return;\n            }\n            if (go === 700) {\n                if (it1 === nact) {\n                    fn_goto_799();\n                } else {\n                    while (true) {\n                        fn_goto_797();\n                        go = fn_goto_798();\n                        if (go !== 797) {\n                            break;\n                        }\n                    }\n                    fn_goto_799();\n                }\n            }\n        }\n    }\n\n}\n\nfunction solveQP(Dmat, dvec, Amat, bvec, meq, factorized) {\n    Dmat = base0to1(Dmat);\n    dvec = base0to1(dvec);\n    Amat = base0to1(Amat);\n    var i, n, q,\n        nact, r,\n        crval = [], iact = [], sol = [], work = [], iter = [],\n        message;\n\n    meq = meq || 0;\n    factorized = factorized ? base0to1(factorized) : [undefined, 0];\n    bvec = bvec ? base0to1(bvec) : [];\n\n    // In Fortran the array index starts from 1\n    n = Dmat.length - 1;\n    q = Amat[1].length - 1;\n\n    if (!bvec) {\n        for (i = 1; i <= q; i = i + 1) {\n            bvec[i] = 0;\n        }\n    }\n    for (i = 1; i <= q; i = i + 1) {\n        iact[i] = 0;\n    }\n    nact = 0;\n    r = Math.min(n, q);\n    for (i = 1; i <= n; i = i + 1) {\n        sol[i] = 0;\n    }\n    crval[1] = 0;\n    for (i = 1; i <= (2 * n + (r * (r + 5)) / 2 + 2 * q + 1); i = i + 1) {\n        work[i] = 0;\n    }\n    for (i = 1; i <= 2; i = i + 1) {\n        iter[i] = 0;\n    }\n\n    qpgen2(Dmat, dvec, n, n, sol, crval, Amat,\n        bvec, n, q, meq, iact, nact, iter, work, factorized);\n\n    message = \"\";\n    if (factorized[1] === 1) {\n        message = \"constraints are inconsistent, no solution!\";\n    }\n    if (factorized[1] === 2) {\n        message = \"matrix D in quadratic function is not positive definite!\";\n    }\n\n    return {\n        solution: base1to0(sol),\n        value: base1to0(crval),\n        unconstrained_solution: base1to0(dvec),\n        iterations: base1to0(iter),\n        iact: base1to0(iact),\n        message: message\n    };\n}\nexports.solveQP = solveQP;\n}(numeric));\n/*\r\nShanti Rao sent me this routine by private email. I had to modify it\r\nslightly to work on Arrays instead of using a Matrix object.\r\nIt is apparently translated from http://stitchpanorama.sourceforge.net/Python/svd.py\r\n*/\r\n\r\nnumeric.svd= function svd(A) {\r\n    var temp;\r\n//Compute the thin SVD from G. H. Golub and C. Reinsch, Numer. Math. 14, 403-420 (1970)\r\n\tvar prec= numeric.epsilon; //Math.pow(2,-52) // assumes double prec\r\n\tvar tolerance= 1.e-64/prec;\r\n\tvar itmax= 50;\r\n\tvar c=0;\r\n\tvar i=0;\r\n\tvar j=0;\r\n\tvar k=0;\r\n\tvar l=0;\r\n\t\r\n\tvar u= numeric.clone(A);\r\n\tvar m= u.length;\r\n\t\r\n\tvar n= u[0].length;\r\n\t\r\n\tif (m < n) throw \"Need more rows than columns\"\r\n\t\r\n\tvar e = new Array(n);\r\n\tvar q = new Array(n);\r\n\tfor (i=0; i<n; i++) e[i] = q[i] = 0.0;\r\n\tvar v = numeric.rep([n,n],0);\r\n//\tv.zero();\r\n\t\r\n \tfunction pythag(a,b)\r\n \t{\r\n\t\ta = Math.abs(a)\r\n\t\tb = Math.abs(b)\r\n\t\tif (a > b)\r\n\t\t\treturn a*Math.sqrt(1.0+(b*b/a/a))\r\n\t\telse if (b == 0.0) \r\n\t\t\treturn a\r\n\t\treturn b*Math.sqrt(1.0+(a*a/b/b))\r\n\t}\r\n\r\n\t//Householder's reduction to bidiagonal form\r\n\r\n\tvar f= 0.0;\r\n\tvar g= 0.0;\r\n\tvar h= 0.0;\r\n\tvar x= 0.0;\r\n\tvar y= 0.0;\r\n\tvar z= 0.0;\r\n\tvar s= 0.0;\r\n\t\r\n\tfor (i=0; i < n; i++)\r\n\t{\t\r\n\t\te[i]= g;\r\n\t\ts= 0.0;\r\n\t\tl= i+1;\r\n\t\tfor (j=i; j < m; j++) \r\n\t\t\ts += (u[j][i]*u[j][i]);\r\n\t\tif (s <= tolerance)\r\n\t\t\tg= 0.0;\r\n\t\telse\r\n\t\t{\t\r\n\t\t\tf= u[i][i];\r\n\t\t\tg= Math.sqrt(s);\r\n\t\t\tif (f >= 0.0) g= -g;\r\n\t\t\th= f*g-s\r\n\t\t\tu[i][i]=f-g;\r\n\t\t\tfor (j=l; j < n; j++)\r\n\t\t\t{\r\n\t\t\t\ts= 0.0\r\n\t\t\t\tfor (k=i; k < m; k++) \r\n\t\t\t\t\ts += u[k][i]*u[k][j]\r\n\t\t\t\tf= s/h\r\n\t\t\t\tfor (k=i; k < m; k++) \r\n\t\t\t\t\tu[k][j]+=f*u[k][i]\r\n\t\t\t}\r\n\t\t}\r\n\t\tq[i]= g\r\n\t\ts= 0.0\r\n\t\tfor (j=l; j < n; j++) \r\n\t\t\ts= s + u[i][j]*u[i][j]\r\n\t\tif (s <= tolerance)\r\n\t\t\tg= 0.0\r\n\t\telse\r\n\t\t{\t\r\n\t\t\tf= u[i][i+1]\r\n\t\t\tg= Math.sqrt(s)\r\n\t\t\tif (f >= 0.0) g= -g\r\n\t\t\th= f*g - s\r\n\t\t\tu[i][i+1] = f-g;\r\n\t\t\tfor (j=l; j < n; j++) e[j]= u[i][j]/h\r\n\t\t\tfor (j=l; j < m; j++)\r\n\t\t\t{\t\r\n\t\t\t\ts=0.0\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\ts += (u[j][k]*u[i][k])\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\tu[j][k]+=s*e[k]\r\n\t\t\t}\t\r\n\t\t}\r\n\t\ty= Math.abs(q[i])+Math.abs(e[i])\r\n\t\tif (y>x) \r\n\t\t\tx=y\r\n\t}\r\n\t\r\n\t// accumulation of right hand gtransformations\r\n\tfor (i=n-1; i != -1; i+= -1)\r\n\t{\t\r\n\t\tif (g != 0.0)\r\n\t\t{\r\n\t\t \th= g*u[i][i+1]\r\n\t\t\tfor (j=l; j < n; j++) \r\n\t\t\t\tv[j][i]=u[i][j]/h\r\n\t\t\tfor (j=l; j < n; j++)\r\n\t\t\t{\t\r\n\t\t\t\ts=0.0\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\ts += u[i][k]*v[k][j]\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\tv[k][j]+=(s*v[k][i])\r\n\t\t\t}\t\r\n\t\t}\r\n\t\tfor (j=l; j < n; j++)\r\n\t\t{\r\n\t\t\tv[i][j] = 0;\r\n\t\t\tv[j][i] = 0;\r\n\t\t}\r\n\t\tv[i][i] = 1;\r\n\t\tg= e[i]\r\n\t\tl= i\r\n\t}\r\n\t\r\n\t// accumulation of left hand transformations\r\n\tfor (i=n-1; i != -1; i+= -1)\r\n\t{\t\r\n\t\tl= i+1\r\n\t\tg= q[i]\r\n\t\tfor (j=l; j < n; j++) \r\n\t\t\tu[i][j] = 0;\r\n\t\tif (g != 0.0)\r\n\t\t{\r\n\t\t\th= u[i][i]*g\r\n\t\t\tfor (j=l; j < n; j++)\r\n\t\t\t{\r\n\t\t\t\ts=0.0\r\n\t\t\t\tfor (k=l; k < m; k++) s += u[k][i]*u[k][j];\r\n\t\t\t\tf= s/h\r\n\t\t\t\tfor (k=i; k < m; k++) u[k][j]+=f*u[k][i];\r\n\t\t\t}\r\n\t\t\tfor (j=i; j < m; j++) u[j][i] = u[j][i]/g;\r\n\t\t}\r\n\t\telse\r\n\t\t\tfor (j=i; j < m; j++) u[j][i] = 0;\r\n\t\tu[i][i] += 1;\r\n\t}\r\n\t\r\n\t// diagonalization of the bidiagonal form\r\n\tprec= prec*x\r\n\tfor (k=n-1; k != -1; k+= -1)\r\n\t{\r\n\t\tfor (var iteration=0; iteration < itmax; iteration++)\r\n\t\t{\t// test f splitting\r\n\t\t\tvar test_convergence = false\r\n\t\t\tfor (l=k; l != -1; l+= -1)\r\n\t\t\t{\t\r\n\t\t\t\tif (Math.abs(e[l]) <= prec)\r\n\t\t\t\t{\ttest_convergence= true\r\n\t\t\t\t\tbreak \r\n\t\t\t\t}\r\n\t\t\t\tif (Math.abs(q[l-1]) <= prec)\r\n\t\t\t\t\tbreak \r\n\t\t\t}\r\n\t\t\tif (!test_convergence)\r\n\t\t\t{\t// cancellation of e[l] if l>0\r\n\t\t\t\tc= 0.0\r\n\t\t\t\ts= 1.0\r\n\t\t\t\tvar l1= l-1\r\n\t\t\t\tfor (i =l; i<k+1; i++)\r\n\t\t\t\t{\t\r\n\t\t\t\t\tf= s*e[i]\r\n\t\t\t\t\te[i]= c*e[i]\r\n\t\t\t\t\tif (Math.abs(f) <= prec)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tg= q[i]\r\n\t\t\t\t\th= pythag(f,g)\r\n\t\t\t\t\tq[i]= h\r\n\t\t\t\t\tc= g/h\r\n\t\t\t\t\ts= -f/h\r\n\t\t\t\t\tfor (j=0; j < m; j++)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\ty= u[j][l1]\r\n\t\t\t\t\t\tz= u[j][i]\r\n\t\t\t\t\t\tu[j][l1] =  y*c+(z*s)\r\n\t\t\t\t\t\tu[j][i] = -y*s+(z*c)\r\n\t\t\t\t\t} \r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\t// test f convergence\r\n\t\t\tz= q[k]\r\n\t\t\tif (l== k)\r\n\t\t\t{\t//convergence\r\n\t\t\t\tif (z<0.0)\r\n\t\t\t\t{\t//q[k] is made non-negative\r\n\t\t\t\t\tq[k]= -z\r\n\t\t\t\t\tfor (j=0; j < n; j++)\r\n\t\t\t\t\t\tv[j][k] = -v[j][k]\r\n\t\t\t\t}\r\n\t\t\t\tbreak  //break out of iteration loop and move on to next k value\r\n\t\t\t}\r\n\t\t\tif (iteration >= itmax-1)\r\n\t\t\t\tthrow 'Error: no convergence.'\r\n\t\t\t// shift from bottom 2x2 minor\r\n\t\t\tx= q[l]\r\n\t\t\ty= q[k-1]\r\n\t\t\tg= e[k-1]\r\n\t\t\th= e[k]\r\n\t\t\tf= ((y-z)*(y+z)+(g-h)*(g+h))/(2.0*h*y)\r\n\t\t\tg= pythag(f,1.0)\r\n\t\t\tif (f < 0.0)\r\n\t\t\t\tf= ((x-z)*(x+z)+h*(y/(f-g)-h))/x\r\n\t\t\telse\r\n\t\t\t\tf= ((x-z)*(x+z)+h*(y/(f+g)-h))/x\r\n\t\t\t// next QR transformation\r\n\t\t\tc= 1.0\r\n\t\t\ts= 1.0\r\n\t\t\tfor (i=l+1; i< k+1; i++)\r\n\t\t\t{\t\r\n\t\t\t\tg= e[i]\r\n\t\t\t\ty= q[i]\r\n\t\t\t\th= s*g\r\n\t\t\t\tg= c*g\r\n\t\t\t\tz= pythag(f,h)\r\n\t\t\t\te[i-1]= z\r\n\t\t\t\tc= f/z\r\n\t\t\t\ts= h/z\r\n\t\t\t\tf= x*c+g*s\r\n\t\t\t\tg= -x*s+g*c\r\n\t\t\t\th= y*s\r\n\t\t\t\ty= y*c\r\n\t\t\t\tfor (j=0; j < n; j++)\r\n\t\t\t\t{\t\r\n\t\t\t\t\tx= v[j][i-1]\r\n\t\t\t\t\tz= v[j][i]\r\n\t\t\t\t\tv[j][i-1] = x*c+z*s\r\n\t\t\t\t\tv[j][i] = -x*s+z*c\r\n\t\t\t\t}\r\n\t\t\t\tz= pythag(f,h)\r\n\t\t\t\tq[i-1]= z\r\n\t\t\t\tc= f/z\r\n\t\t\t\ts= h/z\r\n\t\t\t\tf= c*g+s*y\r\n\t\t\t\tx= -s*g+c*y\r\n\t\t\t\tfor (j=0; j < m; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\ty= u[j][i-1]\r\n\t\t\t\t\tz= u[j][i]\r\n\t\t\t\t\tu[j][i-1] = y*c+z*s\r\n\t\t\t\t\tu[j][i] = -y*s+z*c\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\te[l]= 0.0\r\n\t\t\te[k]= f\r\n\t\t\tq[k]= x\r\n\t\t} \r\n\t}\r\n\t\t\r\n\t//vt= transpose(v)\r\n\t//return (u,q,vt)\r\n\tfor (i=0;i<q.length; i++) \r\n\t  if (q[i] < prec) q[i] = 0\r\n\t  \r\n\t//sort eigenvalues\t\r\n\tfor (i=0; i< n; i++)\r\n\t{\t \r\n\t//writeln(q)\r\n\t for (j=i-1; j >= 0; j--)\r\n\t {\r\n\t  if (q[j] < q[i])\r\n\t  {\r\n\t//  writeln(i,'-',j)\r\n\t   c = q[j]\r\n\t   q[j] = q[i]\r\n\t   q[i] = c\r\n\t   for(k=0;k<u.length;k++) { temp = u[k][i]; u[k][i] = u[k][j]; u[k][j] = temp; }\r\n\t   for(k=0;k<v.length;k++) { temp = v[k][i]; v[k][i] = v[k][j]; v[k][j] = temp; }\r\n//\t   u.swapCols(i,j)\r\n//\t   v.swapCols(i,j)\r\n\t   i = j\t   \r\n\t  }\r\n\t }\t\r\n\t}\r\n\t\r\n\treturn {U:u,S:q,V:v}\r\n};\r\n\r\n","/*!\n * satellite-js v4.1.3\n * (c) 2013 Shashwat Kandadai and UCSC\n * https://github.com/shashwatak/satellite-js\n * License: MIT\n */\n\nvar pi = Math.PI;\nvar twoPi = pi * 2;\nvar deg2rad = pi / 180.0;\nvar rad2deg = 180 / pi;\nvar minutesPerDay = 1440.0;\nvar mu = 398600.5; // in km3 / s2\n\nvar earthRadius = 6378.137; // in km\n\nvar xke = 60.0 / Math.sqrt(earthRadius * earthRadius * earthRadius / mu);\nvar vkmpersec = earthRadius * xke / 60.0;\nvar tumin = 1.0 / xke;\nvar j2 = 0.00108262998905;\nvar j3 = -0.00000253215306;\nvar j4 = -0.00000161098761;\nvar j3oj2 = j3 / j2;\nvar x2o3 = 2.0 / 3.0;\n\nvar constants = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  pi: pi,\n  twoPi: twoPi,\n  deg2rad: deg2rad,\n  rad2deg: rad2deg,\n  minutesPerDay: minutesPerDay,\n  mu: mu,\n  earthRadius: earthRadius,\n  xke: xke,\n  vkmpersec: vkmpersec,\n  tumin: tumin,\n  j2: j2,\n  j3: j3,\n  j4: j4,\n  j3oj2: j3oj2,\n  x2o3: x2o3\n});\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure days2mdhms\n *\n *  this procedure converts the day of the year, days, to the equivalent month\n *    day, hour, minute and second.\n *\n *  algorithm     : set up array for the number of days per month\n *                  find leap year - use 1900 because 2000 is a leap year\n *                  loop through a temp value while the value is < the days\n *                  perform int conversions to the correct day and month\n *                  convert remainder into h m s using type conversions\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    year        - year                           1900 .. 2100\n *    days        - julian day of the year         0.0  .. 366.0\n *\n *  outputs       :\n *    mon         - month                          1 .. 12\n *    day         - day                            1 .. 28,29,30,31\n *    hr          - hour                           0 .. 23\n *    min         - minute                         0 .. 59\n *    sec         - second                         0.0 .. 59.999\n *\n *  locals        :\n *    dayofyr     - day of year\n *    temp        - temporary extended values\n *    inttemp     - temporary int value\n *    i           - index\n *    lmonth[12]  - int array containing the number of days per month\n *\n *  coupling      :\n *    none.\n * --------------------------------------------------------------------------- */\nfunction days2mdhms(year, days) {\n  var lmonth = [31, year % 4 === 0 ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  var dayofyr = Math.floor(days); //  ----------------- find month and day of month ----------------\n\n  var i = 1;\n  var inttemp = 0;\n\n  while (dayofyr > inttemp + lmonth[i - 1] && i < 12) {\n    inttemp += lmonth[i - 1];\n    i += 1;\n  }\n\n  var mon = i;\n  var day = dayofyr - inttemp; //  ----------------- find hours minutes and seconds -------------\n\n  var temp = (days - dayofyr) * 24.0;\n  var hr = Math.floor(temp);\n  temp = (temp - hr) * 60.0;\n  var minute = Math.floor(temp);\n  var sec = (temp - minute) * 60.0;\n  return {\n    mon: mon,\n    day: day,\n    hr: hr,\n    minute: minute,\n    sec: sec\n  };\n}\n/* -----------------------------------------------------------------------------\n *\n *                           procedure jday\n *\n *  this procedure finds the julian date given the year, month, day, and time.\n *    the julian date is defined by each elapsed day since noon, jan 1, 4713 bc.\n *\n *  algorithm     : calculate the answer in one step for efficiency\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    year        - year                           1900 .. 2100\n *    mon         - month                          1 .. 12\n *    day         - day                            1 .. 28,29,30,31\n *    hr          - universal time hour            0 .. 23\n *    min         - universal time min             0 .. 59\n *    sec         - universal time sec             0.0 .. 59.999\n *\n *  outputs       :\n *    jd          - julian date                    days from 4713 bc\n *\n *  locals        :\n *    none.\n *\n *  coupling      :\n *    none.\n *\n *  references    :\n *    vallado       2007, 189, alg 14, ex 3-14\n *\n * --------------------------------------------------------------------------- */\n\nfunction jdayInternal(year, mon, day, hr, minute, sec) {\n  var msec = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  return 367.0 * year - Math.floor(7 * (year + Math.floor((mon + 9) / 12.0)) * 0.25) + Math.floor(275 * mon / 9.0) + day + 1721013.5 + ((msec / 60000 + sec / 60.0 + minute) / 60.0 + hr) / 24.0 // ut in days\n  // # - 0.5*sgn(100.0*year + mon - 190002.5) + 0.5;\n  ;\n}\n\nfunction jday(year, mon, day, hr, minute, sec, msec) {\n  if (year instanceof Date) {\n    var date = year;\n    return jdayInternal(date.getUTCFullYear(), date.getUTCMonth() + 1, // Note, this function requires months in range 1-12.\n    date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  }\n\n  return jdayInternal(year, mon, day, hr, minute, sec, msec);\n}\n/* -----------------------------------------------------------------------------\n *\n *                           procedure invjday\n *\n *  this procedure finds the year, month, day, hour, minute and second\n *  given the julian date. tu can be ut1, tdt, tdb, etc.\n *\n *  algorithm     : set up starting values\n *                  find leap year - use 1900 because 2000 is a leap year\n *                  find the elapsed days through the year in a loop\n *                  call routine to find each individual value\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    jd          - julian date                    days from 4713 bc\n *\n *  outputs       :\n *    year        - year                           1900 .. 2100\n *    mon         - month                          1 .. 12\n *    day         - day                            1 .. 28,29,30,31\n *    hr          - hour                           0 .. 23\n *    min         - minute                         0 .. 59\n *    sec         - second                         0.0 .. 59.999\n *\n *  locals        :\n *    days        - day of year plus fractional\n *                  portion of a day               days\n *    tu          - julian centuries from 0 h\n *                  jan 0, 1900\n *    temp        - temporary double values\n *    leapyrs     - number of leap years from 1900\n *\n *  coupling      :\n *    days2mdhms  - finds month, day, hour, minute and second given days and year\n *\n *  references    :\n *    vallado       2007, 208, alg 22, ex 3-13\n * --------------------------------------------------------------------------- */\n\nfunction invjday(jd, asArray) {\n  // --------------- find year and days of the year -\n  var temp = jd - 2415019.5;\n  var tu = temp / 365.25;\n  var year = 1900 + Math.floor(tu);\n  var leapyrs = Math.floor((year - 1901) * 0.25); // optional nudge by 8.64x10-7 sec to get even outputs\n\n  var days = temp - ((year - 1900) * 365.0 + leapyrs) + 0.00000000001; // ------------ check for case of beginning of a year -----------\n\n  if (days < 1.0) {\n    year -= 1;\n    leapyrs = Math.floor((year - 1901) * 0.25);\n    days = temp - ((year - 1900) * 365.0 + leapyrs);\n  } // ----------------- find remaing data  -------------------------\n\n\n  var mdhms = days2mdhms(year, days);\n  var mon = mdhms.mon,\n      day = mdhms.day,\n      hr = mdhms.hr,\n      minute = mdhms.minute;\n  var sec = mdhms.sec - 0.00000086400;\n\n  if (asArray) {\n    return [year, mon, day, hr, minute, Math.floor(sec)];\n  }\n\n  return new Date(Date.UTC(year, mon - 1, day, hr, minute, Math.floor(sec)));\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure dpper\n *\n *  this procedure provides deep space long period periodic contributions\n *    to the mean elements.  by design, these periodics are zero at epoch.\n *    this used to be dscom which included initialization, but it's really a\n *    recurring function.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    e3          -\n *    ee2         -\n *    peo         -\n *    pgho        -\n *    pho         -\n *    pinco       -\n *    plo         -\n *    se2 , se3 , sgh2, sgh3, sgh4, sh2, sh3, si2, si3, sl2, sl3, sl4 -\n *    t           -\n *    xh2, xh3, xi2, xi3, xl2, xl3, xl4 -\n *    zmol        -\n *    zmos        -\n *    ep          - eccentricity                           0.0 - 1.0\n *    inclo       - inclination - needed for lyddane modification\n *    nodep       - right ascension of ascending node\n *    argpp       - argument of perigee\n *    mp          - mean anomaly\n *\n *  outputs       :\n *    ep          - eccentricity                           0.0 - 1.0\n *    inclp       - inclination\n *    nodep        - right ascension of ascending node\n *    argpp       - argument of perigee\n *    mp          - mean anomaly\n *\n *  locals        :\n *    alfdp       -\n *    betdp       -\n *    cosip  , sinip  , cosop  , sinop  ,\n *    dalf        -\n *    dbet        -\n *    dls         -\n *    f2, f3      -\n *    pe          -\n *    pgh         -\n *    ph          -\n *    pinc        -\n *    pl          -\n *    sel   , ses   , sghl  , sghs  , shl   , shs   , sil   , sinzf , sis   ,\n *    sll   , sls\n *    xls         -\n *    xnoh        -\n *    zf          -\n *    zm          -\n *\n *  coupling      :\n *    none.\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\n\nfunction dpper(satrec, options) {\n  var e3 = satrec.e3,\n      ee2 = satrec.ee2,\n      peo = satrec.peo,\n      pgho = satrec.pgho,\n      pho = satrec.pho,\n      pinco = satrec.pinco,\n      plo = satrec.plo,\n      se2 = satrec.se2,\n      se3 = satrec.se3,\n      sgh2 = satrec.sgh2,\n      sgh3 = satrec.sgh3,\n      sgh4 = satrec.sgh4,\n      sh2 = satrec.sh2,\n      sh3 = satrec.sh3,\n      si2 = satrec.si2,\n      si3 = satrec.si3,\n      sl2 = satrec.sl2,\n      sl3 = satrec.sl3,\n      sl4 = satrec.sl4,\n      t = satrec.t,\n      xgh2 = satrec.xgh2,\n      xgh3 = satrec.xgh3,\n      xgh4 = satrec.xgh4,\n      xh2 = satrec.xh2,\n      xh3 = satrec.xh3,\n      xi2 = satrec.xi2,\n      xi3 = satrec.xi3,\n      xl2 = satrec.xl2,\n      xl3 = satrec.xl3,\n      xl4 = satrec.xl4,\n      zmol = satrec.zmol,\n      zmos = satrec.zmos;\n  var init = options.init,\n      opsmode = options.opsmode;\n  var ep = options.ep,\n      inclp = options.inclp,\n      nodep = options.nodep,\n      argpp = options.argpp,\n      mp = options.mp; // Copy satellite attributes into local variables for convenience\n  // and symmetry in writing formulae.\n\n  var alfdp;\n  var betdp;\n  var cosip;\n  var sinip;\n  var cosop;\n  var sinop;\n  var dalf;\n  var dbet;\n  var dls;\n  var f2;\n  var f3;\n  var pe;\n  var pgh;\n  var ph;\n  var pinc;\n  var pl;\n  var sinzf;\n  var xls;\n  var xnoh;\n  var zf;\n  var zm; //  ---------------------- constants -----------------------------\n\n  var zns = 1.19459e-5;\n  var zes = 0.01675;\n  var znl = 1.5835218e-4;\n  var zel = 0.05490; //  --------------- calculate time varying periodics -----------\n\n  zm = zmos + zns * t; // be sure that the initial call has time set to zero\n\n  if (init === 'y') {\n    zm = zmos;\n  }\n\n  zf = zm + 2.0 * zes * Math.sin(zm);\n  sinzf = Math.sin(zf);\n  f2 = 0.5 * sinzf * sinzf - 0.25;\n  f3 = -0.5 * sinzf * Math.cos(zf);\n  var ses = se2 * f2 + se3 * f3;\n  var sis = si2 * f2 + si3 * f3;\n  var sls = sl2 * f2 + sl3 * f3 + sl4 * sinzf;\n  var sghs = sgh2 * f2 + sgh3 * f3 + sgh4 * sinzf;\n  var shs = sh2 * f2 + sh3 * f3;\n  zm = zmol + znl * t;\n\n  if (init === 'y') {\n    zm = zmol;\n  }\n\n  zf = zm + 2.0 * zel * Math.sin(zm);\n  sinzf = Math.sin(zf);\n  f2 = 0.5 * sinzf * sinzf - 0.25;\n  f3 = -0.5 * sinzf * Math.cos(zf);\n  var sel = ee2 * f2 + e3 * f3;\n  var sil = xi2 * f2 + xi3 * f3;\n  var sll = xl2 * f2 + xl3 * f3 + xl4 * sinzf;\n  var sghl = xgh2 * f2 + xgh3 * f3 + xgh4 * sinzf;\n  var shll = xh2 * f2 + xh3 * f3;\n  pe = ses + sel;\n  pinc = sis + sil;\n  pl = sls + sll;\n  pgh = sghs + sghl;\n  ph = shs + shll;\n\n  if (init === 'n') {\n    pe -= peo;\n    pinc -= pinco;\n    pl -= plo;\n    pgh -= pgho;\n    ph -= pho;\n    inclp += pinc;\n    ep += pe;\n    sinip = Math.sin(inclp);\n    cosip = Math.cos(inclp);\n    /* ----------------- apply periodics directly ------------ */\n    // sgp4fix for lyddane choice\n    // strn3 used original inclination - this is technically feasible\n    // gsfc used perturbed inclination - also technically feasible\n    // probably best to readjust the 0.2 limit value and limit discontinuity\n    // 0.2 rad = 11.45916 deg\n    // use next line for original strn3 approach and original inclination\n    // if (inclo >= 0.2)\n    // use next line for gsfc version and perturbed inclination\n\n    if (inclp >= 0.2) {\n      ph /= sinip;\n      pgh -= cosip * ph;\n      argpp += pgh;\n      nodep += ph;\n      mp += pl;\n    } else {\n      //  ---- apply periodics with lyddane modification ----\n      sinop = Math.sin(nodep);\n      cosop = Math.cos(nodep);\n      alfdp = sinip * sinop;\n      betdp = sinip * cosop;\n      dalf = ph * cosop + pinc * cosip * sinop;\n      dbet = -ph * sinop + pinc * cosip * cosop;\n      alfdp += dalf;\n      betdp += dbet;\n      nodep %= twoPi; //  sgp4fix for afspc written intrinsic functions\n      //  nodep used without a trigonometric function ahead\n\n      if (nodep < 0.0 && opsmode === 'a') {\n        nodep += twoPi;\n      }\n\n      xls = mp + argpp + cosip * nodep;\n      dls = pl + pgh - pinc * nodep * sinip;\n      xls += dls;\n      xnoh = nodep;\n      nodep = Math.atan2(alfdp, betdp); //  sgp4fix for afspc written intrinsic functions\n      //  nodep used without a trigonometric function ahead\n\n      if (nodep < 0.0 && opsmode === 'a') {\n        nodep += twoPi;\n      }\n\n      if (Math.abs(xnoh - nodep) > pi) {\n        if (nodep < xnoh) {\n          nodep += twoPi;\n        } else {\n          nodep -= twoPi;\n        }\n      }\n\n      mp += pl;\n      argpp = xls - mp - cosip * nodep;\n    }\n  }\n\n  return {\n    ep: ep,\n    inclp: inclp,\n    nodep: nodep,\n    argpp: argpp,\n    mp: mp\n  };\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure dscom\n *\n *  this procedure provides deep space common items used by both the secular\n *    and periodics subroutines.  input is provided as shown. this routine\n *    used to be called dpper, but the functions inside weren't well organized.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    epoch       -\n *    ep          - eccentricity\n *    argpp       - argument of perigee\n *    tc          -\n *    inclp       - inclination\n *    nodep       - right ascension of ascending node\n *    np          - mean motion\n *\n *  outputs       :\n *    sinim  , cosim  , sinomm , cosomm , snodm  , cnodm\n *    day         -\n *    e3          -\n *    ee2         -\n *    em          - eccentricity\n *    emsq        - eccentricity squared\n *    gam         -\n *    peo         -\n *    pgho        -\n *    pho         -\n *    pinco       -\n *    plo         -\n *    rtemsq      -\n *    se2, se3         -\n *    sgh2, sgh3, sgh4        -\n *    sh2, sh3, si2, si3, sl2, sl3, sl4         -\n *    s1, s2, s3, s4, s5, s6, s7          -\n *    ss1, ss2, ss3, ss4, ss5, ss6, ss7, sz1, sz2, sz3         -\n *    sz11, sz12, sz13, sz21, sz22, sz23, sz31, sz32, sz33        -\n *    xgh2, xgh3, xgh4, xh2, xh3, xi2, xi3, xl2, xl3, xl4         -\n *    nm          - mean motion\n *    z1, z2, z3, z11, z12, z13, z21, z22, z23, z31, z32, z33         -\n *    zmol        -\n *    zmos        -\n *\n *  locals        :\n *    a1, a2, a3, a4, a5, a6, a7, a8, a9, a10         -\n *    betasq      -\n *    cc          -\n *    ctem, stem        -\n *    x1, x2, x3, x4, x5, x6, x7, x8          -\n *    xnodce      -\n *    xnoi        -\n *    zcosg  , zsing  , zcosgl , zsingl , zcosh  , zsinh  , zcoshl , zsinhl ,\n *    zcosi  , zsini  , zcosil , zsinil ,\n *    zx          -\n *    zy          -\n *\n *  coupling      :\n *    none.\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\n\nfunction dscom(options) {\n  var epoch = options.epoch,\n      ep = options.ep,\n      argpp = options.argpp,\n      tc = options.tc,\n      inclp = options.inclp,\n      nodep = options.nodep,\n      np = options.np;\n  var a1;\n  var a2;\n  var a3;\n  var a4;\n  var a5;\n  var a6;\n  var a7;\n  var a8;\n  var a9;\n  var a10;\n  var cc;\n  var x1;\n  var x2;\n  var x3;\n  var x4;\n  var x5;\n  var x6;\n  var x7;\n  var x8;\n  var zcosg;\n  var zsing;\n  var zcosh;\n  var zsinh;\n  var zcosi;\n  var zsini;\n  var ss1;\n  var ss2;\n  var ss3;\n  var ss4;\n  var ss5;\n  var ss6;\n  var ss7;\n  var sz1;\n  var sz2;\n  var sz3;\n  var sz11;\n  var sz12;\n  var sz13;\n  var sz21;\n  var sz22;\n  var sz23;\n  var sz31;\n  var sz32;\n  var sz33;\n  var s1;\n  var s2;\n  var s3;\n  var s4;\n  var s5;\n  var s6;\n  var s7;\n  var z1;\n  var z2;\n  var z3;\n  var z11;\n  var z12;\n  var z13;\n  var z21;\n  var z22;\n  var z23;\n  var z31;\n  var z32;\n  var z33; // -------------------------- constants -------------------------\n\n  var zes = 0.01675;\n  var zel = 0.05490;\n  var c1ss = 2.9864797e-6;\n  var c1l = 4.7968065e-7;\n  var zsinis = 0.39785416;\n  var zcosis = 0.91744867;\n  var zcosgs = 0.1945905;\n  var zsings = -0.98088458; //  --------------------- local variables ------------------------\n\n  var nm = np;\n  var em = ep;\n  var snodm = Math.sin(nodep);\n  var cnodm = Math.cos(nodep);\n  var sinomm = Math.sin(argpp);\n  var cosomm = Math.cos(argpp);\n  var sinim = Math.sin(inclp);\n  var cosim = Math.cos(inclp);\n  var emsq = em * em;\n  var betasq = 1.0 - emsq;\n  var rtemsq = Math.sqrt(betasq); //  ----------------- initialize lunar solar terms ---------------\n\n  var peo = 0.0;\n  var pinco = 0.0;\n  var plo = 0.0;\n  var pgho = 0.0;\n  var pho = 0.0;\n  var day = epoch + 18261.5 + tc / 1440.0;\n  var xnodce = (4.5236020 - 9.2422029e-4 * day) % twoPi;\n  var stem = Math.sin(xnodce);\n  var ctem = Math.cos(xnodce);\n  var zcosil = 0.91375164 - 0.03568096 * ctem;\n  var zsinil = Math.sqrt(1.0 - zcosil * zcosil);\n  var zsinhl = 0.089683511 * stem / zsinil;\n  var zcoshl = Math.sqrt(1.0 - zsinhl * zsinhl);\n  var gam = 5.8351514 + 0.0019443680 * day;\n  var zx = 0.39785416 * stem / zsinil;\n  var zy = zcoshl * ctem + 0.91744867 * zsinhl * stem;\n  zx = Math.atan2(zx, zy);\n  zx += gam - xnodce;\n  var zcosgl = Math.cos(zx);\n  var zsingl = Math.sin(zx); //  ------------------------- do solar terms ---------------------\n\n  zcosg = zcosgs;\n  zsing = zsings;\n  zcosi = zcosis;\n  zsini = zsinis;\n  zcosh = cnodm;\n  zsinh = snodm;\n  cc = c1ss;\n  var xnoi = 1.0 / nm;\n  var lsflg = 0;\n\n  while (lsflg < 2) {\n    lsflg += 1;\n    a1 = zcosg * zcosh + zsing * zcosi * zsinh;\n    a3 = -zsing * zcosh + zcosg * zcosi * zsinh;\n    a7 = -zcosg * zsinh + zsing * zcosi * zcosh;\n    a8 = zsing * zsini;\n    a9 = zsing * zsinh + zcosg * zcosi * zcosh;\n    a10 = zcosg * zsini;\n    a2 = cosim * a7 + sinim * a8;\n    a4 = cosim * a9 + sinim * a10;\n    a5 = -sinim * a7 + cosim * a8;\n    a6 = -sinim * a9 + cosim * a10;\n    x1 = a1 * cosomm + a2 * sinomm;\n    x2 = a3 * cosomm + a4 * sinomm;\n    x3 = -a1 * sinomm + a2 * cosomm;\n    x4 = -a3 * sinomm + a4 * cosomm;\n    x5 = a5 * sinomm;\n    x6 = a6 * sinomm;\n    x7 = a5 * cosomm;\n    x8 = a6 * cosomm;\n    z31 = 12.0 * x1 * x1 - 3.0 * x3 * x3;\n    z32 = 24.0 * x1 * x2 - 6.0 * x3 * x4;\n    z33 = 12.0 * x2 * x2 - 3.0 * x4 * x4;\n    z1 = 3.0 * (a1 * a1 + a2 * a2) + z31 * emsq;\n    z2 = 6.0 * (a1 * a3 + a2 * a4) + z32 * emsq;\n    z3 = 3.0 * (a3 * a3 + a4 * a4) + z33 * emsq;\n    z11 = -6.0 * a1 * a5 + emsq * (-24.0 * x1 * x7 - 6.0 * x3 * x5);\n    z12 = -6.0 * (a1 * a6 + a3 * a5) + emsq * (-24.0 * (x2 * x7 + x1 * x8) + -6.0 * (x3 * x6 + x4 * x5));\n    z13 = -6.0 * a3 * a6 + emsq * (-24.0 * x2 * x8 - 6.0 * x4 * x6);\n    z21 = 6.0 * a2 * a5 + emsq * (24.0 * x1 * x5 - 6.0 * x3 * x7);\n    z22 = 6.0 * (a4 * a5 + a2 * a6) + emsq * (24.0 * (x2 * x5 + x1 * x6) - 6.0 * (x4 * x7 + x3 * x8));\n    z23 = 6.0 * a4 * a6 + emsq * (24.0 * x2 * x6 - 6.0 * x4 * x8);\n    z1 = z1 + z1 + betasq * z31;\n    z2 = z2 + z2 + betasq * z32;\n    z3 = z3 + z3 + betasq * z33;\n    s3 = cc * xnoi;\n    s2 = -0.5 * s3 / rtemsq;\n    s4 = s3 * rtemsq;\n    s1 = -15.0 * em * s4;\n    s5 = x1 * x3 + x2 * x4;\n    s6 = x2 * x3 + x1 * x4;\n    s7 = x2 * x4 - x1 * x3; //  ----------------------- do lunar terms -------------------\n\n    if (lsflg === 1) {\n      ss1 = s1;\n      ss2 = s2;\n      ss3 = s3;\n      ss4 = s4;\n      ss5 = s5;\n      ss6 = s6;\n      ss7 = s7;\n      sz1 = z1;\n      sz2 = z2;\n      sz3 = z3;\n      sz11 = z11;\n      sz12 = z12;\n      sz13 = z13;\n      sz21 = z21;\n      sz22 = z22;\n      sz23 = z23;\n      sz31 = z31;\n      sz32 = z32;\n      sz33 = z33;\n      zcosg = zcosgl;\n      zsing = zsingl;\n      zcosi = zcosil;\n      zsini = zsinil;\n      zcosh = zcoshl * cnodm + zsinhl * snodm;\n      zsinh = snodm * zcoshl - cnodm * zsinhl;\n      cc = c1l;\n    }\n  }\n\n  var zmol = (4.7199672 + (0.22997150 * day - gam)) % twoPi;\n  var zmos = (6.2565837 + 0.017201977 * day) % twoPi; //  ------------------------ do solar terms ----------------------\n\n  var se2 = 2.0 * ss1 * ss6;\n  var se3 = 2.0 * ss1 * ss7;\n  var si2 = 2.0 * ss2 * sz12;\n  var si3 = 2.0 * ss2 * (sz13 - sz11);\n  var sl2 = -2.0 * ss3 * sz2;\n  var sl3 = -2.0 * ss3 * (sz3 - sz1);\n  var sl4 = -2.0 * ss3 * (-21.0 - 9.0 * emsq) * zes;\n  var sgh2 = 2.0 * ss4 * sz32;\n  var sgh3 = 2.0 * ss4 * (sz33 - sz31);\n  var sgh4 = -18.0 * ss4 * zes;\n  var sh2 = -2.0 * ss2 * sz22;\n  var sh3 = -2.0 * ss2 * (sz23 - sz21); //  ------------------------ do lunar terms ----------------------\n\n  var ee2 = 2.0 * s1 * s6;\n  var e3 = 2.0 * s1 * s7;\n  var xi2 = 2.0 * s2 * z12;\n  var xi3 = 2.0 * s2 * (z13 - z11);\n  var xl2 = -2.0 * s3 * z2;\n  var xl3 = -2.0 * s3 * (z3 - z1);\n  var xl4 = -2.0 * s3 * (-21.0 - 9.0 * emsq) * zel;\n  var xgh2 = 2.0 * s4 * z32;\n  var xgh3 = 2.0 * s4 * (z33 - z31);\n  var xgh4 = -18.0 * s4 * zel;\n  var xh2 = -2.0 * s2 * z22;\n  var xh3 = -2.0 * s2 * (z23 - z21);\n  return {\n    snodm: snodm,\n    cnodm: cnodm,\n    sinim: sinim,\n    cosim: cosim,\n    sinomm: sinomm,\n    cosomm: cosomm,\n    day: day,\n    e3: e3,\n    ee2: ee2,\n    em: em,\n    emsq: emsq,\n    gam: gam,\n    peo: peo,\n    pgho: pgho,\n    pho: pho,\n    pinco: pinco,\n    plo: plo,\n    rtemsq: rtemsq,\n    se2: se2,\n    se3: se3,\n    sgh2: sgh2,\n    sgh3: sgh3,\n    sgh4: sgh4,\n    sh2: sh2,\n    sh3: sh3,\n    si2: si2,\n    si3: si3,\n    sl2: sl2,\n    sl3: sl3,\n    sl4: sl4,\n    s1: s1,\n    s2: s2,\n    s3: s3,\n    s4: s4,\n    s5: s5,\n    s6: s6,\n    s7: s7,\n    ss1: ss1,\n    ss2: ss2,\n    ss3: ss3,\n    ss4: ss4,\n    ss5: ss5,\n    ss6: ss6,\n    ss7: ss7,\n    sz1: sz1,\n    sz2: sz2,\n    sz3: sz3,\n    sz11: sz11,\n    sz12: sz12,\n    sz13: sz13,\n    sz21: sz21,\n    sz22: sz22,\n    sz23: sz23,\n    sz31: sz31,\n    sz32: sz32,\n    sz33: sz33,\n    xgh2: xgh2,\n    xgh3: xgh3,\n    xgh4: xgh4,\n    xh2: xh2,\n    xh3: xh3,\n    xi2: xi2,\n    xi3: xi3,\n    xl2: xl2,\n    xl3: xl3,\n    xl4: xl4,\n    nm: nm,\n    z1: z1,\n    z2: z2,\n    z3: z3,\n    z11: z11,\n    z12: z12,\n    z13: z13,\n    z21: z21,\n    z22: z22,\n    z23: z23,\n    z31: z31,\n    z32: z32,\n    z33: z33,\n    zmol: zmol,\n    zmos: zmos\n  };\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure dsinit\n *\n *  this procedure provides deep space contributions to mean motion dot due\n *    to geopotential resonance with half day and one day orbits.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    cosim, sinim-\n *    emsq        - eccentricity squared\n *    argpo       - argument of perigee\n *    s1, s2, s3, s4, s5      -\n *    ss1, ss2, ss3, ss4, ss5 -\n *    sz1, sz3, sz11, sz13, sz21, sz23, sz31, sz33 -\n *    t           - time\n *    tc          -\n *    gsto        - greenwich sidereal time                   rad\n *    mo          - mean anomaly\n *    mdot        - mean anomaly dot (rate)\n *    no          - mean motion\n *    nodeo       - right ascension of ascending node\n *    nodedot     - right ascension of ascending node dot (rate)\n *    xpidot      -\n *    z1, z3, z11, z13, z21, z23, z31, z33 -\n *    eccm        - eccentricity\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    xn          - mean motion\n *    nodem       - right ascension of ascending node\n *\n *  outputs       :\n *    em          - eccentricity\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    nm          - mean motion\n *    nodem       - right ascension of ascending node\n *    irez        - flag for resonance           0-none, 1-one day, 2-half day\n *    atime       -\n *    d2201, d2211, d3210, d3222, d4410, d4422, d5220, d5232, d5421, d5433    -\n *    dedt        -\n *    didt        -\n *    dmdt        -\n *    dndt        -\n *    dnodt       -\n *    domdt       -\n *    del1, del2, del3        -\n *    ses  , sghl , sghs , sgs  , shl  , shs  , sis  , sls\n *    theta       -\n *    xfact       -\n *    xlamo       -\n *    xli         -\n *    xni\n *\n *  locals        :\n *    ainv2       -\n *    aonv        -\n *    cosisq      -\n *    eoc         -\n *    f220, f221, f311, f321, f322, f330, f441, f442, f522, f523, f542, f543  -\n *    g200, g201, g211, g300, g310, g322, g410, g422, g520, g521, g532, g533  -\n *    sini2       -\n *    temp        -\n *    temp1       -\n *    theta       -\n *    xno2        -\n *\n *  coupling      :\n *    getgravconst\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\n\nfunction dsinit(options) {\n  var cosim = options.cosim,\n      argpo = options.argpo,\n      s1 = options.s1,\n      s2 = options.s2,\n      s3 = options.s3,\n      s4 = options.s4,\n      s5 = options.s5,\n      sinim = options.sinim,\n      ss1 = options.ss1,\n      ss2 = options.ss2,\n      ss3 = options.ss3,\n      ss4 = options.ss4,\n      ss5 = options.ss5,\n      sz1 = options.sz1,\n      sz3 = options.sz3,\n      sz11 = options.sz11,\n      sz13 = options.sz13,\n      sz21 = options.sz21,\n      sz23 = options.sz23,\n      sz31 = options.sz31,\n      sz33 = options.sz33,\n      t = options.t,\n      tc = options.tc,\n      gsto = options.gsto,\n      mo = options.mo,\n      mdot = options.mdot,\n      no = options.no,\n      nodeo = options.nodeo,\n      nodedot = options.nodedot,\n      xpidot = options.xpidot,\n      z1 = options.z1,\n      z3 = options.z3,\n      z11 = options.z11,\n      z13 = options.z13,\n      z21 = options.z21,\n      z23 = options.z23,\n      z31 = options.z31,\n      z33 = options.z33,\n      ecco = options.ecco,\n      eccsq = options.eccsq;\n  var emsq = options.emsq,\n      em = options.em,\n      argpm = options.argpm,\n      inclm = options.inclm,\n      mm = options.mm,\n      nm = options.nm,\n      nodem = options.nodem,\n      irez = options.irez,\n      atime = options.atime,\n      d2201 = options.d2201,\n      d2211 = options.d2211,\n      d3210 = options.d3210,\n      d3222 = options.d3222,\n      d4410 = options.d4410,\n      d4422 = options.d4422,\n      d5220 = options.d5220,\n      d5232 = options.d5232,\n      d5421 = options.d5421,\n      d5433 = options.d5433,\n      dedt = options.dedt,\n      didt = options.didt,\n      dmdt = options.dmdt,\n      dnodt = options.dnodt,\n      domdt = options.domdt,\n      del1 = options.del1,\n      del2 = options.del2,\n      del3 = options.del3,\n      xfact = options.xfact,\n      xlamo = options.xlamo,\n      xli = options.xli,\n      xni = options.xni;\n  var f220;\n  var f221;\n  var f311;\n  var f321;\n  var f322;\n  var f330;\n  var f441;\n  var f442;\n  var f522;\n  var f523;\n  var f542;\n  var f543;\n  var g200;\n  var g201;\n  var g211;\n  var g300;\n  var g310;\n  var g322;\n  var g410;\n  var g422;\n  var g520;\n  var g521;\n  var g532;\n  var g533;\n  var sini2;\n  var temp;\n  var temp1;\n  var xno2;\n  var ainv2;\n  var aonv;\n  var cosisq;\n  var eoc;\n  var q22 = 1.7891679e-6;\n  var q31 = 2.1460748e-6;\n  var q33 = 2.2123015e-7;\n  var root22 = 1.7891679e-6;\n  var root44 = 7.3636953e-9;\n  var root54 = 2.1765803e-9;\n  var rptim = 4.37526908801129966e-3; // equates to 7.29211514668855e-5 rad/sec\n\n  var root32 = 3.7393792e-7;\n  var root52 = 1.1428639e-7;\n  var znl = 1.5835218e-4;\n  var zns = 1.19459e-5; // -------------------- deep space initialization ------------\n\n  irez = 0;\n\n  if (nm < 0.0052359877 && nm > 0.0034906585) {\n    irez = 1;\n  }\n\n  if (nm >= 8.26e-3 && nm <= 9.24e-3 && em >= 0.5) {\n    irez = 2;\n  } // ------------------------ do solar terms -------------------\n\n\n  var ses = ss1 * zns * ss5;\n  var sis = ss2 * zns * (sz11 + sz13);\n  var sls = -zns * ss3 * (sz1 + sz3 - 14.0 - 6.0 * emsq);\n  var sghs = ss4 * zns * (sz31 + sz33 - 6.0);\n  var shs = -zns * ss2 * (sz21 + sz23); // sgp4fix for 180 deg incl\n\n  if (inclm < 5.2359877e-2 || inclm > pi - 5.2359877e-2) {\n    shs = 0.0;\n  }\n\n  if (sinim !== 0.0) {\n    shs /= sinim;\n  }\n\n  var sgs = sghs - cosim * shs; // ------------------------- do lunar terms ------------------\n\n  dedt = ses + s1 * znl * s5;\n  didt = sis + s2 * znl * (z11 + z13);\n  dmdt = sls - znl * s3 * (z1 + z3 - 14.0 - 6.0 * emsq);\n  var sghl = s4 * znl * (z31 + z33 - 6.0);\n  var shll = -znl * s2 * (z21 + z23); // sgp4fix for 180 deg incl\n\n  if (inclm < 5.2359877e-2 || inclm > pi - 5.2359877e-2) {\n    shll = 0.0;\n  }\n\n  domdt = sgs + sghl;\n  dnodt = shs;\n\n  if (sinim !== 0.0) {\n    domdt -= cosim / sinim * shll;\n    dnodt += shll / sinim;\n  } // ----------- calculate deep space resonance effects --------\n\n\n  var dndt = 0.0;\n  var theta = (gsto + tc * rptim) % twoPi;\n  em += dedt * t;\n  inclm += didt * t;\n  argpm += domdt * t;\n  nodem += dnodt * t;\n  mm += dmdt * t; // sgp4fix for negative inclinations\n  // the following if statement should be commented out\n  // if (inclm < 0.0)\n  // {\n  //   inclm  = -inclm;\n  //   argpm  = argpm - pi;\n  //   nodem = nodem + pi;\n  // }\n  // -------------- initialize the resonance terms -------------\n\n  if (irez !== 0) {\n    aonv = Math.pow(nm / xke, x2o3); // ---------- geopotential resonance for 12 hour orbits ------\n\n    if (irez === 2) {\n      cosisq = cosim * cosim;\n      var emo = em;\n      em = ecco;\n      var emsqo = emsq;\n      emsq = eccsq;\n      eoc = em * emsq;\n      g201 = -0.306 - (em - 0.64) * 0.440;\n\n      if (em <= 0.65) {\n        g211 = 3.616 - 13.2470 * em + 16.2900 * emsq;\n        g310 = -19.302 + 117.3900 * em - 228.4190 * emsq + 156.5910 * eoc;\n        g322 = -18.9068 + 109.7927 * em - 214.6334 * emsq + 146.5816 * eoc;\n        g410 = -41.122 + 242.6940 * em - 471.0940 * emsq + 313.9530 * eoc;\n        g422 = -146.407 + 841.8800 * em - 1629.014 * emsq + 1083.4350 * eoc;\n        g520 = -532.114 + 3017.977 * em - 5740.032 * emsq + 3708.2760 * eoc;\n      } else {\n        g211 = -72.099 + 331.819 * em - 508.738 * emsq + 266.724 * eoc;\n        g310 = -346.844 + 1582.851 * em - 2415.925 * emsq + 1246.113 * eoc;\n        g322 = -342.585 + 1554.908 * em - 2366.899 * emsq + 1215.972 * eoc;\n        g410 = -1052.797 + 4758.686 * em - 7193.992 * emsq + 3651.957 * eoc;\n        g422 = -3581.690 + 16178.110 * em - 24462.770 * emsq + 12422.520 * eoc;\n\n        if (em > 0.715) {\n          g520 = -5149.66 + 29936.92 * em - 54087.36 * emsq + 31324.56 * eoc;\n        } else {\n          g520 = 1464.74 - 4664.75 * em + 3763.64 * emsq;\n        }\n      }\n\n      if (em < 0.7) {\n        g533 = -919.22770 + 4988.6100 * em - 9064.7700 * emsq + 5542.21 * eoc;\n        g521 = -822.71072 + 4568.6173 * em - 8491.4146 * emsq + 5337.524 * eoc;\n        g532 = -853.66600 + 4690.2500 * em - 8624.7700 * emsq + 5341.4 * eoc;\n      } else {\n        g533 = -37995.780 + 161616.52 * em - 229838.20 * emsq + 109377.94 * eoc;\n        g521 = -51752.104 + 218913.95 * em - 309468.16 * emsq + 146349.42 * eoc;\n        g532 = -40023.880 + 170470.89 * em - 242699.48 * emsq + 115605.82 * eoc;\n      }\n\n      sini2 = sinim * sinim;\n      f220 = 0.75 * (1.0 + 2.0 * cosim + cosisq);\n      f221 = 1.5 * sini2;\n      f321 = 1.875 * sinim * (1.0 - 2.0 * cosim - 3.0 * cosisq);\n      f322 = -1.875 * sinim * (1.0 + 2.0 * cosim - 3.0 * cosisq);\n      f441 = 35.0 * sini2 * f220;\n      f442 = 39.3750 * sini2 * sini2;\n      f522 = 9.84375 * sinim * (sini2 * (1.0 - 2.0 * cosim - 5.0 * cosisq) + 0.33333333 * (-2.0 + 4.0 * cosim + 6.0 * cosisq));\n      f523 = sinim * (4.92187512 * sini2 * (-2.0 - 4.0 * cosim + 10.0 * cosisq) + 6.56250012 * (1.0 + 2.0 * cosim - 3.0 * cosisq));\n      f542 = 29.53125 * sinim * (2.0 - 8.0 * cosim + cosisq * (-12.0 + 8.0 * cosim + 10.0 * cosisq));\n      f543 = 29.53125 * sinim * (-2.0 - 8.0 * cosim + cosisq * (12.0 + 8.0 * cosim - 10.0 * cosisq));\n      xno2 = nm * nm;\n      ainv2 = aonv * aonv;\n      temp1 = 3.0 * xno2 * ainv2;\n      temp = temp1 * root22;\n      d2201 = temp * f220 * g201;\n      d2211 = temp * f221 * g211;\n      temp1 *= aonv;\n      temp = temp1 * root32;\n      d3210 = temp * f321 * g310;\n      d3222 = temp * f322 * g322;\n      temp1 *= aonv;\n      temp = 2.0 * temp1 * root44;\n      d4410 = temp * f441 * g410;\n      d4422 = temp * f442 * g422;\n      temp1 *= aonv;\n      temp = temp1 * root52;\n      d5220 = temp * f522 * g520;\n      d5232 = temp * f523 * g532;\n      temp = 2.0 * temp1 * root54;\n      d5421 = temp * f542 * g521;\n      d5433 = temp * f543 * g533;\n      xlamo = (mo + nodeo + nodeo - (theta + theta)) % twoPi;\n      xfact = mdot + dmdt + 2.0 * (nodedot + dnodt - rptim) - no;\n      em = emo;\n      emsq = emsqo;\n    } //  ---------------- synchronous resonance terms --------------\n\n\n    if (irez === 1) {\n      g200 = 1.0 + emsq * (-2.5 + 0.8125 * emsq);\n      g310 = 1.0 + 2.0 * emsq;\n      g300 = 1.0 + emsq * (-6.0 + 6.60937 * emsq);\n      f220 = 0.75 * (1.0 + cosim) * (1.0 + cosim);\n      f311 = 0.9375 * sinim * sinim * (1.0 + 3.0 * cosim) - 0.75 * (1.0 + cosim);\n      f330 = 1.0 + cosim;\n      f330 *= 1.875 * f330 * f330;\n      del1 = 3.0 * nm * nm * aonv * aonv;\n      del2 = 2.0 * del1 * f220 * g200 * q22;\n      del3 = 3.0 * del1 * f330 * g300 * q33 * aonv;\n      del1 = del1 * f311 * g310 * q31 * aonv;\n      xlamo = (mo + nodeo + argpo - theta) % twoPi;\n      xfact = mdot + xpidot + dmdt + domdt + dnodt - (no + rptim);\n    } //  ------------ for sgp4, initialize the integrator ----------\n\n\n    xli = xlamo;\n    xni = no;\n    atime = 0.0;\n    nm = no + dndt;\n  }\n\n  return {\n    em: em,\n    argpm: argpm,\n    inclm: inclm,\n    mm: mm,\n    nm: nm,\n    nodem: nodem,\n    irez: irez,\n    atime: atime,\n    d2201: d2201,\n    d2211: d2211,\n    d3210: d3210,\n    d3222: d3222,\n    d4410: d4410,\n    d4422: d4422,\n    d5220: d5220,\n    d5232: d5232,\n    d5421: d5421,\n    d5433: d5433,\n    dedt: dedt,\n    didt: didt,\n    dmdt: dmdt,\n    dndt: dndt,\n    dnodt: dnodt,\n    domdt: domdt,\n    del1: del1,\n    del2: del2,\n    del3: del3,\n    xfact: xfact,\n    xlamo: xlamo,\n    xli: xli,\n    xni: xni\n  };\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           function gstime\n *\n *  this function finds the greenwich sidereal time.\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    jdut1       - julian date in ut1             days from 4713 bc\n *\n *  outputs       :\n *    gstime      - greenwich sidereal time        0 to 2pi rad\n *\n *  locals        :\n *    temp        - temporary variable for doubles   rad\n *    tut1        - julian centuries from the\n *                  jan 1, 2000 12 h epoch (ut1)\n *\n *  coupling      :\n *    none\n *\n *  references    :\n *    vallado       2004, 191, eq 3-45\n * --------------------------------------------------------------------------- */\n\nfunction gstimeInternal(jdut1) {\n  var tut1 = (jdut1 - 2451545.0) / 36525.0;\n  var temp = -6.2e-6 * tut1 * tut1 * tut1 + 0.093104 * tut1 * tut1 + (876600.0 * 3600 + 8640184.812866) * tut1 + 67310.54841; // # sec\n\n  temp = temp * deg2rad / 240.0 % twoPi; // 360/86400 = 1/240, to deg, to rad\n  //  ------------------------ check quadrants ---------------------\n\n  if (temp < 0.0) {\n    temp += twoPi;\n  }\n\n  return temp;\n}\n\nfunction gstime() {\n  if ((arguments.length <= 0 ? undefined : arguments[0]) instanceof Date || arguments.length > 1) {\n    return gstimeInternal(jday.apply(void 0, arguments));\n  }\n\n  return gstimeInternal.apply(void 0, arguments);\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure initl\n *\n *  this procedure initializes the sgp4 propagator. all the initialization is\n *    consolidated here instead of having multiple loops inside other routines.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    ecco        - eccentricity                           0.0 - 1.0\n *    epoch       - epoch time in days from jan 0, 1950. 0 hr\n *    inclo       - inclination of satellite\n *    no          - mean motion of satellite\n *    satn        - satellite number\n *\n *  outputs       :\n *    ainv        - 1.0 / a\n *    ao          - semi major axis\n *    con41       -\n *    con42       - 1.0 - 5.0 cos(i)\n *    cosio       - cosine of inclination\n *    cosio2      - cosio squared\n *    eccsq       - eccentricity squared\n *    method      - flag for deep space                    'd', 'n'\n *    omeosq      - 1.0 - ecco * ecco\n *    posq        - semi-parameter squared\n *    rp          - radius of perigee\n *    rteosq      - square root of (1.0 - ecco*ecco)\n *    sinio       - sine of inclination\n *    gsto        - gst at time of observation               rad\n *    no          - mean motion of satellite\n *\n *  locals        :\n *    ak          -\n *    d1          -\n *    del         -\n *    adel        -\n *    po          -\n *\n *  coupling      :\n *    getgravconst\n *    gstime      - find greenwich sidereal time from the julian date\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\n\nfunction initl(options) {\n  var ecco = options.ecco,\n      epoch = options.epoch,\n      inclo = options.inclo,\n      opsmode = options.opsmode;\n  var no = options.no; // sgp4fix use old way of finding gst\n  // ----------------------- earth constants ---------------------\n  // sgp4fix identify constants and allow alternate values\n  // ------------- calculate auxillary epoch quantities ----------\n\n  var eccsq = ecco * ecco;\n  var omeosq = 1.0 - eccsq;\n  var rteosq = Math.sqrt(omeosq);\n  var cosio = Math.cos(inclo);\n  var cosio2 = cosio * cosio; // ------------------ un-kozai the mean motion -----------------\n\n  var ak = Math.pow(xke / no, x2o3);\n  var d1 = 0.75 * j2 * (3.0 * cosio2 - 1.0) / (rteosq * omeosq);\n  var delPrime = d1 / (ak * ak);\n  var adel = ak * (1.0 - delPrime * delPrime - delPrime * (1.0 / 3.0 + 134.0 * delPrime * delPrime / 81.0));\n  delPrime = d1 / (adel * adel);\n  no /= 1.0 + delPrime;\n  var ao = Math.pow(xke / no, x2o3);\n  var sinio = Math.sin(inclo);\n  var po = ao * omeosq;\n  var con42 = 1.0 - 5.0 * cosio2;\n  var con41 = -con42 - cosio2 - cosio2;\n  var ainv = 1.0 / ao;\n  var posq = po * po;\n  var rp = ao * (1.0 - ecco);\n  var method = 'n'; //  sgp4fix modern approach to finding sidereal time\n\n  var gsto;\n\n  if (opsmode === 'a') {\n    //  sgp4fix use old way of finding gst\n    //  count integer number of days from 0 jan 1970\n    var ts70 = epoch - 7305.0;\n    var ds70 = Math.floor(ts70 + 1.0e-8);\n    var tfrac = ts70 - ds70; //  find greenwich location at epoch\n\n    var c1 = 1.72027916940703639e-2;\n    var thgr70 = 1.7321343856509374;\n    var fk5r = 5.07551419432269442e-15;\n    var c1p2p = c1 + twoPi;\n    gsto = (thgr70 + c1 * ds70 + c1p2p * tfrac + ts70 * ts70 * fk5r) % twoPi;\n\n    if (gsto < 0.0) {\n      gsto += twoPi;\n    }\n  } else {\n    gsto = gstime(epoch + 2433281.5);\n  }\n\n  return {\n    no: no,\n    method: method,\n    ainv: ainv,\n    ao: ao,\n    con41: con41,\n    con42: con42,\n    cosio: cosio,\n    cosio2: cosio2,\n    eccsq: eccsq,\n    omeosq: omeosq,\n    posq: posq,\n    rp: rp,\n    rteosq: rteosq,\n    sinio: sinio,\n    gsto: gsto\n  };\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure dspace\n *\n *  this procedure provides deep space contributions to mean elements for\n *    perturbing third body.  these effects have been averaged over one\n *    revolution of the sun and moon.  for earth resonance effects, the\n *    effects have been averaged over no revolutions of the satellite.\n *    (mean motion)\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    d2201, d2211, d3210, d3222, d4410, d4422, d5220, d5232, d5421, d5433 -\n *    dedt        -\n *    del1, del2, del3  -\n *    didt        -\n *    dmdt        -\n *    dnodt       -\n *    domdt       -\n *    irez        - flag for resonance           0-none, 1-one day, 2-half day\n *    argpo       - argument of perigee\n *    argpdot     - argument of perigee dot (rate)\n *    t           - time\n *    tc          -\n *    gsto        - gst\n *    xfact       -\n *    xlamo       -\n *    no          - mean motion\n *    atime       -\n *    em          - eccentricity\n *    ft          -\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    xli         -\n *    mm          - mean anomaly\n *    xni         - mean motion\n *    nodem       - right ascension of ascending node\n *\n *  outputs       :\n *    atime       -\n *    em          - eccentricity\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    xli         -\n *    mm          - mean anomaly\n *    xni         -\n *    nodem       - right ascension of ascending node\n *    dndt        -\n *    nm          - mean motion\n *\n *  locals        :\n *    delt        -\n *    ft          -\n *    theta       -\n *    x2li        -\n *    x2omi       -\n *    xl          -\n *    xldot       -\n *    xnddt       -\n *    xndt        -\n *    xomi        -\n *\n *  coupling      :\n *    none        -\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\n\nfunction dspace(options) {\n  var irez = options.irez,\n      d2201 = options.d2201,\n      d2211 = options.d2211,\n      d3210 = options.d3210,\n      d3222 = options.d3222,\n      d4410 = options.d4410,\n      d4422 = options.d4422,\n      d5220 = options.d5220,\n      d5232 = options.d5232,\n      d5421 = options.d5421,\n      d5433 = options.d5433,\n      dedt = options.dedt,\n      del1 = options.del1,\n      del2 = options.del2,\n      del3 = options.del3,\n      didt = options.didt,\n      dmdt = options.dmdt,\n      dnodt = options.dnodt,\n      domdt = options.domdt,\n      argpo = options.argpo,\n      argpdot = options.argpdot,\n      t = options.t,\n      tc = options.tc,\n      gsto = options.gsto,\n      xfact = options.xfact,\n      xlamo = options.xlamo,\n      no = options.no;\n  var atime = options.atime,\n      em = options.em,\n      argpm = options.argpm,\n      inclm = options.inclm,\n      xli = options.xli,\n      mm = options.mm,\n      xni = options.xni,\n      nodem = options.nodem,\n      nm = options.nm;\n  var fasx2 = 0.13130908;\n  var fasx4 = 2.8843198;\n  var fasx6 = 0.37448087;\n  var g22 = 5.7686396;\n  var g32 = 0.95240898;\n  var g44 = 1.8014998;\n  var g52 = 1.0508330;\n  var g54 = 4.4108898;\n  var rptim = 4.37526908801129966e-3; // equates to 7.29211514668855e-5 rad/sec\n\n  var stepp = 720.0;\n  var stepn = -720.0;\n  var step2 = 259200.0;\n  var delt;\n  var x2li;\n  var x2omi;\n  var xl;\n  var xldot;\n  var xnddt;\n  var xndt;\n  var xomi;\n  var dndt = 0.0;\n  var ft = 0.0; //  ----------- calculate deep space resonance effects -----------\n\n  var theta = (gsto + tc * rptim) % twoPi;\n  em += dedt * t;\n  inclm += didt * t;\n  argpm += domdt * t;\n  nodem += dnodt * t;\n  mm += dmdt * t; // sgp4fix for negative inclinations\n  // the following if statement should be commented out\n  // if (inclm < 0.0)\n  // {\n  //   inclm = -inclm;\n  //   argpm = argpm - pi;\n  //   nodem = nodem + pi;\n  // }\n\n  /* - update resonances : numerical (euler-maclaurin) integration - */\n\n  /* ------------------------- epoch restart ----------------------  */\n  //   sgp4fix for propagator problems\n  //   the following integration works for negative time steps and periods\n  //   the specific changes are unknown because the original code was so convoluted\n  // sgp4fix take out atime = 0.0 and fix for faster operation\n\n  if (irez !== 0) {\n    //  sgp4fix streamline check\n    if (atime === 0.0 || t * atime <= 0.0 || Math.abs(t) < Math.abs(atime)) {\n      atime = 0.0;\n      xni = no;\n      xli = xlamo;\n    } // sgp4fix move check outside loop\n\n\n    if (t > 0.0) {\n      delt = stepp;\n    } else {\n      delt = stepn;\n    }\n\n    var iretn = 381; // added for do loop\n\n    while (iretn === 381) {\n      //  ------------------- dot terms calculated -------------\n      //  ----------- near - synchronous resonance terms -------\n      if (irez !== 2) {\n        xndt = del1 * Math.sin(xli - fasx2) + del2 * Math.sin(2.0 * (xli - fasx4)) + del3 * Math.sin(3.0 * (xli - fasx6));\n        xldot = xni + xfact;\n        xnddt = del1 * Math.cos(xli - fasx2) + 2.0 * del2 * Math.cos(2.0 * (xli - fasx4)) + 3.0 * del3 * Math.cos(3.0 * (xli - fasx6));\n        xnddt *= xldot;\n      } else {\n        // --------- near - half-day resonance terms --------\n        xomi = argpo + argpdot * atime;\n        x2omi = xomi + xomi;\n        x2li = xli + xli;\n        xndt = d2201 * Math.sin(x2omi + xli - g22) + d2211 * Math.sin(xli - g22) + d3210 * Math.sin(xomi + xli - g32) + d3222 * Math.sin(-xomi + xli - g32) + d4410 * Math.sin(x2omi + x2li - g44) + d4422 * Math.sin(x2li - g44) + d5220 * Math.sin(xomi + xli - g52) + d5232 * Math.sin(-xomi + xli - g52) + d5421 * Math.sin(xomi + x2li - g54) + d5433 * Math.sin(-xomi + x2li - g54);\n        xldot = xni + xfact;\n        xnddt = d2201 * Math.cos(x2omi + xli - g22) + d2211 * Math.cos(xli - g22) + d3210 * Math.cos(xomi + xli - g32) + d3222 * Math.cos(-xomi + xli - g32) + d5220 * Math.cos(xomi + xli - g52) + d5232 * Math.cos(-xomi + xli - g52) + 2.0 * d4410 * Math.cos(x2omi + x2li - g44) + d4422 * Math.cos(x2li - g44) + d5421 * Math.cos(xomi + x2li - g54) + d5433 * Math.cos(-xomi + x2li - g54);\n        xnddt *= xldot;\n      } //  ----------------------- integrator -------------------\n      //  sgp4fix move end checks to end of routine\n\n\n      if (Math.abs(t - atime) >= stepp) {\n        iretn = 381;\n      } else {\n        ft = t - atime;\n        iretn = 0;\n      }\n\n      if (iretn === 381) {\n        xli += xldot * delt + xndt * step2;\n        xni += xndt * delt + xnddt * step2;\n        atime += delt;\n      }\n    }\n\n    nm = xni + xndt * ft + xnddt * ft * ft * 0.5;\n    xl = xli + xldot * ft + xndt * ft * ft * 0.5;\n\n    if (irez !== 1) {\n      mm = xl - 2.0 * nodem + 2.0 * theta;\n      dndt = nm - no;\n    } else {\n      mm = xl - nodem - argpm + theta;\n      dndt = nm - no;\n    }\n\n    nm = no + dndt;\n  }\n\n  return {\n    atime: atime,\n    em: em,\n    argpm: argpm,\n    inclm: inclm,\n    xli: xli,\n    mm: mm,\n    xni: xni,\n    nodem: nodem,\n    dndt: dndt,\n    nm: nm\n  };\n}\n\n/*----------------------------------------------------------------------------\n *\n *                             procedure sgp4\n *\n *  this procedure is the sgp4 prediction model from space command. this is an\n *    updated and combined version of sgp4 and sdp4, which were originally\n *    published separately in spacetrack report //3. this version follows the\n *    methodology from the aiaa paper (2006) describing the history and\n *    development of the code.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    satrec  - initialised structure from sgp4init() call.\n *    tsince  - time since epoch (minutes)\n *\n *  outputs       :\n *    r           - position vector                     km\n *    v           - velocity                            km/sec\n *  return code - non-zero on error.\n *                   1 - mean elements, ecc >= 1.0 or ecc < -0.001 or a < 0.95 er\n *                   2 - mean motion less than 0.0\n *                   3 - pert elements, ecc < 0.0  or  ecc > 1.0\n *                   4 - semi-latus rectum < 0.0\n *                   5 - epoch elements are sub-orbital\n *                   6 - satellite has decayed\n *\n *  locals        :\n *    am          -\n *    axnl, aynl        -\n *    betal       -\n *    cosim   , sinim   , cosomm  , sinomm  , cnod    , snod    , cos2u   ,\n *    sin2u   , coseo1  , sineo1  , cosi    , sini    , cosip   , sinip   ,\n *    cosisq  , cossu   , sinsu   , cosu    , sinu\n *    delm        -\n *    delomg      -\n *    dndt        -\n *    eccm        -\n *    emsq        -\n *    ecose       -\n *    el2         -\n *    eo1         -\n *    eccp        -\n *    esine       -\n *    argpm       -\n *    argpp       -\n *    omgadf      -\n *    pl          -\n *    r           -\n *    rtemsq      -\n *    rdotl       -\n *    rl          -\n *    rvdot       -\n *    rvdotl      -\n *    su          -\n *    t2  , t3   , t4    , tc\n *    tem5, temp , temp1 , temp2  , tempa  , tempe  , templ\n *    u   , ux   , uy    , uz     , vx     , vy     , vz\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    nm          - mean motion\n *    nodem       - right asc of ascending node\n *    xinc        -\n *    xincp       -\n *    xl          -\n *    xlm         -\n *    mp          -\n *    xmdf        -\n *    xmx         -\n *    xmy         -\n *    nodedf      -\n *    xnode       -\n *    nodep       -\n *    np          -\n *\n *  coupling      :\n *    getgravconst-\n *    dpper\n *    dspace\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report //3 1980\n *    hoots, norad spacetrack report //6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\n\nfunction sgp4(satrec, tsince) {\n  /* eslint-disable no-param-reassign */\n  var coseo1;\n  var sineo1;\n  var cosip;\n  var sinip;\n  var cosisq;\n  var delm;\n  var delomg;\n  var eo1;\n  var argpm;\n  var argpp;\n  var su;\n  var t3;\n  var t4;\n  var tc;\n  var tem5;\n  var temp;\n  var tempa;\n  var tempe;\n  var templ;\n  var inclm;\n  var mm;\n  var nm;\n  var nodem;\n  var xincp;\n  var xlm;\n  var mp;\n  var nodep;\n  /* ------------------ set mathematical constants --------------- */\n  // sgp4fix divisor for divide by zero check on inclination\n  // the old check used 1.0 + cos(pi-1.0e-9), but then compared it to\n  // 1.5 e-12, so the threshold was changed to 1.5e-12 for consistency\n\n  var temp4 = 1.5e-12; // --------------------- clear sgp4 error flag -----------------\n\n  satrec.t = tsince;\n  satrec.error = 0; //  ------- update for secular gravity and atmospheric drag -----\n\n  var xmdf = satrec.mo + satrec.mdot * satrec.t;\n  var argpdf = satrec.argpo + satrec.argpdot * satrec.t;\n  var nodedf = satrec.nodeo + satrec.nodedot * satrec.t;\n  argpm = argpdf;\n  mm = xmdf;\n  var t2 = satrec.t * satrec.t;\n  nodem = nodedf + satrec.nodecf * t2;\n  tempa = 1.0 - satrec.cc1 * satrec.t;\n  tempe = satrec.bstar * satrec.cc4 * satrec.t;\n  templ = satrec.t2cof * t2;\n\n  if (satrec.isimp !== 1) {\n    delomg = satrec.omgcof * satrec.t; //  sgp4fix use mutliply for speed instead of pow\n\n    var delmtemp = 1.0 + satrec.eta * Math.cos(xmdf);\n    delm = satrec.xmcof * (delmtemp * delmtemp * delmtemp - satrec.delmo);\n    temp = delomg + delm;\n    mm = xmdf + temp;\n    argpm = argpdf - temp;\n    t3 = t2 * satrec.t;\n    t4 = t3 * satrec.t;\n    tempa = tempa - satrec.d2 * t2 - satrec.d3 * t3 - satrec.d4 * t4;\n    tempe += satrec.bstar * satrec.cc5 * (Math.sin(mm) - satrec.sinmao);\n    templ = templ + satrec.t3cof * t3 + t4 * (satrec.t4cof + satrec.t * satrec.t5cof);\n  }\n\n  nm = satrec.no;\n  var em = satrec.ecco;\n  inclm = satrec.inclo;\n\n  if (satrec.method === 'd') {\n    tc = satrec.t;\n    var dspaceOptions = {\n      irez: satrec.irez,\n      d2201: satrec.d2201,\n      d2211: satrec.d2211,\n      d3210: satrec.d3210,\n      d3222: satrec.d3222,\n      d4410: satrec.d4410,\n      d4422: satrec.d4422,\n      d5220: satrec.d5220,\n      d5232: satrec.d5232,\n      d5421: satrec.d5421,\n      d5433: satrec.d5433,\n      dedt: satrec.dedt,\n      del1: satrec.del1,\n      del2: satrec.del2,\n      del3: satrec.del3,\n      didt: satrec.didt,\n      dmdt: satrec.dmdt,\n      dnodt: satrec.dnodt,\n      domdt: satrec.domdt,\n      argpo: satrec.argpo,\n      argpdot: satrec.argpdot,\n      t: satrec.t,\n      tc: tc,\n      gsto: satrec.gsto,\n      xfact: satrec.xfact,\n      xlamo: satrec.xlamo,\n      no: satrec.no,\n      atime: satrec.atime,\n      em: em,\n      argpm: argpm,\n      inclm: inclm,\n      xli: satrec.xli,\n      mm: mm,\n      xni: satrec.xni,\n      nodem: nodem,\n      nm: nm\n    };\n    var dspaceResult = dspace(dspaceOptions);\n    em = dspaceResult.em;\n    argpm = dspaceResult.argpm;\n    inclm = dspaceResult.inclm;\n    mm = dspaceResult.mm;\n    nodem = dspaceResult.nodem;\n    nm = dspaceResult.nm;\n  }\n\n  if (nm <= 0.0) {\n    // printf(\"// error nm %f\\n\", nm);\n    satrec.error = 2; // sgp4fix add return\n\n    return [false, false];\n  }\n\n  var am = Math.pow(xke / nm, x2o3) * tempa * tempa;\n  nm = xke / Math.pow(am, 1.5);\n  em -= tempe; // fix tolerance for error recognition\n  // sgp4fix am is fixed from the previous nm check\n\n  if (em >= 1.0 || em < -0.001) {\n    // || (am < 0.95)\n    // printf(\"// error em %f\\n\", em);\n    satrec.error = 1; // sgp4fix to return if there is an error in eccentricity\n\n    return [false, false];\n  } //  sgp4fix fix tolerance to avoid a divide by zero\n\n\n  if (em < 1.0e-6) {\n    em = 1.0e-6;\n  }\n\n  mm += satrec.no * templ;\n  xlm = mm + argpm + nodem;\n  nodem %= twoPi;\n  argpm %= twoPi;\n  xlm %= twoPi;\n  mm = (xlm - argpm - nodem) % twoPi; // ----------------- compute extra mean quantities -------------\n\n  var sinim = Math.sin(inclm);\n  var cosim = Math.cos(inclm); // -------------------- add lunar-solar periodics --------------\n\n  var ep = em;\n  xincp = inclm;\n  argpp = argpm;\n  nodep = nodem;\n  mp = mm;\n  sinip = sinim;\n  cosip = cosim;\n\n  if (satrec.method === 'd') {\n    var dpperParameters = {\n      inclo: satrec.inclo,\n      init: 'n',\n      ep: ep,\n      inclp: xincp,\n      nodep: nodep,\n      argpp: argpp,\n      mp: mp,\n      opsmode: satrec.operationmode\n    };\n    var dpperResult = dpper(satrec, dpperParameters);\n    ep = dpperResult.ep;\n    nodep = dpperResult.nodep;\n    argpp = dpperResult.argpp;\n    mp = dpperResult.mp;\n    xincp = dpperResult.inclp;\n\n    if (xincp < 0.0) {\n      xincp = -xincp;\n      nodep += pi;\n      argpp -= pi;\n    }\n\n    if (ep < 0.0 || ep > 1.0) {\n      //  printf(\"// error ep %f\\n\", ep);\n      satrec.error = 3; //  sgp4fix add return\n\n      return [false, false];\n    }\n  } //  -------------------- long period periodics ------------------\n\n\n  if (satrec.method === 'd') {\n    sinip = Math.sin(xincp);\n    cosip = Math.cos(xincp);\n    satrec.aycof = -0.5 * j3oj2 * sinip; //  sgp4fix for divide by zero for xincp = 180 deg\n\n    if (Math.abs(cosip + 1.0) > 1.5e-12) {\n      satrec.xlcof = -0.25 * j3oj2 * sinip * (3.0 + 5.0 * cosip) / (1.0 + cosip);\n    } else {\n      satrec.xlcof = -0.25 * j3oj2 * sinip * (3.0 + 5.0 * cosip) / temp4;\n    }\n  }\n\n  var axnl = ep * Math.cos(argpp);\n  temp = 1.0 / (am * (1.0 - ep * ep));\n  var aynl = ep * Math.sin(argpp) + temp * satrec.aycof;\n  var xl = mp + argpp + nodep + temp * satrec.xlcof * axnl; // --------------------- solve kepler's equation ---------------\n\n  var u = (xl - nodep) % twoPi;\n  eo1 = u;\n  tem5 = 9999.9;\n  var ktr = 1; //    sgp4fix for kepler iteration\n  //    the following iteration needs better limits on corrections\n\n  while (Math.abs(tem5) >= 1.0e-12 && ktr <= 10) {\n    sineo1 = Math.sin(eo1);\n    coseo1 = Math.cos(eo1);\n    tem5 = 1.0 - coseo1 * axnl - sineo1 * aynl;\n    tem5 = (u - aynl * coseo1 + axnl * sineo1 - eo1) / tem5;\n\n    if (Math.abs(tem5) >= 0.95) {\n      if (tem5 > 0.0) {\n        tem5 = 0.95;\n      } else {\n        tem5 = -0.95;\n      }\n    }\n\n    eo1 += tem5;\n    ktr += 1;\n  } //  ------------- short period preliminary quantities -----------\n\n\n  var ecose = axnl * coseo1 + aynl * sineo1;\n  var esine = axnl * sineo1 - aynl * coseo1;\n  var el2 = axnl * axnl + aynl * aynl;\n  var pl = am * (1.0 - el2);\n\n  if (pl < 0.0) {\n    //  printf(\"// error pl %f\\n\", pl);\n    satrec.error = 4; //  sgp4fix add return\n\n    return [false, false];\n  }\n\n  var rl = am * (1.0 - ecose);\n  var rdotl = Math.sqrt(am) * esine / rl;\n  var rvdotl = Math.sqrt(pl) / rl;\n  var betal = Math.sqrt(1.0 - el2);\n  temp = esine / (1.0 + betal);\n  var sinu = am / rl * (sineo1 - aynl - axnl * temp);\n  var cosu = am / rl * (coseo1 - axnl + aynl * temp);\n  su = Math.atan2(sinu, cosu);\n  var sin2u = (cosu + cosu) * sinu;\n  var cos2u = 1.0 - 2.0 * sinu * sinu;\n  temp = 1.0 / pl;\n  var temp1 = 0.5 * j2 * temp;\n  var temp2 = temp1 * temp; // -------------- update for short period periodics ------------\n\n  if (satrec.method === 'd') {\n    cosisq = cosip * cosip;\n    satrec.con41 = 3.0 * cosisq - 1.0;\n    satrec.x1mth2 = 1.0 - cosisq;\n    satrec.x7thm1 = 7.0 * cosisq - 1.0;\n  }\n\n  var mrt = rl * (1.0 - 1.5 * temp2 * betal * satrec.con41) + 0.5 * temp1 * satrec.x1mth2 * cos2u; // sgp4fix for decaying satellites\n\n  if (mrt < 1.0) {\n    // printf(\"// decay condition %11.6f \\n\",mrt);\n    satrec.error = 6;\n    return {\n      position: false,\n      velocity: false\n    };\n  }\n\n  su -= 0.25 * temp2 * satrec.x7thm1 * sin2u;\n  var xnode = nodep + 1.5 * temp2 * cosip * sin2u;\n  var xinc = xincp + 1.5 * temp2 * cosip * sinip * cos2u;\n  var mvt = rdotl - nm * temp1 * satrec.x1mth2 * sin2u / xke;\n  var rvdot = rvdotl + nm * temp1 * (satrec.x1mth2 * cos2u + 1.5 * satrec.con41) / xke; // --------------------- orientation vectors -------------------\n\n  var sinsu = Math.sin(su);\n  var cossu = Math.cos(su);\n  var snod = Math.sin(xnode);\n  var cnod = Math.cos(xnode);\n  var sini = Math.sin(xinc);\n  var cosi = Math.cos(xinc);\n  var xmx = -snod * cosi;\n  var xmy = cnod * cosi;\n  var ux = xmx * sinsu + cnod * cossu;\n  var uy = xmy * sinsu + snod * cossu;\n  var uz = sini * sinsu;\n  var vx = xmx * cossu - cnod * sinsu;\n  var vy = xmy * cossu - snod * sinsu;\n  var vz = sini * cossu; // --------- position and velocity (in km and km/sec) ----------\n\n  var r = {\n    x: mrt * ux * earthRadius,\n    y: mrt * uy * earthRadius,\n    z: mrt * uz * earthRadius\n  };\n  var v = {\n    x: (mvt * ux + rvdot * vx) * vkmpersec,\n    y: (mvt * uy + rvdot * vy) * vkmpersec,\n    z: (mvt * uz + rvdot * vz) * vkmpersec\n  };\n  return {\n    position: r,\n    velocity: v\n  };\n  /* eslint-enable no-param-reassign */\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                             procedure sgp4init\n *\n *  this procedure initializes variables for sgp4.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    opsmode     - mode of operation afspc or improved 'a', 'i'\n *    satn        - satellite number\n *    bstar       - sgp4 type drag coefficient              kg/m2er\n *    ecco        - eccentricity\n *    epoch       - epoch time in days from jan 0, 1950. 0 hr\n *    argpo       - argument of perigee (output if ds)\n *    inclo       - inclination\n *    mo          - mean anomaly (output if ds)\n *    no          - mean motion\n *    nodeo       - right ascension of ascending node\n *\n *  outputs       :\n *    rec      - common values for subsequent calls\n *    return code - non-zero on error.\n *                   1 - mean elements, ecc >= 1.0 or ecc < -0.001 or a < 0.95 er\n *                   2 - mean motion less than 0.0\n *                   3 - pert elements, ecc < 0.0  or  ecc > 1.0\n *                   4 - semi-latus rectum < 0.0\n *                   5 - epoch elements are sub-orbital\n *                   6 - satellite has decayed\n *\n *  locals        :\n *    cnodm  , snodm  , cosim  , sinim  , cosomm , sinomm\n *    cc1sq  , cc2    , cc3\n *    coef   , coef1\n *    cosio4      -\n *    day         -\n *    dndt        -\n *    em          - eccentricity\n *    emsq        - eccentricity squared\n *    eeta        -\n *    etasq       -\n *    gam         -\n *    argpm       - argument of perigee\n *    nodem       -\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    nm          - mean motion\n *    perige      - perigee\n *    pinvsq      -\n *    psisq       -\n *    qzms24      -\n *    rtemsq      -\n *    s1, s2, s3, s4, s5, s6, s7          -\n *    sfour       -\n *    ss1, ss2, ss3, ss4, ss5, ss6, ss7         -\n *    sz1, sz2, sz3\n *    sz11, sz12, sz13, sz21, sz22, sz23, sz31, sz32, sz33        -\n *    tc          -\n *    temp        -\n *    temp1, temp2, temp3       -\n *    tsi         -\n *    xpidot      -\n *    xhdot1      -\n *    z1, z2, z3          -\n *    z11, z12, z13, z21, z22, z23, z31, z32, z33         -\n *\n *  coupling      :\n *    getgravconst-\n *    initl       -\n *    dscom       -\n *    dpper       -\n *    dsinit      -\n *    sgp4        -\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\n\nfunction sgp4init(satrec, options) {\n  /* eslint-disable no-param-reassign */\n  var opsmode = options.opsmode,\n      satn = options.satn,\n      epoch = options.epoch,\n      xbstar = options.xbstar,\n      xecco = options.xecco,\n      xargpo = options.xargpo,\n      xinclo = options.xinclo,\n      xmo = options.xmo,\n      xno = options.xno,\n      xnodeo = options.xnodeo;\n  var cosim;\n  var sinim;\n  var cc1sq;\n  var cc2;\n  var cc3;\n  var coef;\n  var coef1;\n  var cosio4;\n  var em;\n  var emsq;\n  var eeta;\n  var etasq;\n  var argpm;\n  var nodem;\n  var inclm;\n  var mm;\n  var nm;\n  var perige;\n  var pinvsq;\n  var psisq;\n  var qzms24;\n  var s1;\n  var s2;\n  var s3;\n  var s4;\n  var s5;\n  var sfour;\n  var ss1;\n  var ss2;\n  var ss3;\n  var ss4;\n  var ss5;\n  var sz1;\n  var sz3;\n  var sz11;\n  var sz13;\n  var sz21;\n  var sz23;\n  var sz31;\n  var sz33;\n  var tc;\n  var temp;\n  var temp1;\n  var temp2;\n  var temp3;\n  var tsi;\n  var xpidot;\n  var xhdot1;\n  var z1;\n  var z3;\n  var z11;\n  var z13;\n  var z21;\n  var z23;\n  var z31;\n  var z33;\n  /* ------------------------ initialization --------------------- */\n  // sgp4fix divisor for divide by zero check on inclination\n  // the old check used 1.0 + Math.cos(pi-1.0e-9), but then compared it to\n  // 1.5 e-12, so the threshold was changed to 1.5e-12 for consistency\n\n  var temp4 = 1.5e-12; // ----------- set all near earth variables to zero ------------\n\n  satrec.isimp = 0;\n  satrec.method = 'n';\n  satrec.aycof = 0.0;\n  satrec.con41 = 0.0;\n  satrec.cc1 = 0.0;\n  satrec.cc4 = 0.0;\n  satrec.cc5 = 0.0;\n  satrec.d2 = 0.0;\n  satrec.d3 = 0.0;\n  satrec.d4 = 0.0;\n  satrec.delmo = 0.0;\n  satrec.eta = 0.0;\n  satrec.argpdot = 0.0;\n  satrec.omgcof = 0.0;\n  satrec.sinmao = 0.0;\n  satrec.t = 0.0;\n  satrec.t2cof = 0.0;\n  satrec.t3cof = 0.0;\n  satrec.t4cof = 0.0;\n  satrec.t5cof = 0.0;\n  satrec.x1mth2 = 0.0;\n  satrec.x7thm1 = 0.0;\n  satrec.mdot = 0.0;\n  satrec.nodedot = 0.0;\n  satrec.xlcof = 0.0;\n  satrec.xmcof = 0.0;\n  satrec.nodecf = 0.0; // ----------- set all deep space variables to zero ------------\n\n  satrec.irez = 0;\n  satrec.d2201 = 0.0;\n  satrec.d2211 = 0.0;\n  satrec.d3210 = 0.0;\n  satrec.d3222 = 0.0;\n  satrec.d4410 = 0.0;\n  satrec.d4422 = 0.0;\n  satrec.d5220 = 0.0;\n  satrec.d5232 = 0.0;\n  satrec.d5421 = 0.0;\n  satrec.d5433 = 0.0;\n  satrec.dedt = 0.0;\n  satrec.del1 = 0.0;\n  satrec.del2 = 0.0;\n  satrec.del3 = 0.0;\n  satrec.didt = 0.0;\n  satrec.dmdt = 0.0;\n  satrec.dnodt = 0.0;\n  satrec.domdt = 0.0;\n  satrec.e3 = 0.0;\n  satrec.ee2 = 0.0;\n  satrec.peo = 0.0;\n  satrec.pgho = 0.0;\n  satrec.pho = 0.0;\n  satrec.pinco = 0.0;\n  satrec.plo = 0.0;\n  satrec.se2 = 0.0;\n  satrec.se3 = 0.0;\n  satrec.sgh2 = 0.0;\n  satrec.sgh3 = 0.0;\n  satrec.sgh4 = 0.0;\n  satrec.sh2 = 0.0;\n  satrec.sh3 = 0.0;\n  satrec.si2 = 0.0;\n  satrec.si3 = 0.0;\n  satrec.sl2 = 0.0;\n  satrec.sl3 = 0.0;\n  satrec.sl4 = 0.0;\n  satrec.gsto = 0.0;\n  satrec.xfact = 0.0;\n  satrec.xgh2 = 0.0;\n  satrec.xgh3 = 0.0;\n  satrec.xgh4 = 0.0;\n  satrec.xh2 = 0.0;\n  satrec.xh3 = 0.0;\n  satrec.xi2 = 0.0;\n  satrec.xi3 = 0.0;\n  satrec.xl2 = 0.0;\n  satrec.xl3 = 0.0;\n  satrec.xl4 = 0.0;\n  satrec.xlamo = 0.0;\n  satrec.zmol = 0.0;\n  satrec.zmos = 0.0;\n  satrec.atime = 0.0;\n  satrec.xli = 0.0;\n  satrec.xni = 0.0; // sgp4fix - note the following variables are also passed directly via satrec.\n  // it is possible to streamline the sgp4init call by deleting the \"x\"\n  // variables, but the user would need to set the satrec.* values first. we\n  // include the additional assignments in case twoline2rv is not used.\n\n  satrec.bstar = xbstar;\n  satrec.ecco = xecco;\n  satrec.argpo = xargpo;\n  satrec.inclo = xinclo;\n  satrec.mo = xmo;\n  satrec.no = xno;\n  satrec.nodeo = xnodeo; //  sgp4fix add opsmode\n\n  satrec.operationmode = opsmode; // ------------------------ earth constants -----------------------\n  // sgp4fix identify constants and allow alternate values\n\n  var ss = 78.0 / earthRadius + 1.0; // sgp4fix use multiply for speed instead of pow\n\n  var qzms2ttemp = (120.0 - 78.0) / earthRadius;\n  var qzms2t = qzms2ttemp * qzms2ttemp * qzms2ttemp * qzms2ttemp;\n  satrec.init = 'y';\n  satrec.t = 0.0;\n  var initlOptions = {\n    satn: satn,\n    ecco: satrec.ecco,\n    epoch: epoch,\n    inclo: satrec.inclo,\n    no: satrec.no,\n    method: satrec.method,\n    opsmode: satrec.operationmode\n  };\n  var initlResult = initl(initlOptions);\n  var ao = initlResult.ao,\n      con42 = initlResult.con42,\n      cosio = initlResult.cosio,\n      cosio2 = initlResult.cosio2,\n      eccsq = initlResult.eccsq,\n      omeosq = initlResult.omeosq,\n      posq = initlResult.posq,\n      rp = initlResult.rp,\n      rteosq = initlResult.rteosq,\n      sinio = initlResult.sinio;\n  satrec.no = initlResult.no;\n  satrec.con41 = initlResult.con41;\n  satrec.gsto = initlResult.gsto;\n  satrec.error = 0; // sgp4fix remove this check as it is unnecessary\n  // the mrt check in sgp4 handles decaying satellite cases even if the starting\n  // condition is below the surface of te earth\n  // if (rp < 1.0)\n  // {\n  //   printf(\"// *** satn%d epoch elts sub-orbital ***\\n\", satn);\n  //   satrec.error = 5;\n  // }\n\n  if (omeosq >= 0.0 || satrec.no >= 0.0) {\n    satrec.isimp = 0;\n\n    if (rp < 220.0 / earthRadius + 1.0) {\n      satrec.isimp = 1;\n    }\n\n    sfour = ss;\n    qzms24 = qzms2t;\n    perige = (rp - 1.0) * earthRadius; // - for perigees below 156 km, s and qoms2t are altered -\n\n    if (perige < 156.0) {\n      sfour = perige - 78.0;\n\n      if (perige < 98.0) {\n        sfour = 20.0;\n      } // sgp4fix use multiply for speed instead of pow\n\n\n      var qzms24temp = (120.0 - sfour) / earthRadius;\n      qzms24 = qzms24temp * qzms24temp * qzms24temp * qzms24temp;\n      sfour = sfour / earthRadius + 1.0;\n    }\n\n    pinvsq = 1.0 / posq;\n    tsi = 1.0 / (ao - sfour);\n    satrec.eta = ao * satrec.ecco * tsi;\n    etasq = satrec.eta * satrec.eta;\n    eeta = satrec.ecco * satrec.eta;\n    psisq = Math.abs(1.0 - etasq);\n    coef = qzms24 * Math.pow(tsi, 4.0);\n    coef1 = coef / Math.pow(psisq, 3.5);\n    cc2 = coef1 * satrec.no * (ao * (1.0 + 1.5 * etasq + eeta * (4.0 + etasq)) + 0.375 * j2 * tsi / psisq * satrec.con41 * (8.0 + 3.0 * etasq * (8.0 + etasq)));\n    satrec.cc1 = satrec.bstar * cc2;\n    cc3 = 0.0;\n\n    if (satrec.ecco > 1.0e-4) {\n      cc3 = -2.0 * coef * tsi * j3oj2 * satrec.no * sinio / satrec.ecco;\n    }\n\n    satrec.x1mth2 = 1.0 - cosio2;\n    satrec.cc4 = 2.0 * satrec.no * coef1 * ao * omeosq * (satrec.eta * (2.0 + 0.5 * etasq) + satrec.ecco * (0.5 + 2.0 * etasq) - j2 * tsi / (ao * psisq) * (-3.0 * satrec.con41 * (1.0 - 2.0 * eeta + etasq * (1.5 - 0.5 * eeta)) + 0.75 * satrec.x1mth2 * (2.0 * etasq - eeta * (1.0 + etasq)) * Math.cos(2.0 * satrec.argpo)));\n    satrec.cc5 = 2.0 * coef1 * ao * omeosq * (1.0 + 2.75 * (etasq + eeta) + eeta * etasq);\n    cosio4 = cosio2 * cosio2;\n    temp1 = 1.5 * j2 * pinvsq * satrec.no;\n    temp2 = 0.5 * temp1 * j2 * pinvsq;\n    temp3 = -0.46875 * j4 * pinvsq * pinvsq * satrec.no;\n    satrec.mdot = satrec.no + 0.5 * temp1 * rteosq * satrec.con41 + 0.0625 * temp2 * rteosq * (13.0 - 78.0 * cosio2 + 137.0 * cosio4);\n    satrec.argpdot = -0.5 * temp1 * con42 + 0.0625 * temp2 * (7.0 - 114.0 * cosio2 + 395.0 * cosio4) + temp3 * (3.0 - 36.0 * cosio2 + 49.0 * cosio4);\n    xhdot1 = -temp1 * cosio;\n    satrec.nodedot = xhdot1 + (0.5 * temp2 * (4.0 - 19.0 * cosio2) + 2.0 * temp3 * (3.0 - 7.0 * cosio2)) * cosio;\n    xpidot = satrec.argpdot + satrec.nodedot;\n    satrec.omgcof = satrec.bstar * cc3 * Math.cos(satrec.argpo);\n    satrec.xmcof = 0.0;\n\n    if (satrec.ecco > 1.0e-4) {\n      satrec.xmcof = -x2o3 * coef * satrec.bstar / eeta;\n    }\n\n    satrec.nodecf = 3.5 * omeosq * xhdot1 * satrec.cc1;\n    satrec.t2cof = 1.5 * satrec.cc1; // sgp4fix for divide by zero with xinco = 180 deg\n\n    if (Math.abs(cosio + 1.0) > 1.5e-12) {\n      satrec.xlcof = -0.25 * j3oj2 * sinio * (3.0 + 5.0 * cosio) / (1.0 + cosio);\n    } else {\n      satrec.xlcof = -0.25 * j3oj2 * sinio * (3.0 + 5.0 * cosio) / temp4;\n    }\n\n    satrec.aycof = -0.5 * j3oj2 * sinio; // sgp4fix use multiply for speed instead of pow\n\n    var delmotemp = 1.0 + satrec.eta * Math.cos(satrec.mo);\n    satrec.delmo = delmotemp * delmotemp * delmotemp;\n    satrec.sinmao = Math.sin(satrec.mo);\n    satrec.x7thm1 = 7.0 * cosio2 - 1.0; // --------------- deep space initialization -------------\n\n    if (2 * pi / satrec.no >= 225.0) {\n      satrec.method = 'd';\n      satrec.isimp = 1;\n      tc = 0.0;\n      inclm = satrec.inclo;\n      var dscomOptions = {\n        epoch: epoch,\n        ep: satrec.ecco,\n        argpp: satrec.argpo,\n        tc: tc,\n        inclp: satrec.inclo,\n        nodep: satrec.nodeo,\n        np: satrec.no,\n        e3: satrec.e3,\n        ee2: satrec.ee2,\n        peo: satrec.peo,\n        pgho: satrec.pgho,\n        pho: satrec.pho,\n        pinco: satrec.pinco,\n        plo: satrec.plo,\n        se2: satrec.se2,\n        se3: satrec.se3,\n        sgh2: satrec.sgh2,\n        sgh3: satrec.sgh3,\n        sgh4: satrec.sgh4,\n        sh2: satrec.sh2,\n        sh3: satrec.sh3,\n        si2: satrec.si2,\n        si3: satrec.si3,\n        sl2: satrec.sl2,\n        sl3: satrec.sl3,\n        sl4: satrec.sl4,\n        xgh2: satrec.xgh2,\n        xgh3: satrec.xgh3,\n        xgh4: satrec.xgh4,\n        xh2: satrec.xh2,\n        xh3: satrec.xh3,\n        xi2: satrec.xi2,\n        xi3: satrec.xi3,\n        xl2: satrec.xl2,\n        xl3: satrec.xl3,\n        xl4: satrec.xl4,\n        zmol: satrec.zmol,\n        zmos: satrec.zmos\n      };\n      var dscomResult = dscom(dscomOptions);\n      satrec.e3 = dscomResult.e3;\n      satrec.ee2 = dscomResult.ee2;\n      satrec.peo = dscomResult.peo;\n      satrec.pgho = dscomResult.pgho;\n      satrec.pho = dscomResult.pho;\n      satrec.pinco = dscomResult.pinco;\n      satrec.plo = dscomResult.plo;\n      satrec.se2 = dscomResult.se2;\n      satrec.se3 = dscomResult.se3;\n      satrec.sgh2 = dscomResult.sgh2;\n      satrec.sgh3 = dscomResult.sgh3;\n      satrec.sgh4 = dscomResult.sgh4;\n      satrec.sh2 = dscomResult.sh2;\n      satrec.sh3 = dscomResult.sh3;\n      satrec.si2 = dscomResult.si2;\n      satrec.si3 = dscomResult.si3;\n      satrec.sl2 = dscomResult.sl2;\n      satrec.sl3 = dscomResult.sl3;\n      satrec.sl4 = dscomResult.sl4;\n      sinim = dscomResult.sinim;\n      cosim = dscomResult.cosim;\n      em = dscomResult.em;\n      emsq = dscomResult.emsq;\n      s1 = dscomResult.s1;\n      s2 = dscomResult.s2;\n      s3 = dscomResult.s3;\n      s4 = dscomResult.s4;\n      s5 = dscomResult.s5;\n      ss1 = dscomResult.ss1;\n      ss2 = dscomResult.ss2;\n      ss3 = dscomResult.ss3;\n      ss4 = dscomResult.ss4;\n      ss5 = dscomResult.ss5;\n      sz1 = dscomResult.sz1;\n      sz3 = dscomResult.sz3;\n      sz11 = dscomResult.sz11;\n      sz13 = dscomResult.sz13;\n      sz21 = dscomResult.sz21;\n      sz23 = dscomResult.sz23;\n      sz31 = dscomResult.sz31;\n      sz33 = dscomResult.sz33;\n      satrec.xgh2 = dscomResult.xgh2;\n      satrec.xgh3 = dscomResult.xgh3;\n      satrec.xgh4 = dscomResult.xgh4;\n      satrec.xh2 = dscomResult.xh2;\n      satrec.xh3 = dscomResult.xh3;\n      satrec.xi2 = dscomResult.xi2;\n      satrec.xi3 = dscomResult.xi3;\n      satrec.xl2 = dscomResult.xl2;\n      satrec.xl3 = dscomResult.xl3;\n      satrec.xl4 = dscomResult.xl4;\n      satrec.zmol = dscomResult.zmol;\n      satrec.zmos = dscomResult.zmos;\n      nm = dscomResult.nm;\n      z1 = dscomResult.z1;\n      z3 = dscomResult.z3;\n      z11 = dscomResult.z11;\n      z13 = dscomResult.z13;\n      z21 = dscomResult.z21;\n      z23 = dscomResult.z23;\n      z31 = dscomResult.z31;\n      z33 = dscomResult.z33;\n      var dpperOptions = {\n        inclo: inclm,\n        init: satrec.init,\n        ep: satrec.ecco,\n        inclp: satrec.inclo,\n        nodep: satrec.nodeo,\n        argpp: satrec.argpo,\n        mp: satrec.mo,\n        opsmode: satrec.operationmode\n      };\n      var dpperResult = dpper(satrec, dpperOptions);\n      satrec.ecco = dpperResult.ep;\n      satrec.inclo = dpperResult.inclp;\n      satrec.nodeo = dpperResult.nodep;\n      satrec.argpo = dpperResult.argpp;\n      satrec.mo = dpperResult.mp;\n      argpm = 0.0;\n      nodem = 0.0;\n      mm = 0.0;\n      var dsinitOptions = {\n        cosim: cosim,\n        emsq: emsq,\n        argpo: satrec.argpo,\n        s1: s1,\n        s2: s2,\n        s3: s3,\n        s4: s4,\n        s5: s5,\n        sinim: sinim,\n        ss1: ss1,\n        ss2: ss2,\n        ss3: ss3,\n        ss4: ss4,\n        ss5: ss5,\n        sz1: sz1,\n        sz3: sz3,\n        sz11: sz11,\n        sz13: sz13,\n        sz21: sz21,\n        sz23: sz23,\n        sz31: sz31,\n        sz33: sz33,\n        t: satrec.t,\n        tc: tc,\n        gsto: satrec.gsto,\n        mo: satrec.mo,\n        mdot: satrec.mdot,\n        no: satrec.no,\n        nodeo: satrec.nodeo,\n        nodedot: satrec.nodedot,\n        xpidot: xpidot,\n        z1: z1,\n        z3: z3,\n        z11: z11,\n        z13: z13,\n        z21: z21,\n        z23: z23,\n        z31: z31,\n        z33: z33,\n        ecco: satrec.ecco,\n        eccsq: eccsq,\n        em: em,\n        argpm: argpm,\n        inclm: inclm,\n        mm: mm,\n        nm: nm,\n        nodem: nodem,\n        irez: satrec.irez,\n        atime: satrec.atime,\n        d2201: satrec.d2201,\n        d2211: satrec.d2211,\n        d3210: satrec.d3210,\n        d3222: satrec.d3222,\n        d4410: satrec.d4410,\n        d4422: satrec.d4422,\n        d5220: satrec.d5220,\n        d5232: satrec.d5232,\n        d5421: satrec.d5421,\n        d5433: satrec.d5433,\n        dedt: satrec.dedt,\n        didt: satrec.didt,\n        dmdt: satrec.dmdt,\n        dnodt: satrec.dnodt,\n        domdt: satrec.domdt,\n        del1: satrec.del1,\n        del2: satrec.del2,\n        del3: satrec.del3,\n        xfact: satrec.xfact,\n        xlamo: satrec.xlamo,\n        xli: satrec.xli,\n        xni: satrec.xni\n      };\n      var dsinitResult = dsinit(dsinitOptions);\n      satrec.irez = dsinitResult.irez;\n      satrec.atime = dsinitResult.atime;\n      satrec.d2201 = dsinitResult.d2201;\n      satrec.d2211 = dsinitResult.d2211;\n      satrec.d3210 = dsinitResult.d3210;\n      satrec.d3222 = dsinitResult.d3222;\n      satrec.d4410 = dsinitResult.d4410;\n      satrec.d4422 = dsinitResult.d4422;\n      satrec.d5220 = dsinitResult.d5220;\n      satrec.d5232 = dsinitResult.d5232;\n      satrec.d5421 = dsinitResult.d5421;\n      satrec.d5433 = dsinitResult.d5433;\n      satrec.dedt = dsinitResult.dedt;\n      satrec.didt = dsinitResult.didt;\n      satrec.dmdt = dsinitResult.dmdt;\n      satrec.dnodt = dsinitResult.dnodt;\n      satrec.domdt = dsinitResult.domdt;\n      satrec.del1 = dsinitResult.del1;\n      satrec.del2 = dsinitResult.del2;\n      satrec.del3 = dsinitResult.del3;\n      satrec.xfact = dsinitResult.xfact;\n      satrec.xlamo = dsinitResult.xlamo;\n      satrec.xli = dsinitResult.xli;\n      satrec.xni = dsinitResult.xni;\n    } // ----------- set variables if not deep space -----------\n\n\n    if (satrec.isimp !== 1) {\n      cc1sq = satrec.cc1 * satrec.cc1;\n      satrec.d2 = 4.0 * ao * tsi * cc1sq;\n      temp = satrec.d2 * tsi * satrec.cc1 / 3.0;\n      satrec.d3 = (17.0 * ao + sfour) * temp;\n      satrec.d4 = 0.5 * temp * ao * tsi * (221.0 * ao + 31.0 * sfour) * satrec.cc1;\n      satrec.t3cof = satrec.d2 + 2.0 * cc1sq;\n      satrec.t4cof = 0.25 * (3.0 * satrec.d3 + satrec.cc1 * (12.0 * satrec.d2 + 10.0 * cc1sq));\n      satrec.t5cof = 0.2 * (3.0 * satrec.d4 + 12.0 * satrec.cc1 * satrec.d3 + 6.0 * satrec.d2 * satrec.d2 + 15.0 * cc1sq * (2.0 * satrec.d2 + cc1sq));\n    }\n    /* finally propogate to zero epoch to initialize all others. */\n    // sgp4fix take out check to let satellites process until they are actually below earth surface\n    // if(satrec.error == 0)\n\n  }\n\n  sgp4(satrec, 0);\n  satrec.init = 'n';\n  /* eslint-enable no-param-reassign */\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           function twoline2rv\n *\n *  this function converts the two line element set character string data to\n *    variables and initializes the sgp4 variables. several intermediate varaibles\n *    and quantities are determined. note that the result is a structure so multiple\n *    satellites can be processed simultaneously without having to reinitialize. the\n *    verification mode is an important option that permits quick checks of any\n *    changes to the underlying technical theory. this option works using a\n *    modified tle file in which the start, stop, and delta time values are\n *    included at the end of the second line of data. this only works with the\n *    verification mode. the catalog mode simply propagates from -1440 to 1440 min\n *    from epoch and is useful when performing entire catalog runs.\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs        :\n *    longstr1    - first line of the tle\n *    longstr2    - second line of the tle\n *    typerun     - type of run                    verification 'v', catalog 'c',\n *                                                 manual 'm'\n *    typeinput   - type of manual input           mfe 'm', epoch 'e', dayofyr 'd'\n *    opsmode     - mode of operation afspc or improved 'a', 'i'\n *    whichconst  - which set of constants to use  72, 84\n *\n *  outputs       :\n *    satrec      - structure containing all the sgp4 satellite information\n *\n *  coupling      :\n *    getgravconst-\n *    days2mdhms  - conversion of days to month, day, hour, minute, second\n *    jday        - convert day month year hour minute second into julian date\n *    sgp4init    - initialize the sgp4 variables\n *\n *  references    :\n *    norad spacetrack report #3\n *    vallado, crawford, hujsak, kelso  2006\n --------------------------------------------------------------------------- */\n\n/**\n * Return a Satellite imported from two lines of TLE data.\n *\n * Provide the two TLE lines as strings `longstr1` and `longstr2`,\n * and select which standard set of gravitational constants you want\n * by providing `gravity_constants`:\n *\n * `sgp4.propagation.wgs72` - Standard WGS 72 model\n * `sgp4.propagation.wgs84` - More recent WGS 84 model\n * `sgp4.propagation.wgs72old` - Legacy support for old SGP4 behavior\n *\n * Normally, computations are made using letious recent improvements\n * to the algorithm.  If you want to turn some of these off and go\n * back into \"afspc\" mode, then set `afspc_mode` to `True`.\n */\n\nfunction twoline2satrec(longstr1, longstr2) {\n  var opsmode = 'i';\n  var xpdotp = 1440.0 / (2.0 * pi); // 229.1831180523293;\n\n  var year = 0;\n  var satrec = {};\n  satrec.error = 0;\n  satrec.satnum = longstr1.substring(2, 7);\n  satrec.epochyr = parseInt(longstr1.substring(18, 20), 10);\n  satrec.epochdays = parseFloat(longstr1.substring(20, 32));\n  satrec.ndot = parseFloat(longstr1.substring(33, 43));\n  satrec.nddot = parseFloat(\".\".concat(parseInt(longstr1.substring(44, 50), 10), \"E\").concat(longstr1.substring(50, 52)));\n  satrec.bstar = parseFloat(\"\".concat(longstr1.substring(53, 54), \".\").concat(parseInt(longstr1.substring(54, 59), 10), \"E\").concat(longstr1.substring(59, 61))); // satrec.satnum = longstr2.substring(2, 7);\n\n  satrec.inclo = parseFloat(longstr2.substring(8, 16));\n  satrec.nodeo = parseFloat(longstr2.substring(17, 25));\n  satrec.ecco = parseFloat(\".\".concat(longstr2.substring(26, 33)));\n  satrec.argpo = parseFloat(longstr2.substring(34, 42));\n  satrec.mo = parseFloat(longstr2.substring(43, 51));\n  satrec.no = parseFloat(longstr2.substring(52, 63)); // ---- find no, ndot, nddot ----\n\n  satrec.no /= xpdotp; //   rad/min\n  // satrec.nddot= satrec.nddot * Math.pow(10.0, nexp);\n  // satrec.bstar= satrec.bstar * Math.pow(10.0, ibexp);\n  // ---- convert to sgp4 units ----\n\n  satrec.a = Math.pow(satrec.no * tumin, -2.0 / 3.0);\n  satrec.ndot /= xpdotp * 1440.0; // ? * minperday\n\n  satrec.nddot /= xpdotp * 1440.0 * 1440; // ---- find standard orbital elements ----\n\n  satrec.inclo *= deg2rad;\n  satrec.nodeo *= deg2rad;\n  satrec.argpo *= deg2rad;\n  satrec.mo *= deg2rad;\n  satrec.alta = satrec.a * (1.0 + satrec.ecco) - 1.0;\n  satrec.altp = satrec.a * (1.0 - satrec.ecco) - 1.0; // ----------------------------------------------------------------\n  // find sgp4epoch time of element set\n  // remember that sgp4 uses units of days from 0 jan 1950 (sgp4epoch)\n  // and minutes from the epoch (time)\n  // ----------------------------------------------------------------\n  // ---------------- temp fix for years from 1957-2056 -------------------\n  // --------- correct fix will occur when year is 4-digit in tle ---------\n\n  if (satrec.epochyr < 57) {\n    year = satrec.epochyr + 2000;\n  } else {\n    year = satrec.epochyr + 1900;\n  }\n\n  var mdhmsResult = days2mdhms(year, satrec.epochdays);\n  var mon = mdhmsResult.mon,\n      day = mdhmsResult.day,\n      hr = mdhmsResult.hr,\n      minute = mdhmsResult.minute,\n      sec = mdhmsResult.sec;\n  satrec.jdsatepoch = jday(year, mon, day, hr, minute, sec); //  ---------------- initialize the orbit at sgp4epoch -------------------\n\n  sgp4init(satrec, {\n    opsmode: opsmode,\n    satn: satrec.satnum,\n    epoch: satrec.jdsatepoch - 2433281.5,\n    xbstar: satrec.bstar,\n    xecco: satrec.ecco,\n    xargpo: satrec.argpo,\n    xinclo: satrec.inclo,\n    xmo: satrec.mo,\n    xno: satrec.no,\n    xnodeo: satrec.nodeo\n  });\n  return satrec;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction propagate() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  // Return a position and velocity vector for a given date and time.\n  var satrec = args[0];\n  var date = Array.prototype.slice.call(args, 1);\n  var j = jday.apply(void 0, _toConsumableArray(date));\n  var m = (j - satrec.jdsatepoch) * minutesPerDay;\n  return sgp4(satrec, m);\n}\n\nfunction dopplerFactor(location, position, velocity) {\n  var mfactor = 7.292115E-5;\n  var c = 299792.458; // Speed of light in km/s\n\n  var range = {\n    x: position.x - location.x,\n    y: position.y - location.y,\n    z: position.z - location.z\n  };\n  range.w = Math.sqrt(Math.pow(range.x, 2) + Math.pow(range.y, 2) + Math.pow(range.z, 2));\n  var rangeVel = {\n    x: velocity.x + mfactor * location.y,\n    y: velocity.y - mfactor * location.x,\n    z: velocity.z\n  };\n\n  function sign(value) {\n    return value >= 0 ? 1 : -1;\n  }\n\n  var rangeRate = (range.x * rangeVel.x + range.y * rangeVel.y + range.z * rangeVel.z) / range.w;\n  return 1 + rangeRate / c * sign(rangeRate);\n}\n\nfunction radiansToDegrees(radians) {\n  return radians * rad2deg;\n}\nfunction degreesToRadians(degrees) {\n  return degrees * deg2rad;\n}\nfunction degreesLat(radians) {\n  if (radians < -pi / 2 || radians > pi / 2) {\n    throw new RangeError('Latitude radians must be in range [-pi/2; pi/2].');\n  }\n\n  return radiansToDegrees(radians);\n}\nfunction degreesLong(radians) {\n  if (radians < -pi || radians > pi) {\n    throw new RangeError('Longitude radians must be in range [-pi; pi].');\n  }\n\n  return radiansToDegrees(radians);\n}\nfunction radiansLat(degrees) {\n  if (degrees < -90 || degrees > 90) {\n    throw new RangeError('Latitude degrees must be in range [-90; 90].');\n  }\n\n  return degreesToRadians(degrees);\n}\nfunction radiansLong(degrees) {\n  if (degrees < -180 || degrees > 180) {\n    throw new RangeError('Longitude degrees must be in range [-180; 180].');\n  }\n\n  return degreesToRadians(degrees);\n}\nfunction geodeticToEcf(geodetic) {\n  var longitude = geodetic.longitude,\n      latitude = geodetic.latitude,\n      height = geodetic.height;\n  var a = 6378.137;\n  var b = 6356.7523142;\n  var f = (a - b) / a;\n  var e2 = 2 * f - f * f;\n  var normal = a / Math.sqrt(1 - e2 * (Math.sin(latitude) * Math.sin(latitude)));\n  var x = (normal + height) * Math.cos(latitude) * Math.cos(longitude);\n  var y = (normal + height) * Math.cos(latitude) * Math.sin(longitude);\n  var z = (normal * (1 - e2) + height) * Math.sin(latitude);\n  return {\n    x: x,\n    y: y,\n    z: z\n  };\n}\nfunction eciToGeodetic(eci, gmst) {\n  // http://www.celestrak.com/columns/v02n03/\n  var a = 6378.137;\n  var b = 6356.7523142;\n  var R = Math.sqrt(eci.x * eci.x + eci.y * eci.y);\n  var f = (a - b) / a;\n  var e2 = 2 * f - f * f;\n  var longitude = Math.atan2(eci.y, eci.x) - gmst;\n\n  while (longitude < -pi) {\n    longitude += twoPi;\n  }\n\n  while (longitude > pi) {\n    longitude -= twoPi;\n  }\n\n  var kmax = 20;\n  var k = 0;\n  var latitude = Math.atan2(eci.z, Math.sqrt(eci.x * eci.x + eci.y * eci.y));\n  var C;\n\n  while (k < kmax) {\n    C = 1 / Math.sqrt(1 - e2 * (Math.sin(latitude) * Math.sin(latitude)));\n    latitude = Math.atan2(eci.z + a * C * e2 * Math.sin(latitude), R);\n    k += 1;\n  }\n\n  var height = R / Math.cos(latitude) - a * C;\n  return {\n    longitude: longitude,\n    latitude: latitude,\n    height: height\n  };\n}\nfunction ecfToEci(ecf, gmst) {\n  // ccar.colorado.edu/ASEN5070/handouts/coordsys.doc\n  //\n  // [X]     [C -S  0][X]\n  // [Y]  =  [S  C  0][Y]\n  // [Z]eci  [0  0  1][Z]ecf\n  //\n  var X = ecf.x * Math.cos(gmst) - ecf.y * Math.sin(gmst);\n  var Y = ecf.x * Math.sin(gmst) + ecf.y * Math.cos(gmst);\n  var Z = ecf.z;\n  return {\n    x: X,\n    y: Y,\n    z: Z\n  };\n}\nfunction eciToEcf(eci, gmst) {\n  // ccar.colorado.edu/ASEN5070/handouts/coordsys.doc\n  //\n  // [X]     [C -S  0][X]\n  // [Y]  =  [S  C  0][Y]\n  // [Z]eci  [0  0  1][Z]ecf\n  //\n  //\n  // Inverse:\n  // [X]     [C  S  0][X]\n  // [Y]  =  [-S C  0][Y]\n  // [Z]ecf  [0  0  1][Z]eci\n  var x = eci.x * Math.cos(gmst) + eci.y * Math.sin(gmst);\n  var y = eci.x * -Math.sin(gmst) + eci.y * Math.cos(gmst);\n  var z = eci.z;\n  return {\n    x: x,\n    y: y,\n    z: z\n  };\n}\n\nfunction topocentric(observerGeodetic, satelliteEcf) {\n  // http://www.celestrak.com/columns/v02n02/\n  // TS Kelso's method, except I'm using ECF frame\n  // and he uses ECI.\n  var longitude = observerGeodetic.longitude,\n      latitude = observerGeodetic.latitude;\n  var observerEcf = geodeticToEcf(observerGeodetic);\n  var rx = satelliteEcf.x - observerEcf.x;\n  var ry = satelliteEcf.y - observerEcf.y;\n  var rz = satelliteEcf.z - observerEcf.z;\n  var topS = Math.sin(latitude) * Math.cos(longitude) * rx + Math.sin(latitude) * Math.sin(longitude) * ry - Math.cos(latitude) * rz;\n  var topE = -Math.sin(longitude) * rx + Math.cos(longitude) * ry;\n  var topZ = Math.cos(latitude) * Math.cos(longitude) * rx + Math.cos(latitude) * Math.sin(longitude) * ry + Math.sin(latitude) * rz;\n  return {\n    topS: topS,\n    topE: topE,\n    topZ: topZ\n  };\n}\n/**\n * @param {Object} tc\n * @param {Number} tc.topS Positive horizontal vector S due south.\n * @param {Number} tc.topE Positive horizontal vector E due east.\n * @param {Number} tc.topZ Vector Z normal to the surface of the earth (up).\n * @returns {Object}\n */\n\n\nfunction topocentricToLookAngles(tc) {\n  var topS = tc.topS,\n      topE = tc.topE,\n      topZ = tc.topZ;\n  var rangeSat = Math.sqrt(topS * topS + topE * topE + topZ * topZ);\n  var El = Math.asin(topZ / rangeSat);\n  var Az = Math.atan2(-topE, topS) + pi;\n  return {\n    azimuth: Az,\n    elevation: El,\n    rangeSat: rangeSat // Range in km\n\n  };\n}\n\nfunction ecfToLookAngles(observerGeodetic, satelliteEcf) {\n  var topocentricCoords = topocentric(observerGeodetic, satelliteEcf);\n  return topocentricToLookAngles(topocentricCoords);\n}\n\nexport { constants, degreesLat, degreesLong, degreesToRadians, dopplerFactor, ecfToEci, ecfToLookAngles, eciToEcf, eciToGeodetic, geodeticToEcf, gstime, invjday, jday, propagate, radiansLat, radiansLong, radiansToDegrees, sgp4, twoline2satrec };\n","export var SpaceObjectType;\n(function (SpaceObjectType) {\n    SpaceObjectType[SpaceObjectType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    SpaceObjectType[SpaceObjectType[\"PAYLOAD\"] = 1] = \"PAYLOAD\";\n    SpaceObjectType[SpaceObjectType[\"ROCKET_BODY\"] = 2] = \"ROCKET_BODY\";\n    SpaceObjectType[SpaceObjectType[\"DEBRIS\"] = 3] = \"DEBRIS\";\n    SpaceObjectType[SpaceObjectType[\"SPECIAL\"] = 4] = \"SPECIAL\";\n    SpaceObjectType[SpaceObjectType[\"RADAR_MEASUREMENT\"] = 5] = \"RADAR_MEASUREMENT\";\n    SpaceObjectType[SpaceObjectType[\"RADAR_TRACK\"] = 6] = \"RADAR_TRACK\";\n    SpaceObjectType[SpaceObjectType[\"RADAR_OBJECT\"] = 7] = \"RADAR_OBJECT\";\n    SpaceObjectType[SpaceObjectType[\"BALLISTIC_MISSILE\"] = 8] = \"BALLISTIC_MISSILE\";\n    SpaceObjectType[SpaceObjectType[\"STAR\"] = 9] = \"STAR\";\n    SpaceObjectType[SpaceObjectType[\"INTERGOVERNMENTAL_ORGANIZATION\"] = 10] = \"INTERGOVERNMENTAL_ORGANIZATION\";\n    SpaceObjectType[SpaceObjectType[\"SUBORBITAL_PAYLOAD_OPERATOR\"] = 11] = \"SUBORBITAL_PAYLOAD_OPERATOR\";\n    SpaceObjectType[SpaceObjectType[\"PAYLOAD_OWNER\"] = 12] = \"PAYLOAD_OWNER\";\n    SpaceObjectType[SpaceObjectType[\"METEOROLOGICAL_ROCKET_LAUNCH_AGENCY_OR_MANUFACTURER\"] = 13] = \"METEOROLOGICAL_ROCKET_LAUNCH_AGENCY_OR_MANUFACTURER\";\n    SpaceObjectType[SpaceObjectType[\"PAYLOAD_MANUFACTURER\"] = 14] = \"PAYLOAD_MANUFACTURER\";\n    SpaceObjectType[SpaceObjectType[\"LAUNCH_AGENCY\"] = 15] = \"LAUNCH_AGENCY\";\n    SpaceObjectType[SpaceObjectType[\"LAUNCH_SITE\"] = 16] = \"LAUNCH_SITE\";\n    SpaceObjectType[SpaceObjectType[\"LAUNCH_POSITION\"] = 17] = \"LAUNCH_POSITION\";\n    SpaceObjectType[SpaceObjectType[\"LAUNCH_FACILITY\"] = 18] = \"LAUNCH_FACILITY\";\n    SpaceObjectType[SpaceObjectType[\"CONTROL_FACILITY\"] = 19] = \"CONTROL_FACILITY\";\n    SpaceObjectType[SpaceObjectType[\"GROUND_SENSOR_STATION\"] = 20] = \"GROUND_SENSOR_STATION\";\n    SpaceObjectType[SpaceObjectType[\"OPTICAL\"] = 21] = \"OPTICAL\";\n    SpaceObjectType[SpaceObjectType[\"MECHANICAL\"] = 22] = \"MECHANICAL\";\n    SpaceObjectType[SpaceObjectType[\"PHASED_ARRAY_RADAR\"] = 23] = \"PHASED_ARRAY_RADAR\";\n    SpaceObjectType[SpaceObjectType[\"OBSERVER\"] = 24] = \"OBSERVER\";\n    SpaceObjectType[SpaceObjectType[\"BISTATIC_RADIO_TELESCOPE\"] = 25] = \"BISTATIC_RADIO_TELESCOPE\";\n    SpaceObjectType[SpaceObjectType[\"COUNTRY\"] = 26] = \"COUNTRY\";\n    SpaceObjectType[SpaceObjectType[\"LAUNCH_VEHICLE_MANUFACTURER\"] = 27] = \"LAUNCH_VEHICLE_MANUFACTURER\";\n    SpaceObjectType[SpaceObjectType[\"ENGINE_MANUFACTURER\"] = 28] = \"ENGINE_MANUFACTURER\";\n})(SpaceObjectType || (SpaceObjectType = {}));\n","export const ZOOM_EXP = 3;\nexport const PI = Math.PI;\nexport const TAU = 2 * Math.PI;\nexport const DEG2RAD = TAU / 360;\nexport const RAD2DEG = 360 / TAU;\n// export const MILLISECONDS_PER_DAY = 1000 * 60 * 60 * 24;\n// TODO: this is really MILLISECONDS_TO_DAYS\nexport const MILLISECONDS_PER_DAY = 1.15741e-8;\nexport const MINUTES_PER_DAY = 1440;\nexport const PLANETARIUM_DIST = 3;\nexport const RADIUS_OF_DRAW_SUN = 9000;\nexport const SUN_SCALAR_DISTANCE = 250000;\nexport const RADIUS_OF_DRAW_MOON = 4000;\nexport const MOON_SCALAR_DISTANCE = 200000;\nexport const cMPerSec = 299792458;\nexport const cKmPerSec = 299792458 / 1000;\nexport const cKmPerMs = 299792458 / 1000 / 1000;\nexport const RADIUS_OF_EARTH = 6371; // Radius of Earth in kilometers\nexport const GROUND_BUFFER_DISTANCE = 1; // Distance objects are placed above earth to avoid z-buffer fighting\nexport const RADIUS_OF_SUN = 695700; // Radius of the Sun in kilometers\nexport const STAR_DISTANCE = 250000; // Artificial Star Distance - Lower numberrReduces webgl depth buffer\nexport const DISTANCE_TO_SUN = 149597870; // Distance from Earth to the Sun in kilometers\n","/* eslint-disable */\n// @ts-nocheck\nconst A = {\n    JMod: 2400000.5,\n    J2000: 2451545,\n    J1900: 2415020,\n    B1900: 2415020.3135,\n    B1950: 2433282.4235,\n    JulianYear: 365.25,\n    JulianCentury: 36525,\n    BesselianYear: 365.2421988,\n    AU: 149597870,\n};\nA.EclCoord = function (a, b, c) {\n    if (isNaN(a) || isNaN(b))\n        throw Error('Invalid EclCoord object: (' + a + ', ' + b + ')');\n    this.lat = a;\n    this.lng = b;\n    void 0 !== c && (this.h = c);\n};\nA.EclCoord.prototype = {\n    toWgs84String: function () {\n        return A.Math.formatNum((180 * this.lat) / Math.PI) + ', ' + A.Math.formatNum((180 * -this.lng) / Math.PI);\n    },\n};\nA.EclCoordfromWgs84 = function (a, b, c) {\n    return new A.EclCoord((a * Math.PI) / 180, (-b * Math.PI) / 180, c);\n};\nA.EqCoord = function (a, b) {\n    if (isNaN(a) || isNaN(b))\n        throw Error('Invalid EqCoord object: (' + a + ', ' + b + ')');\n    this.ra = a;\n    this.dec = b;\n};\nA.EqCoord.prototype = {\n    toString: function () {\n        return 'ra:' + A.Math.formatNum((180 * this.ra) / Math.PI) + ', dec:' + A.Math.formatNum((180 * this.dec) / Math.PI);\n    },\n};\nA.HzCoord = function (a, b) {\n    if (isNaN(a) || isNaN(b))\n        throw Error('Invalid HzCoord object: (' + a + ', ' + b + ')');\n    this.az = a;\n    this.alt = b;\n};\nA.HzCoord.prototype = {\n    toString: function () {\n        return 'azi:' + A.Math.formatNum((180 * this.az) / Math.PI) + ', alt:' + A.Math.formatNum((180 * this.alt) / Math.PI);\n    },\n};\nA.Coord = {\n    dmsToDeg: function (a, b, c, d) {\n        d = (60 * (60 * b + c) + d) / 3600;\n        return a ? -d : d;\n    },\n    calcAngle: function (a, b, c, d) {\n        return (A.Coord.dmsToDeg(a, b, c, d) * Math.PI) / 180;\n    },\n    calcRA: function (a, b, c) {\n        return ((A.Coord.dmsToDeg(!1, a, b, c) % 24) * 15 * Math.PI) / 180;\n    },\n    secondsToHMSStr: function (a) {\n        var b = Math.floor(a / 86400);\n        a = A.Math.pMod(a, 86400);\n        var c = Math.floor(a / 3600) % 24, d = Math.floor(a / 60) % 60;\n        a = Math.floor(a % 60);\n        return (0 !== b ? b + 'd ' : '') + (10 > c ? '0' : '') + c + ':' + (10 > d ? '0' : '') + d + ':' + (10 > a ? '0' : '') + a;\n    },\n    secondsToHMStr: function (a) {\n        var b = Math.floor(a / 86400);\n        a = A.Math.pMod(a, 86400);\n        var c = Math.floor(a / 3600) % 24;\n        a = Math.floor(a / 60) % 60;\n        return (0 !== b ? b + 'd ' : '') + (10 > c ? '0' : '') + c + ':' + (10 > a ? '0' : '') + a;\n    },\n    eqToEcl: function (a, b) {\n        var c = Math.sin(a.ra), d = Math.sin(a.dec), e = Math.cos(a.dec), f = Math.sin(b);\n        b = Math.cos(b);\n        return new A.EclCoord(Math.atan2(c * b + (d / e) * f, Math.cos(a.ra)), Math.asin(d * b - e * f * c));\n    },\n    eclToEq: function (a, b) {\n        var c = Math.sin(a.lat), d = Math.sin(a.lng), e = Math.cos(a.lng), f = Math.sin(b);\n        b = Math.cos(b);\n        let a2 = Math.atan2(c * b - (d / e) * f, Math.cos(a.lat));\n        0 > a2 && (a2 += 2 * Math.PI);\n        return new A.EqCoord(a2, Math.asin(d * b + e * f * c));\n    },\n    eqToHz: function (a, b, c) {\n        c = c - b.lng - a.ra;\n        var d = Math.cos(c), e = Math.sin(b.lat);\n        b = Math.cos(b.lat);\n        var f = Math.sin(a.dec);\n        a = Math.cos(a.dec);\n        return new A.HzCoord(Math.atan2(Math.sin(c), d * e - (f / a) * b), Math.asin(e * f + b * a * d));\n    },\n};\nA.DeltaT = {\n    jdToJde: function (a, b) {\n        b || (b = A.DeltaT.estimate(a));\n        return a + b / 86400;\n    },\n    jdeToJd: function (a, b) {\n        b || (b = A.DeltaT.estimate(a));\n        return a - b / 86400;\n    },\n    decimalYear: function (a) {\n        a = A.JulianDay.jdToCalendar(a);\n        return a.y + (a.m - 0.5) / 12;\n    },\n    estimate: function (a) {\n        var b = A.DeltaT.decimalYear(a);\n        a = Math.pow;\n        return -500 > b\n            ? -20 + 32 * a((b - 1820) / 100, 2)\n            : 500 > b\n                ? ((b /= 100), 10583.6 - 1014.41 * b + 33.78311 * a(b, 2) - 5.952053 * a(b, 3) - 0.1798452 * a(b, 4) + 0.022174192 * a(b, 5) + 0.0090316521 * a(b, 6))\n                : 1600 > b\n                    ? ((b = (b - 1e3) / 100), 1574.2 - 556.01 * b + 71.23472 * a(b, 2) + 0.319781 * a(b, 3) - 0.8503463 * a(b, 4) - 0.005050998 * a(b, 5) + 0.0083572073 * a(b, 6))\n                    : 1700 > b\n                        ? ((b -= 1600), 120 - 0.9808 * b - 0.01532 * a(b, 2) + a(b, 3) / 7129)\n                        : 1800 > b\n                            ? ((b -= 1700), 8.83 + 0.1603 * b - 0.0059285 * a(b, 2) + 1.3336e-4 * a(b, 3) - a(b, 4) / 1174e3)\n                            : 1860 > b\n                                ? ((b -= 1800), 13.72 - 0.332447 * b + 0.0068612 * a(b, 2) + 0.0041116 * a(b, 3) - 3.7436e-4 * a(b, 4) + 1.21272e-5 * a(b, 5) - 1.699e-7 * a(b, 6) + 8.75e-10 * a(b, 7))\n                                : 1900 > b\n                                    ? ((b -= 1860), 7.62 + 0.5737 * b - 0.251754 * a(b, 2) + 0.01680668 * a(b, 3) - 4.473624e-4 * a(b, 4) + a(b, 5) / 233174)\n                                    : 1920 > b\n                                        ? ((b -= 1900), -2.79 + 1.494119 * b - 0.0598939 * a(b, 2) + 0.0061966 * a(b, 3) - 1.97e-4 * a(b, 4))\n                                        : 1941 > b\n                                            ? ((b -= 1920), 21.2 + 0.84493 * b - 0.0761 * a(b, 2) + 0.0020936 * a(b, 3))\n                                            : 1961 > b\n                                                ? ((b -= 1950), 29.07 + 0.407 * b - a(b, 2) / 233 + a(b, 3) / 2547)\n                                                : 1986 > b\n                                                    ? ((b -= 1975), 45.45 + 1.067 * b - a(b, 2) / 260 - a(b, 3) / 718)\n                                                    : 2005 > b\n                                                        ? ((b -= 2e3), 63.86 + 0.3345 * b - 0.060374 * a(b, 2) + 0.0017275 * a(b, 3) + 6.51814e-4 * a(b, 4) + 2.373599e-5 * a(b, 5))\n                                                        : 2050 > b\n                                                            ? ((b -= 2e3), 62.92 + 0.32217 * b + 0.005589 * a(b, 2))\n                                                            : 2150 > b\n                                                                ? -20 + 32 * a((b - 1820) / 100, 2) - 0.5628 * (2150 - b)\n                                                                : -20 + 32 * a((b - 1820) / 100, 2);\n    },\n};\nA.Globe = {\n    Er: 6378.14,\n    Fl: 1 / 298.257,\n    parallaxConstants: function (a, b) {\n        b || (b = 0);\n        var c = 1 - A.Globe.Fl;\n        b = (0.001 * b) / A.Globe.Er;\n        return { rhoslat: Math.sin(Math.atan(c * Math.tan(a))) * c + b * Math.sin(a), rhoclat: Math.cos(Math.atan(c * Math.tan(a))) + b * Math.cos(a) };\n    },\n};\nA.Interp = {\n    newLen3: function (a, b, c) {\n        if (3 != c.length)\n            throw 'Error not 3';\n        if (b == a)\n            throw 'Error no x range';\n        var d = c[1] - c[0], e = c[2] - c[1];\n        return { x1: a, x3: b, y: c, a: d, b: e, c: e - d, abSum: d + e, xSum: b + a, xDiff: b - a };\n    },\n    interpolateX: function (a, b) {\n        return A.Interp.interpolateN(a, (2 * b - a.xSum) / a.xDiff);\n    },\n    interpolateN: function (a, b) {\n        return a.y[1] + 0.5 * b * (a.abSum + b * a.c);\n    },\n};\nA.JulianDay = function (a, b) {\n    a instanceof Date && (a = A.JulianDay.dateToJD(a));\n    this.jd = a;\n    this.deltaT = b ? b : A.DeltaT.estimate(this.jd);\n    this.jde = A.DeltaT.jdToJde(this.jd, this.deltaT);\n};\nA.JulianDay.prototype = {\n    toCalendar: function () {\n        return A.JulianDay.jdToCalendar(this.jd);\n    },\n    toDate: function () {\n        return A.JulianDay.jdToDate(this.jd);\n    },\n    jdJ2000Century: function () {\n        return (this.jd - A.J2000) / A.JulianCentury;\n    },\n    jdeJ2000Century: function () {\n        return (this.jde - A.J2000) / A.JulianCentury;\n    },\n    startOfDay: function () {\n        return new A.JulianDay(Math.floor(this.jde - 0.5) + 0.5, this.deltaT);\n    },\n};\nA.JulianDay.gregorianTimeStart = Date.UTC(1582, 9, 4);\nA.JulianDay.jdFromGregorian = function (a, b, c) {\n    return new A.JulianDay(A.JulianDay.jdFromGregorian(a, b, c));\n};\nA.JulianDay.jdFromJulian = function (a, b, c) {\n    return new A.JulianDay(A.JulianDay.calendarJulianToJD(a, b, c));\n};\nA.JulianDay.jdFromJDE = function (a) {\n    var b = A.DeltaT.estimate(a);\n    a = A.DeltaT.jdeToJd(a, b);\n    return new A.JulianDay(a, b);\n};\nA.JulianDay.dateToJD = function (a) {\n    var b = a.getUTCDate() + A.JulianDay.secondsFromHMS(a.getUTCHours(), a.getUTCMinutes(), a.getUTCSeconds()) / 86400;\n    return a.getTime() < A.JulianDay.gregorianTimeStart\n        ? A.JulianDay.calendarJulianToJD(a.getUTCFullYear(), a.getUTCMonth() + 1, b)\n        : A.JulianDay.calendarGregorianToJD(a.getUTCFullYear(), a.getUTCMonth() + 1, b);\n};\nA.JulianDay.calendarGregorianToJD = function (a, b, c) {\n    if (1 == b || 2 == b)\n        a--, (b += 12);\n    var d = Math.floor(a / 100);\n    return Math.floor((36525 * (a + 4716)) / 100) + Math.floor((306 * (b + 1)) / 10) + (2 - d + Math.floor(d / 4)) + c - 1524.5;\n};\nA.JulianDay.calendarJulianToJD = function (a, b, c) {\n    if (1 == b || 2 == b)\n        a--, (b += 12);\n    return Math.floor((36525 * (a + 4716)) / 100) + Math.floor((306 * (b + 1)) / 10) + c - 1524.5;\n};\nA.JulianDay.secondsFromHMS = function (a, b, c) {\n    return 3600 * a + 60 * b + c;\n};\nA.JulianDay.jdToDate = function (a) {\n    var b = A.JulianDay.jdToCalendar(a);\n    a = A.Math.modF(a + 0.5)[1];\n    a = Math.round(86400 * a);\n    return new Date(Date.UTC(b.y, b.m - 1, Math.floor(b.d), Math.floor(a / 3600) % 24, Math.floor(a / 60) % 60, Math.floor(a % 60)));\n};\nA.JulianDay.jdToCalendar = function (a) {\n    a = A.Math.modF(a + 0.5);\n    var b = a[0], c = b;\n    2299151 <= b && ((c = Math.floor((100 * b - 186721625) / 3652425)), (c = b + 1 + c - Math.floor(c / 4)));\n    var d = c + 1524;\n    b = Math.floor((100 * d - 12210) / 36525);\n    var e = Math.floor((36525 * b) / 100);\n    c = Math.floor((1e4 * (d - e)) / 306001);\n    a = d - e - Math.floor((306001 * c) / 1e4) + a[1];\n    c = 14 == c || 15 == c ? c - 13 : c - 1;\n    return { y: 1 == c || 2 == c ? Math.floor(b) - 4715 : Math.floor(b) - 4716, m: c, d: a };\n};\nA.JulianDay.leapYearGregorian = function (a) {\n    return (0 === a % 4 && 0 !== a % 100) || 0 === a % 400;\n};\nA.JulianDay.dayOfYear = function (a, b, c, d) {\n    a = 2;\n    d && a--;\n    return A.JulianDay._wholeMonths(b, a) + c;\n};\nA.JulianDay._wholeMonths = function (a, b) {\n    return Math.round((275 * a) / 9 - ((a + 9) / 12) * b - 30);\n};\nA.Math = {\n    pMod: function (a, b) {\n        a %= b;\n        0 > a && (a += b);\n        return a;\n    },\n    modF: function (a) {\n        return 0 > a ? ((a = -a), [-Math.floor(a), -(a % 1)]) : [Math.floor(a), a % 1];\n    },\n    horner: function (a, b) {\n        var c = b.length - 1;\n        if (0 >= c)\n            throw 'empty array not supported';\n        for (var d = b[c]; 0 < c;)\n            c--, (d = d * a + b[c]);\n        return d;\n    },\n    formatNum: function (a, b) {\n        b = Math.pow(10, b | 4);\n        return Math.round(a * b) / b;\n    },\n};\nA.Moon = {\n    parallax: function (a) {\n        return Math.asin(6378.14 / a);\n    },\n    apparentEquatorial: function (a) {\n        var b = A.Moon.geocentricPosition(a), c = A.Nutation.nutation(a);\n        a = A.Nutation.meanObliquityLaskar(a) + c.deltaobliquity;\n        return { eq: A.Coord.eclToEq(new A.EclCoord(b.lng + c.deltalng, b.lat), a), delta: b.delta };\n    },\n    apparentTopocentric: function (a, b, c) {\n        var d = A.Moon.apparentEquatorial(a), e = A.Globe.parallaxConstants(b.lat, b.h), f = A.Moon.parallax(d.delta);\n        c || (c = A.Sidereal.apparentInRa(a));\n        return { eq: A.Parallax.topocentric(d.eq, f, e.rhoslat, e.rhoclat, b.lng, c), delta: d.delta };\n    },\n    topocentricPosition: function (a, b, c) {\n        var d = A.Sidereal.apparentInRa(a);\n        a = A.Moon.apparentTopocentric(a, b, d);\n        var e = A.Coord.eqToHz(a.eq, b, d);\n        !0 === c && (e.alt += A.Refraction.bennett2(e.alt));\n        b = A.Moon.parallacticAngle(b.lat, d - (b.lng + a.eq.ra), a.eq.dec);\n        return { hz: e, eq: a.eq, delta: a.delta, q: b };\n    },\n    approxTransit: function (a, b) {\n        a = a.startOfDay();\n        return A.Rise.approxTransit(b, A.Sidereal.apparent0UT(a), A.Moon.apparentTopocentric(a, b).eq);\n    },\n    approxTimes: function (a, b) {\n        a = a.startOfDay();\n        var c = A.Moon.apparentTopocentric(a, b), d = A.Moon.parallax(c.delta);\n        d = A.Rise.stdh0Lunar(d);\n        a = A.Sidereal.apparent0UT(a);\n        return A.Rise.approxTimes(b, d, a, c.eq);\n    },\n    times: function (a, b) {\n        a = a.startOfDay();\n        var c = A.Moon.apparentTopocentric(new A.JulianDay(a.jd - 1, a.deltaT), b), d = A.Moon.apparentTopocentric(a, b), e = A.Moon.apparentTopocentric(new A.JulianDay(a.jd + 1, a.deltaT), b), f = A.Moon.parallax(d.delta);\n        f = A.Rise.stdh0Lunar(f);\n        var g = A.Sidereal.apparent0UT(a);\n        return A.Rise.times(b, a.deltaT, f, g, [c.eq, d.eq, e.eq]);\n    },\n    parallacticAngle: function (a, b, c) {\n        return Math.atan2(Math.sin(b), Math.tan(a) * Math.cos(c) - Math.sin(c) * Math.cos(b));\n    },\n    geocentricPosition: function (a) {\n        var b = Math.PI / 180, c = a.jdeJ2000Century();\n        a = A.Math.pMod(A.Math.horner(c, [218.3164477 * b, 481267.88123421 * b, -0.0015786 * b, b / 538841, -b / 65194e3]), 2 * Math.PI);\n        var d = A.Math.pMod(A.Math.horner(c, [297.8501921 * b, 445267.1114034 * b, -0.0018819 * b, b / 545868, -b / 113065e3]), 2 * Math.PI), e = A.Math.pMod(A.Math.horner(c, [357.5291092 * b, 35999.0502909 * b, -1.535e-4 * b, b / 2449e4]), 2 * Math.PI), f = A.Math.pMod(A.Math.horner(c, [134.9633964 * b, 477198.8675055 * b, 0.0087414 * b, b / 69699, -b / 14712e3]), 2 * Math.PI), g = A.Math.pMod(A.Math.horner(c, [93.272095 * b, 483202.0175233 * b, -0.0036539 * b, -b / 3526e3, b / 86331e4]), 2 * Math.PI), l = 119.75 * b + 131.849 * b * c, m = 53.09 * b + 479264.29 * b * c, h = 313.45 * b + 481266.484 * b * c;\n        c = A.Math.horner(c, [1, -0.002516, -7.4e-6]);\n        var p = c * c;\n        m = 3958 * Math.sin(l) + 1962 * Math.sin(a - g) + 318 * Math.sin(m);\n        var n = 0;\n        l = -2235 * Math.sin(a) + 382 * Math.sin(h) + 175 * Math.sin(l - g) + 175 * Math.sin(l + g) + 127 * Math.sin(a - f) - 115 * Math.sin(a + f);\n        for (h = 0; h < A.Moon.ta.length; h++) {\n            var k = A.Moon.ta[h];\n            var r = d * k[0] + e * k[1] + f * k[2] + g * k[3], q = Math.sin(r);\n            r = Math.cos(r);\n            switch (k[1]) {\n                case 0:\n                    m += k[4] * q;\n                    n += k[5] * r;\n                    break;\n                case 1:\n                case -1:\n                    m += k[4] * q * c;\n                    n += k[5] * r * c;\n                    break;\n                case 2:\n                case -2:\n                    m += k[4] * q * p;\n                    n += k[5] * r * p;\n                    break;\n                default:\n                    throw 'error';\n            }\n        }\n        for (h = 0; h < A.Moon.tb.length; h++)\n            switch (((k = A.Moon.tb[h]), (q = Math.sin(d * k[0] + e * k[1] + f * k[2] + g * k[3])), k[1])) {\n                case 0:\n                    l += k[4] * q;\n                    break;\n                case 1:\n                case -1:\n                    l += k[4] * q * c;\n                    break;\n                case 2:\n                case -2:\n                    l += k[4] * q * p;\n                    break;\n                default:\n                    throw 'error';\n            }\n        return { lng: A.Math.pMod(a, 2 * Math.PI) + 1e-6 * m * b, lat: 1e-6 * l * b, delta: 385000.56 + 0.001 * n };\n    },\n    ta: [\n        [0, 0, 1, 0, 6288774, -20905355],\n        [2, 0, -1, 0, 1274027, -3699111],\n        [2, 0, 0, 0, 658314, -2955968],\n        [0, 0, 2, 0, 213618, -569925],\n        [0, 1, 0, 0, -185116, 48888],\n        [0, 0, 0, 2, -114332, -3149],\n        [2, 0, -2, 0, 58793, 246158],\n        [2, -1, -1, 0, 57066, -152138],\n        [2, 0, 1, 0, 53322, -170733],\n        [2, -1, 0, 0, 45758, -204586],\n        [0, 1, -1, 0, -40923, -129620],\n        [1, 0, 0, 0, -34720, 108743],\n        [0, 1, 1, 0, -30383, 104755],\n        [2, 0, 0, -2, 15327, 10321],\n        [0, 0, 1, 2, -12528, 0],\n        [0, 0, 1, -2, 10980, 79661],\n        [4, 0, -1, 0, 10675, -34782],\n        [0, 0, 3, 0, 10034, -23210],\n        [4, 0, -2, 0, 8548, -21636],\n        [2, 1, -1, 0, -7888, 24208],\n        [2, 1, 0, 0, -6766, 30824],\n        [1, 0, -1, 0, -5163, -8379],\n        [1, 1, 0, 0, 4987, -16675],\n        [2, -1, 1, 0, 4036, -12831],\n        [2, 0, 2, 0, 3994, -10445],\n        [4, 0, 0, 0, 3861, -11650],\n        [2, 0, -3, 0, 3665, 14403],\n        [0, 1, -2, 0, -2689, -7003],\n        [2, 0, -1, 2, -2602, 0],\n        [2, -1, -2, 0, 2390, 10056],\n        [1, 0, 1, 0, -2348, 6322],\n        [2, -2, 0, 0, 2236, -9884],\n        [0, 1, 2, 0, -2120, 5751],\n        [0, 2, 0, 0, -2069, 0],\n        [2, -2, -1, 0, 2048, -4950],\n        [2, 0, 1, -2, -1773, 4130],\n        [2, 0, 0, 2, -1595, 0],\n        [4, -1, -1, 0, 1215, -3958],\n        [0, 0, 2, 2, -1110, 0],\n        [3, 0, -1, 0, -892, 3258],\n        [2, 1, 1, 0, -810, 2616],\n        [4, -1, -2, 0, 759, -1897],\n        [0, 2, -1, 0, -713, -2117],\n        [2, 2, -1, 0, -700, 2354],\n        [2, 1, -2, 0, 691, 0],\n        [2, -1, 0, -2, 596, 0],\n        [4, 0, 1, 0, 549, -1423],\n        [0, 0, 4, 0, 537, -1117],\n        [4, -1, 0, 0, 520, -1571],\n        [1, 0, -2, 0, -487, -1739],\n        [2, 1, 0, -2, -399, 0],\n        [0, 0, 2, -2, -381, -4421],\n        [1, 1, 1, 0, 351, 0],\n        [3, 0, -2, 0, -340, 0],\n        [4, 0, -3, 0, 330, 0],\n        [2, -1, 2, 0, 327, 0],\n        [0, 2, 1, 0, -323, 1165],\n        [1, 1, -1, 0, 299, 0],\n        [2, 0, 3, 0, 294, 0],\n        [2, 0, -1, -2, 0, 8752],\n    ],\n    tb: [\n        [0, 0, 0, 1, 5128122],\n        [0, 0, 1, 1, 280602],\n        [0, 0, 1, -1, 277693],\n        [2, 0, 0, -1, 173237],\n        [2, 0, -1, 1, 55413],\n        [2, 0, -1, -1, 46271],\n        [2, 0, 0, 1, 32573],\n        [0, 0, 2, 1, 17198],\n        [2, 0, 1, -1, 9266],\n        [0, 0, 2, -1, 8822],\n        [2, -1, 0, -1, 8216],\n        [2, 0, -2, -1, 4324],\n        [2, 0, 1, 1, 4200],\n        [2, 1, 0, -1, -3359],\n        [2, -1, -1, 1, 2463],\n        [2, -1, 0, 1, 2211],\n        [2, -1, -1, -1, 2065],\n        [0, 1, -1, -1, -1870],\n        [4, 0, -1, -1, 1828],\n        [0, 1, 0, 1, -1794],\n        [0, 0, 0, 3, -1749],\n        [0, 1, -1, 1, -1565],\n        [1, 0, 0, 1, -1491],\n        [0, 1, 1, 1, -1475],\n        [0, 1, 1, -1, -1410],\n        [0, 1, 0, -1, -1344],\n        [1, 0, 0, -1, -1335],\n        [0, 0, 3, 1, 1107],\n        [4, 0, 0, -1, 1021],\n        [4, 0, -1, 1, 833],\n        [0, 0, 1, -3, 777],\n        [4, 0, -2, 1, 671],\n        [2, 0, 0, -3, 607],\n        [2, 0, 2, -1, 596],\n        [2, -1, 1, -1, 491],\n        [2, 0, -2, 1, -451],\n        [0, 0, 3, -1, 439],\n        [2, 0, 2, 1, 422],\n        [2, 0, -3, -1, 421],\n        [2, 1, -1, 1, -366],\n        [2, 1, 0, 1, -351],\n        [4, 0, 0, 1, 331],\n        [2, -1, 1, 1, 315],\n        [2, -2, 0, -1, 302],\n        [0, 0, 1, 3, -283],\n        [2, 1, 1, -1, -229],\n        [1, 1, 0, -1, 223],\n        [1, 1, 0, 1, 223],\n        [0, 1, -2, -1, -220],\n        [2, 1, -1, -1, -220],\n        [1, 0, 1, 1, -185],\n        [2, -1, -2, -1, 181],\n        [0, 1, 2, 1, -177],\n        [4, 0, -2, -1, 176],\n        [4, -1, -1, -1, 166],\n        [1, 0, 1, -1, -164],\n        [4, 0, 1, -1, 132],\n        [1, 0, -1, -1, -119],\n        [4, -1, 0, -1, 115],\n        [2, -2, 0, 1, 107],\n    ],\n};\nA.MoonIllum = {\n    phaseAngleEq: function (a, b, c, d) {\n        a = A.MoonIllum._coselong(a, c);\n        return Math.atan2(d * Math.sin(Math.acos(a)), b - d * a);\n    },\n    phaseAngleEq2: function (a, b) {\n        return Math.acos(-A.MoonIllum._coselong(a, b));\n    },\n    illuminated: function (a) {\n        return (1 + Math.cos(a)) / 2;\n    },\n    positionAngle: function (a, b) {\n        var c = Math.cos(b.dec);\n        return Math.atan2(c * Math.sin(b.ra - a.ra), Math.sin(b.dec) * Math.cos(a.dec) - c * Math.sin(a.dec) * Math.cos(b.ra - a.ra));\n    },\n    _coselong: function (a, b) {\n        return Math.sin(b.dec) * Math.sin(a.dec) + Math.cos(b.dec) * Math.cos(a.dec) * Math.cos(b.ra - a.ra);\n    },\n};\nA.Nutation = {\n    nutation: function (a) {\n        a = a.jdeJ2000Century();\n        for (var b = (A.Math.horner(a, [297.85036, 445267.11148, -0.0019142, 1 / 189474]) * Math.PI) / 180, c = (A.Math.horner(a, [357.52772, 35999.05034, -1.603e-4, -1 / 3e5]) * Math.PI) / 180, d = (A.Math.horner(a, [134.96298, 477198.867398, 0.0086972, 1 / 5620]) * Math.PI) / 180, e = (A.Math.horner(a, [93.27191, 483202.017538, -0.0036825, 1 / 327270]) * Math.PI) / 180, f = (A.Math.horner(a, [125.04452, -1934.136261, 0.0020708, 1 / 45e4]) * Math.PI) / 180, g = 0, l = 0, m = A.Nutation.table22A.length - 1; 0 <= m; m--) {\n            var h = A.Nutation.table22A[m], p = h[0] * b + h[1] * c + h[2] * d + h[3] * e + h[4] * f, n = Math.cos(p);\n            g += Math.sin(p) * (h[5] + h[6] * a);\n            l += n * (h[7] + h[8] * a);\n        }\n        return { deltalng: (1e-4 / 3600) * g * (Math.PI / 180), deltaobliquity: (1e-4 / 3600) * l * (Math.PI / 180) };\n    },\n    nutationInRA: function (a) {\n        var b = A.Nutation.meanObliquityLaskar(a);\n        a = A.Nutation.nutation(a);\n        return a.deltalng * Math.cos(b + a.deltaobliquity);\n    },\n    trueObliquity: function (a) {\n        var b = A.Nutation.meanObliquityLaskar(a);\n        a = A.Nutation.nutation(a);\n        return b + a.deltaobliquity;\n    },\n    meanObliquity: function (a) {\n        return A.Math.horner(a.jdeJ2000Century(), [\n            (84381.448 / 3600) * (Math.PI / 180),\n            (-46.815 / 3600) * (Math.PI / 180),\n            (-5.9e-4 / 3600) * (Math.PI / 180),\n            (0.001813 / 3600) * (Math.PI / 180),\n        ]);\n    },\n    meanObliquityLaskar: function (a) {\n        return A.Math.horner(0.01 * a.jdeJ2000Century(), [\n            (84381.448 / 3600) * (Math.PI / 180),\n            (-4680.93 / 3600) * (Math.PI / 180),\n            (-1.55 / 3600) * (Math.PI / 180),\n            (1999.25 / 3600) * (Math.PI / 180),\n            (-51.38 / 3600) * (Math.PI / 180),\n            (-249.67 / 3600) * (Math.PI / 180),\n            (-39.05 / 3600) * (Math.PI / 180),\n            (7.12 / 3600) * (Math.PI / 180),\n            (27.87 / 3600) * (Math.PI / 180),\n            (5.79 / 3600) * (Math.PI / 180),\n            (2.45 / 3600) * (Math.PI / 180),\n        ]);\n    },\n    table22A: [\n        [0, 0, 0, 0, 1, -171996, -174.2, 92025, 8.9],\n        [-2, 0, 0, 2, 2, -13187, -1.6, 5736, -3.1],\n        [0, 0, 0, 2, 2, -2274, -0.2, 977, -0.5],\n        [0, 0, 0, 0, 2, 2062, 0.2, -895, 0.5],\n        [0, 1, 0, 0, 0, 1426, -3.4, 54, -0.1],\n        [0, 0, 1, 0, 0, 712, 0.1, -7, 0],\n        [-2, 1, 0, 2, 2, -517, 1.2, 224, -0.6],\n        [0, 0, 0, 2, 1, -386, -0.4, 200, 0],\n        [0, 0, 1, 2, 2, -301, 0, 129, -0.1],\n        [-2, -1, 0, 2, 2, 217, -0.5, -95, 0.3],\n        [-2, 0, 1, 0, 0, -158, 0, 0, 0],\n        [-2, 0, 0, 2, 1, 129, 0.1, -70, 0],\n        [0, 0, -1, 2, 2, 123, 0, -53, 0],\n        [2, 0, 0, 0, 0, 63, 0, 0, 0],\n        [0, 0, 1, 0, 1, 63, 0.1, -33, 0],\n        [2, 0, -1, 2, 2, -59, 0, 26, 0],\n        [0, 0, -1, 0, 1, -58, -0.1, 32, 0],\n        [0, 0, 1, 2, 1, -51, 0, 27, 0],\n        [-2, 0, 2, 0, 0, 48, 0, 0, 0],\n        [0, 0, -2, 2, 1, 46, 0, -24, 0],\n        [2, 0, 0, 2, 2, -38, 0, 16, 0],\n        [0, 0, 2, 2, 2, -31, 0, 13, 0],\n        [0, 0, 2, 0, 0, 29, 0, 0, 0],\n        [-2, 0, 1, 2, 2, 29, 0, -12, 0],\n        [0, 0, 0, 2, 0, 26, 0, 0, 0],\n        [-2, 0, 0, 2, 0, -22, 0, 0, 0],\n        [0, 0, -1, 2, 1, 21, 0, -10, 0],\n        [0, 2, 0, 0, 0, 17, -0.1, 0, 0],\n        [2, 0, -1, 0, 1, 16, 0, -8, 0],\n        [-2, 2, 0, 2, 2, -16, 0.1, 7, 0],\n        [0, 1, 0, 0, 1, -15, 0, 9, 0],\n        [-2, 0, 1, 0, 1, -13, 0, 7, 0],\n        [0, -1, 0, 0, 1, -12, 0, 6, 0],\n        [0, 0, 2, -2, 0, 11, 0, 0, 0],\n        [2, 0, -1, 2, 1, -10, 0, 5, 0],\n        [2, 0, 1, 2, 2, -8, 0, 3, 0],\n        [0, 1, 0, 2, 2, 7, 0, -3, 0],\n        [-2, 1, 1, 0, 0, -7, 0, 0, 0],\n        [0, -1, 0, 2, 2, -7, 0, 3, 0],\n        [2, 0, 0, 2, 1, -7, 0, 3, 0],\n        [2, 0, 1, 0, 0, 6, 0, 0, 0],\n        [-2, 0, 2, 2, 2, 6, 0, -3, 0],\n        [-2, 0, 1, 2, 1, 6, 0, -3, 0],\n        [2, 0, -2, 0, 1, -6, 0, 3, 0],\n        [2, 0, 0, 0, 1, -6, 0, 3, 0],\n        [0, -1, 1, 0, 0, 5, 0, 0, 0],\n        [-2, -1, 0, 2, 1, -5, 0, 3, 0],\n        [-2, 0, 0, 0, 1, -5, 0, 3, 0],\n        [0, 0, 2, 2, 1, -5, 0, 3, 0],\n        [-2, 0, 2, 0, 1, 4, 0, 0, 0],\n        [-2, 1, 0, 2, 1, 4, 0, 0, 0],\n        [0, 0, 1, -2, 0, 4, 0, 0, 0],\n        [-1, 0, 1, 0, 0, -4, 0, 0, 0],\n        [-2, 1, 0, 0, 0, -4, 0, 0, 0],\n        [1, 0, 0, 0, 0, -4, 0, 0, 0],\n        [0, 0, 1, 2, 0, 3, 0, 0, 0],\n        [0, 0, -2, 2, 2, -3, 0, 0, 0],\n        [-1, -1, 1, 0, 0, -3, 0, 0, 0],\n        [0, 1, 1, 0, 0, -3, 0, 0, 0],\n        [0, -1, 1, 2, 2, -3, 0, 0, 0],\n        [2, -1, -1, 2, 2, -3, 0, 0, 0],\n        [0, 0, 3, 2, 2, -3, 0, 0, 0],\n        [2, -1, 0, 2, 2, -3, 0, 0, 0],\n    ],\n};\nA.Parallax = {\n    earthsunParallax: ((8.794 / 60 / 60) * Math.PI) / 180,\n    horizontal: function (a) {\n        return ((8.794 / 60 / 60) * Math.PI) / 180 / a;\n    },\n    topocentric: function (a, b, c, d, e, f) {\n        e = A.Math.pMod(f - e - a.ra, 2 * Math.PI);\n        b = Math.sin(b);\n        f = Math.cos(e);\n        var g = Math.cos(a.dec);\n        e = Math.atan2(-d * b * Math.sin(e), g - d * b * f);\n        return new A.EqCoord(a.ra + e, Math.atan2((Math.sin(a.dec) - c * b) * Math.cos(e), g - d * b * f));\n    },\n    topocentric2: function (a, b, c, d, e, f) {\n        e = A.Math.pMod(f - e - a.ra, 2 * Math.PI);\n        f = Math.cos(a.dec);\n        return new A.EqCoord(a.ra + (-b * d * Math.sin(e)) / f, a.dec + -b * (c * f - d * Math.cos(e) * Math.sin(a.dec)));\n    },\n};\nA.Refraction = {\n    bennett: function (a) {\n        0 > a && (a = 0);\n        var b = Math.PI / 180;\n        return b / 60 / Math.tan(a + (7.31 * b * b) / (a + 4.4 * b));\n    },\n    bennett2: function (a) {\n        var b = Math.PI / 180, c = 60 / b, d = 0.06 / c;\n        c = 14.7 * c * b;\n        b *= 13;\n        a = A.Refraction.bennett(a);\n        return a - d * Math.sin(c * a + b);\n    },\n    saemundsson: function (a) {\n        var b = Math.PI / 180;\n        return (1.02 * b) / 60 / Math.tan(a + (10.3 * b * b) / (a + 5.11 * b));\n    },\n};\nA.Rise = {\n    meanRefraction: (0.5667 * Math.PI) / 180,\n    stdh0Stellar: (-0.5667 * Math.PI) / 180,\n    stdh0Solar: (-0.8333 * Math.PI) / 180,\n    stdh0LunarMean: (0.125 * Math.PI) / 180,\n    stdh0Lunar: function (a) {\n        return 0.7275 * a - A.Rise.meanRefraction;\n    },\n    circumpolar: function (a, b, c) {\n        a = (Math.sin(b) - Math.sin(a) * Math.sin(c)) / (Math.cos(a) * Math.cos(c));\n        return -1 > a || 1 < a ? null : a;\n    },\n    approxTransit: function (a, b, c) {\n        return (43200 * (c.ra + a.lng)) / Math.PI - b;\n    },\n    approxTimes: function (a, b, c, d) {\n        b = A.Rise.circumpolar(a.lat, b, d.dec);\n        if (!b)\n            return null;\n        b = (43200 * Math.acos(b)) / Math.PI;\n        a = (43200 * (d.ra + a.lng)) / Math.PI - c;\n        return {\n            transit: A.Math.pMod(a, 86400),\n            transitd: Math.floor(a / 86400),\n            rise: A.Math.pMod(a - b, 86400),\n            rised: Math.floor((a - b) / 86400),\n            set: A.Math.pMod(a + b, 86400),\n            setd: Math.floor((a + b) / 86400),\n        };\n    },\n    times: function (a, b, c, d, e) {\n        function f(e) {\n            var f = A.Math.pMod(d + (360.985647 * e) / 360, 86400), g = e + b, h = A.Interp.interpolateX(l, g);\n            g = A.Interp.interpolateX(m, g);\n            f = (f * Math.PI) / 43200 - (a.lng + h);\n            h = Math.cos(g);\n            return A.Math.pMod(e + (((p * Math.sin(g) + n * h * Math.cos(f) - c) / (h * n * Math.sin(f))) * 43200) / Math.PI, 86400);\n        }\n        var g = A.Rise.approxTimes(a, c, d, e[1]);\n        if (!g)\n            return null;\n        var l = A.Interp.newLen3(-86400, 86400, [e[0].ra, e[1].ra, e[2].ra]), m = A.Interp.newLen3(-86400, 86400, [e[0].dec, e[1].dec, e[2].dec]);\n        e = d + (360.985647 * g.transit) / 360;\n        var h = A.Interp.interpolateX(l, g.transit + b);\n        g.transit = A.Math.pMod(g.transit - (e - (43200 * (a.lng + h)) / Math.PI), 86400);\n        var p = Math.sin(a.lat), n = Math.cos(a.lat);\n        g.rise = f(g.rise);\n        g.set = f(g.set);\n        return g;\n    },\n};\nA.Sidereal = {\n    iau82: [24110.54841, 8640184.812866, 0.093104, 6.2e-6],\n    jdToCFrac: function (a) {\n        a = A.Math.modF(a.jd + 0.5);\n        return [new A.JulianDay(a[0] - 0.5).jdJ2000Century(), a[1]];\n    },\n    mean: function (a) {\n        return A.Math.pMod(A.Sidereal._mean(a), 86400);\n    },\n    _mean: function (a) {\n        a = A.Sidereal._mean0UT(a);\n        return a.s + 86636.55536784 * a.f;\n    },\n    _meanInRA: function (a) {\n        a = A.Sidereal._mean0UT(a);\n        return (a.s * Math.PI) / 43200 + 2.0054758187 * a.f * Math.PI;\n    },\n    mean0UT: function (a) {\n        a = A.Sidereal._mean0UT(a);\n        return A.Math.pMod(a.s, 86400);\n    },\n    _mean0UT: function (a) {\n        a = A.Sidereal.jdToCFrac(a);\n        return { s: A.Math.horner(a[0], A.Sidereal.iau82), f: a[1] };\n    },\n    apparentInRa: function (a) {\n        var b = A.Sidereal._meanInRA(a);\n        a = A.Nutation.nutationInRA(a);\n        return A.Math.pMod(b + a, 2 * Math.PI);\n    },\n    apparent: function (a) {\n        var b = A.Sidereal._mean(a);\n        a = (648e3 * A.Nutation.nutationInRA(a)) / Math.PI / 15;\n        return A.Math.pMod(b + a, 86400);\n    },\n    apparentLocal: function (a, b) {\n        a = A.Sidereal.apparent(a);\n        return A.Math.pMod(a - (43200 * b) / Math.PI, 86400);\n    },\n    apparent0UT: function (a) {\n        var b = A.Math.modF(a.jd + 0.5);\n        a = A.Math.modF(a.jde + 0.5);\n        b = A.Math.horner((b[0] - 0.5 - A.J2000) / 36525, A.Sidereal.iau82) + 86636.55536784 * b[1];\n        a = (648e3 * A.Nutation.nutationInRA(new A.JulianDay(a[0]))) / Math.PI / 15;\n        return A.Math.pMod(b + a, 86400);\n    },\n};\nA.Solar = {\n    earthsunDelta: 149597870,\n    apparentEquatorial: function (a) {\n        var b = a.jdJ2000Century(), c = A.Solar.node(b);\n        b = A.Solar.apparentLongitude(b, c);\n        a = A.Nutation.meanObliquityLaskar(a) + ((0.00256 * Math.PI) / 180) * Math.cos(c);\n        c = Math.sin(b);\n        return new A.EqCoord(Math.atan2(Math.cos(a) * c, Math.cos(b)), Math.asin(Math.sin(a) * c));\n    },\n    apparentTopocentric: function (a, b, c) {\n        var d = A.Solar.apparentEquatorial(a), e = A.Globe.parallaxConstants(b.lat, b.h);\n        c || (c = A.Sidereal.apparentInRa(a));\n        return A.Parallax.topocentric2(d, A.Parallax.earthsunParallax, e.rhoslat, e.rhoclat, b.lng, c);\n    },\n    topocentricPosition: function (a, b, c) {\n        var d = A.Sidereal.apparentInRa(a);\n        a = A.Solar.apparentTopocentric(a, b, d);\n        b = A.Coord.eqToHz(a, b, d);\n        !0 === c && (b.alt += A.Refraction.bennett2(b.alt));\n        return { hz: b, eq: a };\n    },\n    approxTransit: function (a, b) {\n        a = a.startOfDay();\n        return A.Rise.approxTransit(b, A.Sidereal.apparent0UT(a), A.Solar.apparentTopocentric(a, b));\n    },\n    approxTimes: function (a, b) {\n        var c = a.startOfDay();\n        a = A.Solar.apparentTopocentric(c, b);\n        var d = A.Rise.stdh0Solar;\n        c = A.Sidereal.apparent0UT(c);\n        return A.Rise.approxTimes(b, d, c, a);\n    },\n    times: function (a, b) {\n        a = a.startOfDay();\n        var c = A.Solar.apparentTopocentric(new A.JulianDay(a.jd - 1, a.deltaT), b), d = A.Solar.apparentTopocentric(a, b), e = A.Solar.apparentTopocentric(new A.JulianDay(a.jd + 1, a.deltaT), b), f = A.Rise.stdh0Solar, g = A.Sidereal.apparent0UT(a);\n        return A.Rise.times(b, a.deltaT, f, g, [c, d, e]);\n    },\n    meanAnomaly: function (a) {\n        return (A.Math.horner(a, [357.52911, 35999.05029, -1.537e-4]) * Math.PI) / 180;\n    },\n    trueLongitude: function (a) {\n        var b = (A.Math.horner(a, [280.46646, 36000.76983, 3.032e-4]) * Math.PI) / 180, c = A.Solar.meanAnomaly(a);\n        a = ((A.Math.horner(a, [1.914602, -0.004817, -1.4e-5]) * Math.sin(c) + (0.019993 - 1.01e-4 * a) * Math.sin(2 * c) + 2.89e-4 * Math.sin(3 * c)) * Math.PI) / 180;\n        return { s: A.Math.pMod(b + a, 2 * Math.PI), v: A.Math.pMod(c + a, 2 * Math.PI) };\n    },\n    apparentLongitude: function (a, b) {\n        b || (b = A.Solar.node(a));\n        return A.Solar.trueLongitude(a).s - (0.00569 * Math.PI) / 180 - ((0.00478 * Math.PI) / 180) * Math.sin(b);\n    },\n    node: function (a) {\n        return ((125.04 - 1934.136 * a) * Math.PI) / 180;\n    },\n};\nA.Solistice = {\n    march: function (a) {\n        return 1e3 > a ? A.Solistice._eq(a, A.Solistice.mc0) : A.Solistice._eq(a - 2e3, A.Solistice.mc2);\n    },\n    june: function (a) {\n        return 1e3 > a ? A.Solistice._eq(a, A.Solistice.jc0) : A.Solistice._eq(a - 2e3, A.Solistice.jc2);\n    },\n    september: function (a) {\n        return 1e3 > a ? A.Solistice._eq(a, A.Solistice.sc0) : A.Solistice._eq(a - 2e3, A.Solistice.sc2);\n    },\n    december: function (a) {\n        return 1e3 > a ? A.Solistice._eq(a, A.Solistice.dc0) : A.Solistice._eq(a - 2e3, A.Solistice.dc2);\n    },\n    _eq: function (a, b) {\n        a = A.Math.horner(0.001 * a, b);\n        b = (a - A.J2000) / A.JulianCentury;\n        var c = ((35999.373 * Math.PI) / 180) * b - (2.47 * Math.PI) / 180;\n        c = 1 + 0.0334 * Math.cos(c) + 7e-4 * Math.cos(2 * c);\n        for (var d = 0, e = this.terms.length - 1; 0 <= e; e--) {\n            var f = this.terms[e];\n            d += f[0] * Math.cos(((f[1] + f[2] * b) * Math.PI) / 180);\n        }\n        return a + (1e-5 * d) / c;\n    },\n    mc0: [1721139.29189, 365242.1374, 0.06134, 0.00111, -7.1e-4],\n    jc0: [1721233.25401, 365241.72562, -0.05232, 0.00907, 2.5e-4],\n    sc0: [1721325.70455, 365242.49558, -0.11677, -0.00297, 7.4e-4],\n    dc0: [1721414.39987, 365242.88257, -0.00769, -0.00933, -6e-5],\n    mc2: [2451623.80984, 365242.37404, 0.05169, -0.00411, -5.7e-4],\n    jc2: [2451716.56767, 365241.62603, 0.00325, 0.00888, -3e-4],\n    sc2: [2451810.21715, 365242.01767, -0.11575, 0.00337, 7.8e-4],\n    dc2: [2451900.05952, 365242.74049, -0.06223, -0.00823, 3.2e-4],\n    terms: [\n        [485, 324.96, 1934.136],\n        [203, 337.23, 32964.467],\n        [199, 342.08, 20.186],\n        [182, 27.85, 445267.112],\n        [156, 73.14, 45036.886],\n        [136, 171.52, 22518.443],\n        [77, 222.54, 65928.934],\n        [74, 296.72, 3034.906],\n        [70, 243.58, 9037.513],\n        [58, 119.81, 33718.147],\n        [52, 297.17, 150.678],\n        [50, 21.02, 2281.226],\n        [45, 247.54, 29929.562],\n        [44, 325.15, 31555.956],\n        [29, 60.93, 4443.417],\n        [18, 155.12, 67555.328],\n        [17, 288.79, 4562.452],\n        [16, 198.04, 62894.029],\n        [14, 199.76, 31436.921],\n        [12, 95.39, 14577.848],\n        [12, 287.11, 31931.756],\n        [12, 320.81, 34777.259],\n        [9, 227.73, 1222.114],\n        [8, 15.45, 16859.074],\n    ],\n};\nexport { A };\n","import { MILLISECONDS_PER_DAY } from '../lib/constants';\nimport { dateFormat } from '../lib/external/dateFormat';\nexport const getDayOfYear = (date) => {\n    date = date || new Date();\n    const _isLeapYear = (date) => {\n        const year = date.getFullYear();\n        if ((year & 3) !== 0)\n            return false;\n        return year % 100 !== 0 || year % 400 === 0;\n    };\n    const dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n    const mn = date.getMonth();\n    const dn = date.getUTCDate();\n    let dayOfYear = dayCount[mn] + dn;\n    if (mn > 1 && _isLeapYear(date))\n        dayOfYear++;\n    return dayOfYear;\n};\nexport const jday = (year, mon, day, hr, minute, sec) => {\n    if (!year) {\n        const now = new Date();\n        const jDayStart = new Date(now.getFullYear(), 0, 0);\n        const jDayDiff = now.getDate() - jDayStart.getDate();\n        return Math.floor(jDayDiff / MILLISECONDS_PER_DAY);\n    }\n    else {\n        return 367.0 * year - Math.floor(7 * (year + Math.floor((mon + 9) / 12.0)) * 0.25) + Math.floor((275 * mon) / 9.0) + day + 1721013.5 + ((sec / 60.0 + minute) / 60.0 + hr) / 24.0;\n    }\n};\nexport const localToZulu = (date) => {\n    const dateStr = dateFormat(date, 'isoDateTime', true);\n    const dateArr = dateStr.split(' ');\n    date = new Date(dateArr[0] + 'T' + dateArr[1] + 'Z');\n    return date;\n};\nexport const dateFromJday = (year, day) => {\n    const date = new Date(year, 0); // initialize a date in `year-01-01`\n    return new Date(date.setDate(day));\n};\nexport const dateToLocalInIso = (date) => {\n    const offsetMs = date.getTimezoneOffset() * 60 * 1000;\n    const msLocal = date.getTime() - offsetMs;\n    const dateLocal = new Date(msLocal);\n    let iso = dateLocal.toISOString();\n    iso = iso.replace('T', ' ');\n    const isoLocal = iso.slice(0, 19) + ' ' + dateLocal.toString().slice(25, 31);\n    return isoLocal;\n};\n","// //////////////////////////////////////////////////////////////////////////////\n// Code\n// //////////////////////////////////////////////////////////////////////////////\nexport const defaultGd = {\n    latitude: null,\n    longitude: 0,\n    height: 0,\n};\nexport const emptySensor = {\n    observerGd: {\n        latitude: null,\n        longitude: 0,\n        height: 0,\n    },\n    alt: null,\n    country: '',\n    lat: null,\n    lon: null,\n    name: '',\n    obsmaxaz: 0,\n    obsmaxel: 0,\n    obsmaxrange: 0,\n    obsminaz: 0,\n    obsminel: 0,\n    obsminrange: 0,\n    shortName: '',\n    staticNum: 0,\n    sun: '',\n    volume: false,\n    zoom: '',\n};\n","import * as satellite from 'satellite.js';\nimport { SpaceObjectType } from '../../api/SpaceObjectType';\nimport { DEG2RAD, MILLISECONDS_PER_DAY, PI, RAD2DEG } from '../../lib/constants';\nimport { A } from '../../lib/external/meuusjs';\nimport { jday } from '../../timeManager/transforms';\nimport { defaultGd } from '../constants';\n// TODO: create a way to determine if observerGd is using old satellite.js naming or lon,lat,alt\n// so that we can import satMath.ts instead\nexport const lookAnglesToEcf = (azDeg, elDeg, rng, obsLat, obsLong, obsAlt) => {\n    // site ecef in meters\n    const geodeticCoords = {\n        latitude: obsLat,\n        longitude: obsLong,\n        height: obsAlt,\n    };\n    const ecf = satellite.geodeticToEcf(geodeticCoords);\n    // some needed calculations\n    const slat = Math.sin(obsLat);\n    const slon = Math.sin(obsLong);\n    const clat = Math.cos(obsLat);\n    const clon = Math.cos(obsLong);\n    const azRad = DEG2RAD * azDeg;\n    const elRad = DEG2RAD * elDeg;\n    // az,el,range to sez convertion\n    const south = -rng * Math.cos(elRad) * Math.cos(azRad);\n    const east = rng * Math.cos(elRad) * Math.sin(azRad);\n    const zenith = rng * Math.sin(elRad);\n    const x = slat * clon * south + -slon * east + clat * clon * zenith + ecf.x;\n    const y = slat * slon * south + clon * east + clat * slon * zenith + ecf.y;\n    const z = -clat * south + slat * zenith + ecf.z;\n    return { x, y, z };\n};\n/* Returns Current Propagation Time */\nexport const propTime = (dynamicOffsetEpoch, staticOffset, propRate) => {\n    const now = new Date();\n    const dynamicPropOffset = now.getTime() - dynamicOffsetEpoch;\n    now.setTime(dynamicOffsetEpoch + staticOffset + dynamicPropOffset * propRate);\n    return now;\n};\nexport const checkSunExclusion = (sensor, j, gmst, now) => {\n    var jdo = new A.JulianDay(j); // now\n    var coord = A.EclCoordfromWgs84(0, 0, 0);\n    var coord2 = A.EclCoordfromWgs84(sensor.observerGd.latitude * RAD2DEG, sensor.observerGd.longitude * RAD2DEG, sensor.observerGd.height);\n    // AZ / EL Calculation\n    var tp = A.Solar.topocentricPosition(jdo, coord, false);\n    var tpRel = A.Solar.topocentricPosition(jdo, coord2, false);\n    const sunAz = tp.hz.az * RAD2DEG + (180 % 360);\n    const sunEl = (tp.hz.alt * RAD2DEG) % 360;\n    const sunElRel = (tpRel.hz.alt * RAD2DEG) % 360;\n    // Range Calculation\n    var T = new A.JulianDay(A.JulianDay.dateToJD(now)).jdJ2000Century();\n    let sunG = (A.Solar.meanAnomaly(T) * 180) / PI;\n    sunG = sunG % 360.0;\n    const sunR = 1.00014 - 0.01671 * Math.cos(sunG) - 0.00014 * Math.cos(2 * sunG);\n    const sunRange = (sunR * 149597870700) / 1000; // au to km conversion\n    // RAE to ECI\n    const sunECI = satellite.ecfToEci(lookAnglesToEcf(sunAz, sunEl, sunRange, 0, 0, 0), gmst);\n    return sensor.observerGd !== defaultGd && (sensor.type === SpaceObjectType.OPTICAL || sensor.type === SpaceObjectType.OBSERVER) && sunElRel > -6\n        ? [true, sunECI]\n        : [false, sunECI];\n};\nexport const isInFov = (lookangles, sensor) => {\n    const azimuth = lookangles.azimuth * RAD2DEG;\n    const elevation = lookangles.elevation * RAD2DEG;\n    const rangeSat = lookangles.rangeSat;\n    if (sensor.obsminaz > sensor.obsmaxaz) {\n        if (((azimuth >= sensor.obsminaz || azimuth <= sensor.obsmaxaz) &&\n            elevation >= sensor.obsminel &&\n            elevation <= sensor.obsmaxel &&\n            rangeSat <= sensor.obsmaxrange &&\n            rangeSat >= sensor.obsminrange) ||\n            ((azimuth >= sensor.obsminaz2 || azimuth <= sensor.obsmaxaz2) &&\n                elevation >= sensor.obsminel2 &&\n                elevation <= sensor.obsmaxel2 &&\n                rangeSat <= sensor.obsmaxrange2 &&\n                rangeSat >= sensor.obsminrange2)) {\n            return 1;\n        }\n    }\n    else {\n        if ((azimuth >= sensor.obsminaz &&\n            azimuth <= sensor.obsmaxaz &&\n            elevation >= sensor.obsminel &&\n            elevation <= sensor.obsmaxel &&\n            rangeSat <= sensor.obsmaxrange &&\n            rangeSat >= sensor.obsminrange) ||\n            (azimuth >= sensor.obsminaz2 &&\n                azimuth <= sensor.obsmaxaz2 &&\n                elevation >= sensor.obsminel2 &&\n                elevation <= sensor.obsmaxel2 &&\n                rangeSat <= sensor.obsmaxrange2 &&\n                rangeSat >= sensor.obsminrange2)) {\n            return 1;\n        }\n    }\n    return 0;\n};\nexport const setupTimeVariables = (dynamicOffsetEpoch, staticOffset, propRate, isSunlightView, isMultiSensor, sensor) => {\n    const now = propTime(dynamicOffsetEpoch, staticOffset, propRate);\n    const j = jday(now.getUTCFullYear(), now.getUTCMonth() + 1, // Note, this function requires months in range 1-12.\n    now.getUTCDate(), now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds()) +\n        now.getUTCMilliseconds() * MILLISECONDS_PER_DAY;\n    const gmst = satellite.gstime(j);\n    let isSunExclusion = false;\n    let sunEci = { x: 0, y: 0, z: 0 };\n    if (isSunlightView && !isMultiSensor) {\n        [isSunExclusion, sunEci] = checkSunExclusion(sensor, j, gmst, now);\n    }\n    const j2 = jday(now.getUTCFullYear(), now.getUTCMonth() + 1, // Note, this function requires months in range 1-12.\n    now.getUTCDate(), now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds() + 1) +\n        now.getUTCMilliseconds() * MILLISECONDS_PER_DAY;\n    const gmstNext = satellite.gstime(j2);\n    return {\n        now,\n        j,\n        gmst,\n        gmstNext,\n        isSunExclusion,\n        sunEci,\n    };\n};\nexport const createLatLonHei = (lat, lon, hei) => ({\n    longitude: lon,\n    latitude: lat,\n    height: hei,\n});\nexport const isInValidElevation = (lookangles, selectedSatFOV) => lookangles.elevation * RAD2DEG > 0 && 90 - lookangles.elevation * RAD2DEG < selectedSatFOV;\nexport const isSensorDeepSpace = (mSensor, sensor) => {\n    // TODO: This should use the sensors max range instead of sensor type\n    if (mSensor.length > 1 && sensor.type === SpaceObjectType.OPTICAL)\n        return true;\n    if (mSensor.length > 1 && sensor.type === SpaceObjectType.OBSERVER)\n        return true;\n    if (mSensor.length > 1 && sensor.type === SpaceObjectType.MECHANICAL)\n        return true;\n    return false;\n};\n","export const setPosition = (satPos, i, pos) => {\n    satPos[i * 3] = pos.x;\n    satPos[i * 3 + 1] = pos.y;\n    satPos[i * 3 + 2] = pos.z;\n    return satPos;\n};\nexport const resetPosition = (satPos, i) => {\n    satPos[i * 3] = 0;\n    satPos[i * 3 + 1] = 0;\n    satPos[i * 3 + 2] = 0;\n    return satPos;\n};\nexport const resetVelocity = (satVel, i) => {\n    satVel[i * 3] = 0;\n    satVel[i * 3 + 1] = 0;\n    satVel[i * 3 + 2] = 0;\n    return satVel;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * /*! /////////////////////////////////////////////////////////////////////////////\n *\n * main.js is the primary javascript file for keeptrack.space. It manages all user\n * interaction with the application.\n * http://keeptrack.space\n *\n * @Copyright (C) 2016-2021 Theodore Kruczek\n * @Copyright (C) 2020 Heather Kruczek\n * @Copyright (C) 2015-2016, James Yoder\n *\n * Original source code released by James Yoder at https://github.com/jeyoder/ThingsInSpace/\n * under the MIT License. Please reference http://keeptrack.space/license/thingsinspace.txt\n *\n * KeepTrack is free software: you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by the Free Software\n * Foundation, either version 3 of the License, or (at your option) any later version.\n *\n * KeepTrack is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License along with\n * KeepTrack. If not, see <http://www.gnu.org/licenses/>.\n *\n * /////////////////////////////////////////////////////////////////////////////\n */\nimport { SunCalc } from '@app/js/lib/suncalc.js';\nimport numeric from 'numeric';\nimport * as satellite from 'satellite.js';\nimport { SpaceObjectType } from '../api/SpaceObjectType';\nimport { DEG2RAD, GROUND_BUFFER_DISTANCE, PI, RAD2DEG, RADIUS_OF_EARTH, RADIUS_OF_SUN, STAR_DISTANCE, TAU } from '../lib/constants';\nimport { defaultGd, emptySensor } from './constants';\nimport { createLatLonHei, isInFov, isInValidElevation, isSensorDeepSpace, lookAnglesToEcf, setupTimeVariables } from './positionCruncher/calculations';\nimport { resetPosition, resetVelocity, setPosition } from './positionCruncher/satCache';\nconst EMPTY_FLOAT32_ARRAY = new Float32Array(0);\nconst EMPTY_INT8_ARRAY = new Int8Array(0);\n/** ARRAYS */\nlet satCache = []; // Cache of Satellite Data from TLE.json and Static Data from variable.js\nlet satPos = EMPTY_FLOAT32_ARRAY; // Array of current Satellite and Static Positions\nlet satVel = EMPTY_FLOAT32_ARRAY; // Array of current Satellite and Static Velocities\nlet satInView = EMPTY_INT8_ARRAY; // Array of booleans showing if current Satellite is in view of Sensor\nlet satInSun = EMPTY_INT8_ARRAY; // Array of booleans showing if current Satellite is in sunlight\nlet sensorMarkerArray = [0]; // Array of Markers used to show sensor fence and FOV\nvar satelliteSelected = [-1]; // Array used to determine which satellites are selected\nlet isInterupted = false; // Boolean used to determine if the worker is interupted\n/** TIME VARIABLES */\nlet globalPropagationRate = 1000; // Limits how often the propagation loop runs\nlet globalPropagationRateMultiplier = 1; // Used to slow down propagation rate on slow computers\nlet propagationRunning = false; // Prevent Propagation From Running Twice\n// let timeSyncRunning = false; // Prevent Time Sync Loop From Running Twice\nvar divisor = 1; // When running at high speeds, allow faster propagation\nlet dynamicOffsetEpoch = Date.now();\nlet staticOffset = 0;\nvar propRate = 1; // vars us run time faster (or slower) than normal\n// var propChangeTime = Date.now(); // vars us run time faster (or slower) than normal\n/** Settings */\nvar selectedSatFOV = 90; // FOV in Degrees\nvar isShowFOVBubble = false; // Flag for if FOV bubble is shown\nvar isShowSurvFence = false; // Flag for if fence markers are shown\nvar isResetFOVBubble = false;\nvar isShowSatOverfly = false;\nvar isResetSatOverfly = false;\nvar isMultiSensor = false;\nvar isIgnoreNonRadar = true;\nvar isSunlightView = false;\nvar isLowPerf = false;\nvar isResetMarker = false;\nvar isResetInView = false;\nlet fieldOfViewSetLength = 0;\nlet len;\n/** OBSERVER VARIABLES */\nvar mSensor = [];\nlet sensor = emptySensor;\n// Handles Incomming Messages to sat-cruncher from main thread\ntry {\n    onmessage = (m) => onmessageProcessing(m);\n}\ncatch (e) {\n    // If Jest isn't running then throw the error\n    if (!process)\n        throw e;\n}\nexport const onmessageProcessing = (m) => {\n    switch (m.data.typ) {\n        case 'offset':\n            staticOffset = m.data.staticOffset;\n            dynamicOffsetEpoch = m.data.dynamicOffsetEpoch;\n            propRate = m.data.propRate;\n            isInterupted = true;\n            // Changing this to 0.1 caused issues...\n            divisor = 1;\n            return;\n        case 'satdata':\n            var satData = JSON.parse(m.data.dat);\n            len = satData.length;\n            var i = 0;\n            var extraData = [];\n            var satrec;\n            while (i < len) {\n                const extraRec = {\n                    lowAlt: null,\n                    inclination: null,\n                    eccentricity: null,\n                    raan: null,\n                    argPe: null,\n                    meanMotion: null,\n                    semiMajorAxis: null,\n                    semiMinorAxis: null,\n                    apogee: null,\n                    perigee: null,\n                    period: null,\n                };\n                satrec = null;\n                if (satData[i].static || satData[i].missile || satData[i].isRadarData) {\n                    satrec = satData[i];\n                    delete satrec['id'];\n                    extraData.push(extraRec);\n                    satCache.push(satrec);\n                    i++;\n                }\n                else {\n                    satrec = satellite.twoline2satrec(\n                    // perform and store sat init calcs\n                    satData[i].TLE1, satData[i].TLE2);\n                    extraRec.lowAlt = satrec.isimp;\n                    extraRec.inclination = satrec.inclo; // rads\n                    extraRec.eccentricity = satrec.ecco;\n                    extraRec.raan = satrec.nodeo; // rads\n                    extraRec.argPe = satrec.argpo; // rads\n                    extraRec.meanMotion = (satrec.no * 60 * 24) / TAU; // convert rads/minute to rev/day\n                    extraRec.semiMajorAxis = Math.pow(8681663.653 / extraRec.meanMotion, 2 / 3);\n                    extraRec.semiMinorAxis = extraRec.semiMajorAxis * Math.sqrt(1 - Math.pow(extraRec.eccentricity, 2));\n                    extraRec.apogee = extraRec.semiMajorAxis * (1 + extraRec.eccentricity) - RADIUS_OF_EARTH;\n                    satrec.apogee = extraRec.apogee;\n                    extraRec.perigee = extraRec.semiMajorAxis * (1 - extraRec.eccentricity) - RADIUS_OF_EARTH;\n                    extraRec.period = 1440.0 / extraRec.meanMotion;\n                    extraData.push(extraRec);\n                    delete satrec['id'];\n                    satCache.push(satrec);\n                    i++;\n                }\n            }\n            satPos = new Float32Array(len * 3);\n            satVel = new Float32Array(len * 3);\n            satInView = new Int8Array(len);\n            satInSun = new Int8Array(len);\n            try {\n                postMessage({\n                    extraData: JSON.stringify(extraData),\n                });\n            }\n            catch (e) {\n                if (!process)\n                    throw e;\n            }\n            break;\n        case 'satEdit':\n            satrec = satellite.twoline2satrec(\n            // replace old TLEs\n            m.data.TLE1, m.data.TLE2);\n            satCache[m.data.id] = Object.assign(Object.assign({}, satCache[m.data.id]), satrec);\n            extraData = [];\n            // eslint-disable-next-line no-case-declarations\n            const extra = {\n                lowAlt: null,\n                inclination: null,\n                eccentricity: null,\n                raan: null,\n                argPe: null,\n                meanMotion: null,\n                semiMajorAxis: null,\n                semiMinorAxis: null,\n                apogee: null,\n                perigee: null,\n                period: null,\n                TLE1: null,\n                TLE2: null,\n            };\n            // keplerian elements\n            extra.inclination = satrec.inclo; // rads\n            extra.eccentricity = satrec.ecco;\n            extra.raan = satrec.nodeo; // rads\n            extra.argPe = satrec.argpo; // rads\n            extra.meanMotion = (satrec.no * 60 * 24) / (2 * PI); // convert rads/minute to rev/day\n            // fun other data\n            extra.semiMajorAxis = Math.pow(8681663.653 / extra.meanMotion, 2 / 3);\n            extra.semiMinorAxis = extra.semiMajorAxis * Math.sqrt(1 - Math.pow(extra.eccentricity, 2));\n            extra.apogee = extra.semiMajorAxis * (1 + extra.eccentricity) - RADIUS_OF_EARTH;\n            extra.perigee = extra.semiMajorAxis * (1 - extra.eccentricity) - RADIUS_OF_EARTH;\n            extra.period = 1440.0 / extra.meanMotion;\n            extra.TLE1 = m.data.TLE1;\n            extra.TLE2 = m.data.TLE2;\n            extraData.push(extra);\n            if (process)\n                return;\n            // istanbul ignore next\n            postMessage({\n                extraUpdate: true,\n                extraData: JSON.stringify(extraData),\n                satId: m.data.id,\n            });\n            break;\n        case 'newMissile':\n            satCache[m.data.id] = m.data;\n            break;\n        case 'satelliteSelected':\n            satelliteSelected = m.data.satelliteSelected;\n            if (satelliteSelected[0] === -1) {\n                isResetSatOverfly = true;\n                if (!isResetMarker)\n                    isResetMarker = true;\n            }\n            break;\n        case 'sensor':\n            if (m.data.multiSensor) {\n                isMultiSensor = true;\n                mSensor = m.data.sensor;\n                sensor = m.data.sensor;\n                globalPropagationRateMultiplier = 2;\n                if (!isResetInView)\n                    isResetInView = true;\n            }\n            else if (m.data.sensor) {\n                sensor = m.data.sensor[0];\n                if (m.data.setlatlong) {\n                    if (m.data.resetObserverGd) {\n                        globalPropagationRateMultiplier = 1;\n                        sensor.observerGd = defaultGd;\n                        mSensor = [];\n                        if (!isResetInView)\n                            isResetInView = true;\n                    }\n                    else {\n                        globalPropagationRateMultiplier = 2;\n                        // satellite.js requires this format - DONT use lat,lon,alt\n                        // and we MUST do it (for now) because main thread is in lat,lon,alt\n                        sensor.observerGd = {\n                            longitude: m.data.sensor[0].lon * DEG2RAD,\n                            latitude: m.data.sensor[0].lat * DEG2RAD,\n                            height: parseFloat(m.data.sensor[0].alt),\n                        };\n                        if (!isResetInView)\n                            isResetInView = true;\n                    }\n                }\n                isMultiSensor = false;\n            }\n            break;\n        case 'isShowSatOverfly':\n            selectedSatFOV = m.data.selectedSatFOV ? m.data.selectedSatFOV : selectedSatFOV;\n            if (m.data.isShowSatOverfly === 'enable') {\n                isShowSatOverfly = true;\n            }\n            if (m.data.isShowSatOverfly === 'reset') {\n                isResetSatOverfly = true;\n                isShowSatOverfly = false;\n                if (!isResetMarker)\n                    isResetMarker = true;\n            }\n            break;\n        default:\n            console.warn('Unknown message typ: ' + m.data.typ);\n            if (m.data.isSunlightView) {\n                isSunlightView = m.data.isSunlightView;\n            }\n            if (m.data.isSlowCPUModeEnabled) {\n                globalPropagationRate = 2000;\n            }\n            if (m.data.isLowPerf) {\n                isLowPerf = true;\n            }\n            // //////////////////////////////\n            // SAT OVERFLY AND FOV BUBBLE\n            // /////////////////////////////\n            if (m.data.fieldOfViewSetLength) {\n                fieldOfViewSetLength = m.data.fieldOfViewSetLength;\n            }\n            if (m.data.isShowFOVBubble === 'enable') {\n                isShowFOVBubble = true;\n            }\n            if (m.data.isShowFOVBubble === 'reset') {\n                isResetFOVBubble = true;\n                isShowFOVBubble = false;\n                if (!isResetMarker)\n                    isResetMarker = true;\n            }\n            if (m.data.isShowSurvFence === 'enable') {\n                isShowSurvFence = true;\n                if (!isResetMarker)\n                    isResetMarker = true;\n            }\n            if (m.data.isShowSurvFence === 'disable') {\n                isShowSurvFence = false;\n                if (!isResetMarker)\n                    isResetMarker = true;\n            }\n            break;\n    }\n    // Don't start before getting satData!\n    if (!propagationRunning && m.data.typ === 'satdata') {\n        len = -1; // propagteCruncher needs to start at -1 not 0\n        propagationLoop();\n        propagationRunning = true;\n    }\n};\nexport const propagationLoop = (mockSatCache) => {\n    // Use mock satCache if we have one\n    satCache = mockSatCache || satCache;\n    const { now, j, gmst, gmstNext, isSunExclusion, sunEci } = setupTimeVariables(dynamicOffsetEpoch, staticOffset, propRate, isSunlightView, isMultiSensor, sensor);\n    len = isMarkersNeeded() ? satCache.length - 1 - fieldOfViewSetLength : satCache.length - 1;\n    updateSatCache(now, j, gmst, gmstNext, isSunExclusion, sunEci);\n    if (isResetFOVBubble) {\n        isResetFOVBubble = false;\n        len -= fieldOfViewSetLength;\n    }\n    if (!isInterupted)\n        sendDataToSatSet();\n    isInterupted = false;\n    // The longer the delay the more jitter at higher speeds of propagation\n    setTimeout(() => {\n        propagationLoop();\n    }, (globalPropagationRate * globalPropagationRateMultiplier) / divisor);\n};\nexport const updateSatCache = (now, j, gmst, gmstNext, isSunExclusion, sunEci) => {\n    // TODO: When this was created chrome was faster doing a reverse while loop - that may not be true anymore\n    let i = -1;\n    while (i < len) {\n        if (isInterupted)\n            break;\n        i++; // At the beginning so i starts at 0\n        let isContinue = false;\n        if (satCache[i].satnum) {\n            isContinue = !updateSatellite(i, gmst, sunEci, j, isSunExclusion);\n        }\n        else if (satCache[i].isRadarData) {\n            isContinue = !updateRadarData(i);\n        }\n        else if (satCache[i].static && !satCache[i].marker && satCache[i].type === SpaceObjectType.STAR) {\n            updateStar(i, now);\n            resetVelocity(satVel, i);\n        }\n        else if (satCache[i].static && !satCache[i].marker) {\n            updateLandObject(i, gmst);\n            resetVelocity(satVel, i);\n        }\n        else if (satCache[i].missile) {\n            isContinue = !updateMissile(i, now, gmstNext, gmst);\n        }\n        else if (satCache[i].marker && (isShowFOVBubble || isResetFOVBubble)) {\n            i = updateMarkerFov(i, gmst);\n        }\n        else if (satCache[i].marker && (isShowSatOverfly || isResetSatOverfly)) {\n            i = updateSatOverfly(i, gmst);\n        }\n        if (isContinue)\n            continue;\n        isResetSatOverfly = false;\n        // Markers always come last, if we are at this part of the code\n        // then it is time to reset every non-active marker back to 0,0,0\n        // if this isnt a marker then they must be turned off\n        if (satCache[i].marker) {\n            resetInactiveMarkers(i);\n            break;\n        }\n    }\n};\nexport const updateRadarData = (i) => {\n    if (satCache[i].skip)\n        return false;\n    satCache[i].skip = true;\n    resetPosition(satPos, i);\n    resetVelocity(satVel, i);\n    return true;\n};\nexport const updateSatOverfly = (i, gmst) => {\n    if (isResetSatOverfly && satCache[i].active === true) {\n        // Let the main loop know what i we ended on\n        return i;\n    }\n    let lookangles;\n    let lat, long;\n    let pos;\n    let satSelPosEcf, satSelPos, satSelGeodetic, satHeight, satSelPosEarth, deltaLat, deltaLatInt, deltaLon, deltaLonInt;\n    for (let snum = 0; snum < satelliteSelected.length + 1; snum++) {\n        if (snum === satelliteSelected.length) {\n            sensorMarkerArray.push(i);\n            break;\n        }\n        if (satelliteSelected[snum] !== -1) {\n            if (!isShowSatOverfly)\n                continue;\n            // Find the ECI position of the Selected Satellite\n            satSelPosEcf = {\n                x: satPos[satelliteSelected[snum] * 3],\n                y: satPos[satelliteSelected[snum] * 3 + 1],\n                z: satPos[satelliteSelected[snum] * 3 + 2],\n            };\n            satSelPos = satellite.ecfToEci(satSelPosEcf, gmst);\n            // Find the Lat/Long of the Selected Satellite\n            satSelGeodetic = satellite.eciToGeodetic(satSelPos, gmst); // pv.position is called positionEci originally\n            satHeight = satSelGeodetic.height;\n            satSelPosEarth = createLatLonHei(satSelGeodetic.latitude, satSelGeodetic.longitude, 1);\n            deltaLatInt = 1;\n            if (satHeight < 2500 && selectedSatFOV <= 60)\n                deltaLatInt = 0.5;\n            if (satHeight > 7000 || selectedSatFOV >= 90)\n                deltaLatInt = 2;\n            if (satelliteSelected.length > 1)\n                deltaLatInt = 2;\n            for (deltaLat = -60; deltaLat < 60; deltaLat += deltaLatInt) {\n                lat = Math.max(Math.min(Math.round(satSelGeodetic.latitude * RAD2DEG) + deltaLat, 90), -90) * DEG2RAD;\n                if (lat > 90)\n                    continue;\n                if (satHeight < 2500 && selectedSatFOV <= 60) {\n                    deltaLonInt = 0.5;\n                }\n                else if (satHeight > 7000 || selectedSatFOV >= 90) {\n                    deltaLonInt = 2;\n                }\n                else {\n                    deltaLonInt = 1;\n                }\n                if (satelliteSelected.length > 1)\n                    deltaLonInt = 2;\n                for (deltaLon = 0; deltaLon < 181; deltaLon += deltaLonInt) {\n                    // //////////\n                    // Add Long\n                    // //////////\n                    long = satSelGeodetic.longitude + deltaLon * DEG2RAD;\n                    satSelPosEarth = createLatLonHei(lat, long, 15);\n                    // Find the Az/El of the position on the earth\n                    lookangles = satellite.ecfToLookAngles(satSelPosEarth, satSelPosEcf);\n                    if (isInValidElevation(lookangles, selectedSatFOV)) {\n                        pos = satellite.geodeticToEcf(satSelPosEarth);\n                        if (i === len) {\n                            console.debug('Ran out of Markers');\n                            continue; // Only get so many markers.\n                        }\n                        satCache[i].active = true;\n                        satPos = setPosition(satPos, i, pos);\n                        resetVelocity(satVel, i);\n                        i++;\n                    }\n                    // //////////\n                    // Minus Long\n                    // //////////\n                    if (deltaLon === 0 || deltaLon === 180)\n                        continue; // Don't Draw Two Dots On the Center Line\n                    long = satSelGeodetic.longitude - deltaLon * DEG2RAD;\n                    satSelPosEarth = createLatLonHei(lat, long, 15);\n                    // Find the Az/El of the position on the earth\n                    lookangles = satellite.ecfToLookAngles(satSelPosEarth, satSelPosEcf);\n                    if (isInValidElevation(lookangles, selectedSatFOV)) {\n                        pos = satellite.geodeticToEcf(satSelPosEarth);\n                        if (i === len) {\n                            console.debug('Ran out of Markers');\n                            continue; // Only get so many markers.\n                        }\n                        satCache[i].active = true;\n                        satPos = setPosition(satPos, i, pos);\n                        resetVelocity(satVel, i);\n                        i++;\n                    }\n                    if (lat === 90 || lat === -90)\n                        break; // One Dot for the Poles\n                }\n            }\n        }\n    }\n    // Let the main loop know what i we ended on\n    return i;\n};\nexport const updateStar = (i, now) => {\n    // INFO: 0 Latitude returns upside down results. Using 180 looks right, but more verification needed.\n    // WARNING: 180 and 0 really matter...unclear why\n    let starPosition = SunCalc.getStarPosition(now, 180, 0, satCache[i]);\n    let pos = lookAnglesToEcf(starPosition.azimuth * RAD2DEG, starPosition.altitude * RAD2DEG, STAR_DISTANCE, 0, 0, 0);\n    // Reduce Random Jitter by Requiring New Positions to be Similar to Old\n    // THIS MIGHT BE A HORRIBLE\n    if (satPos[i * 3] == 0 || (satPos[i * 3] - pos.x < 0.1 && satPos[i * 3] - pos.x > -0.1))\n        satPos[i * 3] = pos.x;\n    if (satPos[i * 3 + 1] == 0 || (satPos[i * 3 + 1] - pos.y < 0.1 && satPos[i * 3 + 1] - pos.y > -0.1))\n        satPos[i * 3 + 1] = pos.y;\n    if (satPos[i * 3 + 2] == 0 || (satPos[i * 3 + 2] - pos.z < 0.1 && satPos[i * 3 + 2] - pos.z > -0.1))\n        satPos[i * 3 + 2] = pos.z;\n};\nexport const updateMissile = (i, now, gmstNext, gmst) => {\n    if (!satCache[i].active)\n        return false; // Skip inactive missiles\n    let x, y, z;\n    let cosLat, sinLat, cosLon, sinLon;\n    let curMissivarTime, positionEcf;\n    let tLen, t;\n    tLen = satCache[i].altList.length;\n    for (t = 0; t < tLen; t++) {\n        if (satCache[i].startTime * 1 + t * 1000 >= now.getTime()) {\n            curMissivarTime = t;\n            break;\n        }\n    }\n    satCache[i].lastTime = satCache[i].lastTime >= 0 ? satCache[i].lastTime : 0;\n    cosLat = Math.cos(satCache[i].latList[satCache[i].lastTime + 1] * DEG2RAD);\n    sinLat = Math.sin(satCache[i].latList[satCache[i].lastTime + 1] * DEG2RAD);\n    cosLon = Math.cos(satCache[i].lonList[satCache[i].lastTime + 1] * DEG2RAD + gmstNext);\n    sinLon = Math.sin(satCache[i].lonList[satCache[i].lastTime + 1] * DEG2RAD + gmstNext);\n    if (satCache[i].lastTime == 0) {\n        resetVelocity(satVel, i);\n    }\n    else if (satVel[i * 3] == 0 && satVel[i * 3 + 1] == 0 && satVel[i * 3 + 2] == 0) {\n        satVel[i * 3] = (6371 + satCache[i].altList[satCache[i].lastTime + 1]) * cosLat * cosLon - satPos[i * 3];\n        satVel[i * 3 + 1] = (6371 + satCache[i].altList[satCache[i].lastTime + 1]) * cosLat * sinLon - satPos[i * 3 + 1];\n        satVel[i * 3 + 2] = (6371 + satCache[i].altList[satCache[i].lastTime + 1]) * sinLat - satPos[i * 3 + 2];\n    }\n    else {\n        satVel[i * 3] += (6371 + satCache[i].altList[satCache[i].lastTime + 1]) * cosLat * cosLon - satPos[i * 3];\n        satVel[i * 3 + 1] += (6371 + satCache[i].altList[satCache[i].lastTime + 1]) * cosLat * sinLon - satPos[i * 3 + 1];\n        satVel[i * 3 + 2] += (6371 + satCache[i].altList[satCache[i].lastTime + 1]) * sinLat - satPos[i * 3 + 2];\n        satVel[i * 3] *= 0.5;\n        satVel[i * 3 + 1] *= 0.5;\n        satVel[i * 3 + 2] *= 0.5;\n    }\n    cosLat = Math.cos(satCache[i].latList[curMissivarTime] * DEG2RAD);\n    sinLat = Math.sin(satCache[i].latList[curMissivarTime] * DEG2RAD);\n    cosLon = Math.cos(satCache[i].lonList[curMissivarTime] * DEG2RAD + gmst);\n    sinLon = Math.sin(satCache[i].lonList[curMissivarTime] * DEG2RAD + gmst);\n    satPos[i * 3] = (6371 + satCache[i].altList[curMissivarTime]) * cosLat * cosLon;\n    satPos[i * 3 + 1] = (6371 + satCache[i].altList[curMissivarTime]) * cosLat * sinLon;\n    satPos[i * 3 + 2] = (6371 + satCache[i].altList[curMissivarTime]) * sinLat;\n    satCache[i].lastTime = curMissivarTime;\n    x = satPos[i * 3];\n    y = satPos[i * 3 + 1];\n    z = satPos[i * 3 + 2];\n    positionEcf = satellite.eciToEcf({ x: x, y: y, z: z }, gmst);\n    if (satellite.eciToGeodetic({ x: x, y: y, z: z }, gmst).height <= 150 && satCache[i].missile === false) {\n        console.error(i);\n        satCache[i].skip = true;\n    }\n    satInView[i] = isInFov(satellite.ecfToLookAngles(sensor.observerGd, positionEcf), sensor);\n    return true;\n};\nexport const updateLandObject = (i, gmst) => {\n    const cosLat = Math.cos(satCache[i].lat * DEG2RAD);\n    const sinLat = Math.sin(satCache[i].lat * DEG2RAD);\n    const cosLon = Math.cos(satCache[i].lon * DEG2RAD + gmst);\n    const sinLon = Math.sin(satCache[i].lon * DEG2RAD + gmst);\n    satPos[i * 3] = (RADIUS_OF_EARTH + GROUND_BUFFER_DISTANCE + satCache[i].alt) * cosLat * cosLon; // 6371 is radius of earth\n    satPos[i * 3 + 1] = (RADIUS_OF_EARTH + GROUND_BUFFER_DISTANCE + satCache[i].alt) * cosLat * sinLon;\n    satPos[i * 3 + 2] = (RADIUS_OF_EARTH + GROUND_BUFFER_DISTANCE + satCache[i].alt) * sinLat;\n};\nexport const updateSatellite = (i, gmst, sunEci, j, isSunExclusion) => {\n    let pv;\n    let semiDiamEarth, semiDiamSun, theta;\n    let positionEcf, lookangles;\n    // Skip reentries\n    if (satCache[i].skip)\n        return false;\n    const m = (j - satCache[i].jdsatepoch) * 1440.0; // 1440 = minutes_per_day\n    pv = satellite.sgp4(satCache[i], m);\n    try {\n        satPos[i * 3] = pv.position.x;\n        satPos[i * 3 + 1] = pv.position.y;\n        satPos[i * 3 + 2] = pv.position.z;\n        satVel[i * 3] = pv.velocity.x;\n        satVel[i * 3 + 1] = pv.velocity.y;\n        satVel[i * 3 + 2] = pv.velocity.z;\n        // Make sure that objects with an imprecise orbit or an old elset\n        // are not failing to propagate\n        if (satCache[i].isimp || m / 1440 > 30) {\n            const a = 6378.137;\n            const b = 6356.7523142;\n            const R = Math.sqrt(pv.position.x * pv.position.x + pv.position.y * pv.position.y);\n            const f = (a - b) / a;\n            const e2 = 2 * f - f * f;\n            let lon = Math.atan2(pv.position.y, pv.position.x) - gmst;\n            while (lon < -PI) {\n                lon += TAU;\n            }\n            while (lon > PI) {\n                lon -= TAU;\n            }\n            const kmax = 20;\n            let k = 0;\n            let lat = Math.atan2(pv.position.z, Math.sqrt(pv.position.x * pv.position.x + pv.position.y * pv.position.y));\n            let C;\n            while (k < kmax) {\n                C = 1 / Math.sqrt(1 - e2 * (Math.sin(lat) * Math.sin(lat)));\n                lat = Math.atan2(pv.position.z + a * C * e2 * Math.sin(lat), R);\n                k += 1;\n            }\n            const alt = R / Math.cos(lat) - a * C;\n            if (alt > satCache[i].apogee + 1000) {\n                throw new Error('Impossible orbit');\n            }\n        }\n        // Skip Calculating Lookangles if No Sensor is Selected\n        if (sensor.observerGd !== defaultGd && !isMultiSensor) {\n            lookangles = satellite.ecfToLookAngles(sensor.observerGd, satellite.eciToEcf(pv.position, gmst));\n        }\n    }\n    catch (e) {\n        // This is probably a reentry and should be skipped from now on.\n        satCache[i].skip = true;\n        satPos[i * 3] = 0;\n        satPos[i * 3 + 1] = 0;\n        satPos[i * 3 + 2] = 0;\n        satVel[i * 3] = 0;\n        satVel[i * 3 + 1] = 0;\n        satVel[i * 3 + 2] = 0;\n        positionEcf = 0;\n        lookangles = 0;\n    }\n    satInView[i] = 0; // 0 = FALSE - Default in case no sensor selected\n    satInSun[i] = 2; // Default in case\n    if (isSunlightView) {\n        semiDiamEarth = Math.asin(RADIUS_OF_EARTH / Math.sqrt(Math.pow(-satPos[i * 3], 2) + Math.pow(-satPos[i * 3 + 1], 2) + Math.pow(-satPos[i * 3 + 2], 2))) * RAD2DEG;\n        semiDiamSun =\n            Math.asin(RADIUS_OF_SUN / Math.sqrt(Math.pow(-satPos[i * 3] + sunEci.x, 2) + Math.pow(-satPos[i * 3 + 1] + sunEci.y, 2) + Math.pow(-satPos[i * 3 + 2] + sunEci.z, 2))) *\n                RAD2DEG;\n        // Angle between earth and sun\n        theta =\n            Math.acos(numeric.dot([-satPos[i * 3], -satPos[i * 3 + 1], -satPos[i * 3 + 2]], [-satPos[i * 3] + sunEci.x, -satPos[i * 3 + 1] + sunEci.y, -satPos[i * 3 + 2] + sunEci.z]) /\n                (Math.sqrt(Math.pow(-satPos[i * 3], 2) + Math.pow(-satPos[i * 3 + 1], 2) + Math.pow(-satPos[i * 3 + 2], 2)) *\n                    Math.sqrt(Math.pow(-satPos[i * 3] + sunEci.x, 2) + Math.pow(-satPos[i * 3 + 1] + sunEci.y, 2) + Math.pow(-satPos[i * 3 + 2] + sunEci.z, 2)))) * RAD2DEG;\n        if (semiDiamEarth > semiDiamSun && theta < semiDiamEarth - semiDiamSun) {\n            satInSun[i] = 0; // Umbral\n        }\n        if (Math.abs(semiDiamEarth - semiDiamSun) < theta && theta < semiDiamEarth + semiDiamSun) {\n            satInSun[i] = 1; // Penumbral\n        }\n        if (semiDiamSun > semiDiamEarth) {\n            satInSun[i] = 1; // Penumbral\n        }\n        if (theta < semiDiamSun - semiDiamEarth) {\n            satInSun[i] = 1; // Penumbral\n        }\n    }\n    if (sensor.observerGd !== defaultGd && !isSunExclusion) {\n        if (isMultiSensor) {\n            for (let s = 0; s < mSensor.length; s++) {\n                // Skip satellites in the sun if you are an optical sensor\n                if (!(sensor.type == SpaceObjectType.OPTICAL && satInSun[i] == 0)) {\n                    if (satInView[i])\n                        break;\n                    sensor = mSensor[s];\n                    // satellite.js requires this format - DONT use lon,lat,alt\n                    sensor.observerGd = {\n                        longitude: sensor.lon * DEG2RAD,\n                        latitude: sensor.lat * DEG2RAD,\n                        height: sensor.alt * 1, // Convert from string\n                    };\n                    try {\n                        positionEcf = satellite.eciToEcf(pv.position, gmst); // pv.position is called positionEci originally\n                        lookangles = satellite.ecfToLookAngles(sensor.observerGd, positionEcf);\n                    }\n                    catch (e) {\n                        continue;\n                    }\n                    satInView[i] = isInFov(lookangles, sensor);\n                }\n            }\n        }\n        else {\n            if (!(sensor.type === SpaceObjectType.OPTICAL && satInSun[i] == 0)) {\n                satInView[i] = isInFov(lookangles, sensor);\n            }\n        }\n    }\n    return true;\n};\nexport const isMarkersNeeded = () => (!isResetSatOverfly && !isShowSatOverfly && !isResetFOVBubble && !isShowFOVBubble) || isLowPerf;\nexport const resetInactiveMarkers = (i) => {\n    for (; i < len; i++) {\n        if (!satCache[i].active) {\n            len -= fieldOfViewSetLength;\n            break;\n        }\n        resetPosition(satPos, i);\n        resetVelocity(satVel, i);\n        satCache[i].active = false;\n    }\n};\nexport const updateMarkerFov = (i, gmst) => {\n    let az, el, rng;\n    let pos;\n    let q, q2;\n    if (!isMultiSensor && sensor.observerGd !== defaultGd) {\n        mSensor[0] = sensor;\n        mSensor.length = 1;\n    }\n    sensorMarkerArray = [];\n    for (let s = 0; s < mSensor.length + 1; s++) {\n        sensorMarkerArray.push(i);\n        // We intentionally go past the last sensor so we can record the last marker's id\n        if (s == mSensor.length)\n            break;\n        sensor = mSensor[s];\n        // satellite.js requires this format - DONT use lon,lat,alt\n        sensor.observerGd = createLatLonHei(sensor.lat * DEG2RAD, sensor.lon * DEG2RAD, sensor.alt);\n        resetPosition(satPos, i);\n        resetVelocity(satVel, i);\n        if (isResetFOVBubble)\n            continue;\n        if (!isShowFOVBubble)\n            continue;\n        if (sensor.observerGd === defaultGd)\n            continue;\n        // Ignore Optical and Mechanical Sensors When showing Many\n        if (isIgnoreNonRadar && isSensorDeepSpace(mSensor, sensor))\n            continue;\n        q = Math.abs(sensor.obsmaxaz - sensor.obsminaz) < 30 ? 0.5 : 3;\n        q2 = sensor.obsmaxrange - sensor.obsminrange < 720 ? 125 : 30;\n        // Don't show anything but the floor if in surveillance only mode\n        // Unless it is a volume search radar\n        if (!isShowSurvFence) {\n            // Only on non-360 FOV\n            if (sensor.obsminaz !== 0 && sensor.obsmaxaz !== 360) {\n                // //////////////////////////////////\n                // Min AZ FOV\n                // //////////////////////////////////\n                for (rng = Math.max(sensor.obsminrange, 100); rng < Math.min(sensor.obsmaxrange, 60000); rng += Math.min(sensor.obsmaxrange, 60000) / q2) {\n                    az = sensor.obsminaz;\n                    for (el = sensor.obsminel; el < sensor.obsmaxel; el += q) {\n                        pos = satellite.ecfToEci(lookAnglesToEcf(az, el, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                        try {\n                            satCache[i].active = true;\n                            satPos = setPosition(satPos, i, pos);\n                            resetVelocity(satVel, i);\n                            i++;\n                        }\n                        catch (e) {\n                            console.log(e);\n                        }\n                    }\n                }\n                // //////////////////////////////////\n                // Max AZ FOV\n                // //////////////////////////////////\n                for (rng = Math.max(sensor.obsminrange, 100); rng < Math.min(sensor.obsmaxrange, 60000); rng += Math.min(sensor.obsmaxrange, 60000) / q2) {\n                    az = sensor.obsmaxaz;\n                    for (el = sensor.obsminel; el < sensor.obsmaxel; el += q) {\n                        pos = satellite.ecfToEci(lookAnglesToEcf(az, el, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                        try {\n                            satCache[i].active = true;\n                        }\n                        catch (e) {\n                            console.log(e);\n                        }\n                        satPos = setPosition(satPos, i, pos);\n                        resetVelocity(satVel, i);\n                        i++;\n                    }\n                }\n                if (typeof sensor.obsminaz2 != 'undefined') {\n                    ////////////////////////////////\n                    // Cobra DANE Types\n                    ////////////////////////////////\n                    // //////////////////////////////////\n                    // Min AZ 2 FOV\n                    // //////////////////////////////////\n                    for (rng = Math.max(sensor.obsminrange, 100); rng < Math.min(sensor.obsmaxrange, 60000); rng += Math.min(sensor.obsmaxrange, 60000) / q2) {\n                        az = sensor.obsminaz2;\n                        for (el = sensor.obsminel2; el < sensor.obsmaxel2; el += q) {\n                            pos = satellite.ecfToEci(lookAnglesToEcf(az, el, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                            satCache[i].active = true;\n                            satPos = setPosition(satPos, i, pos);\n                            resetVelocity(satVel, i);\n                            i++;\n                        }\n                    }\n                    // //////////////////////////////////\n                    // Max AZ 2 FOV\n                    // //////////////////////////////////\n                    for (rng = Math.max(sensor.obsminrange, 100); rng < Math.min(sensor.obsmaxrange, 60000); rng += Math.min(sensor.obsmaxrange, 60000) / q2) {\n                        az = sensor.obsmaxaz2;\n                        for (el = sensor.obsminel2; el < sensor.obsmaxel2; el += q) {\n                            pos = satellite.ecfToEci(lookAnglesToEcf(az, el, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                            satCache[i].active = true;\n                            satPos = setPosition(satPos, i, pos);\n                            resetVelocity(satVel, i);\n                            i++;\n                        }\n                    }\n                }\n                // Only on 360 FOV\n            }\n            else {\n                for (rng = Math.max(sensor.obsminrange, 100); rng < Math.min(sensor.obsmaxrange, 60000); rng += Math.min(sensor.obsmaxrange, 60000) / q2) {\n                    el = sensor.obsmaxel;\n                    for (az = sensor.obsminaz; az < sensor.obsmaxaz; az += q) {\n                        pos = satellite.ecfToEci(lookAnglesToEcf(az, el, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                        satCache[i].active = true;\n                        satPos = setPosition(satPos, i, pos);\n                        resetVelocity(satVel, i);\n                        i++;\n                    }\n                }\n            }\n        }\n        // //////////////////////////////////\n        // Top of FOV for Small FOV\n        // //////////////////////////////////\n        if (sensor.obsmaxel - sensor.obsminel < 20) {\n            for (rng = Math.max(sensor.obsminrange, 100); rng < Math.min(sensor.obsmaxrange, 60000); rng += Math.min(sensor.obsmaxrange, 60000) / q2) {\n                for (az = 0; az < Math.max(360, sensor.obsmaxaz); az += q) {\n                    if (sensor.obsminaz > sensor.obsmaxaz) {\n                        if (az >= sensor.obsminaz || az <= sensor.obsmaxaz) {\n                            // Intentional\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                    else {\n                        if (az >= sensor.obsminaz && az <= sensor.obsmaxaz) {\n                            // Intentional\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                    pos = satellite.ecfToEci(lookAnglesToEcf(az, sensor.obsmaxel, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                    if (i === len) {\n                        console.debug('No More Markers');\n                        break;\n                    }\n                    satCache[i].active = true;\n                    satPos = setPosition(satPos, i, pos);\n                    resetVelocity(satVel, i);\n                    i++;\n                }\n            }\n        }\n        if (typeof sensor.obsminaz2 != 'undefined') {\n            ////////////////////////////////\n            // Cobra DANE Types\n            ////////////////////////////////\n            // //////////////////////////////////\n            // Floor of FOV\n            // //////////////////////////////////\n            q = 2;\n            for (rng = Math.max(sensor.obsminrange2, 100); rng < Math.min(sensor.obsmaxrange2, 60000); rng += Math.min(sensor.obsmaxrange2, 60000) / q2) {\n                for (az = 0; az < 360; az += 1 * q) {\n                    if (sensor.obsminaz2 > sensor.obsmaxaz2) {\n                        if (az >= sensor.obsminaz2 || az <= sensor.obsmaxaz2) {\n                            // Intentional\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                    else {\n                        if (az >= sensor.obsminaz2 && az <= sensor.obsmaxaz2) {\n                            // Intentional\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                    pos = satellite.ecfToEci(lookAnglesToEcf(az, sensor.obsminel2, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                    if (i === len) {\n                        console.debug('No More Markers');\n                        break;\n                    }\n                    satCache[i].active = true;\n                    satPos = setPosition(satPos, i, pos);\n                    resetVelocity(satVel, i);\n                    i++;\n                }\n            }\n        }\n        // Don't show anything but the floor if in surveillance only mode\n        // Unless it is a volume search radar\n        if (!isShowSurvFence) {\n            // //////////////////////////////////\n            // Outside Edge of FOV\n            // //////////////////////////////////\n            rng = Math.min(sensor.obsmaxrange, 60000);\n            for (az = 0; az < Math.max(360, sensor.obsmaxaz); az += q) {\n                if (sensor.obsminaz > sensor.obsmaxaz) {\n                    if (az >= sensor.obsminaz || az <= sensor.obsmaxaz) {\n                        // Intentional\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                else {\n                    if (az >= sensor.obsminaz && az <= sensor.obsmaxaz) {\n                        // Intentional\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                for (el = sensor.obsminel; el < sensor.obsmaxel; el += q) {\n                    pos = satellite.ecfToEci(lookAnglesToEcf(az, el, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                    if (i === len) {\n                        console.debug('No More Markers');\n                        break;\n                    }\n                    satCache[i].active = true;\n                    satPos = setPosition(satPos, i, pos);\n                    resetVelocity(satVel, i);\n                    i++;\n                }\n            }\n            if (typeof sensor.obsminaz2 != 'undefined') {\n                ////////////////////////////////\n                // Cobra DANE Types\n                ////////////////////////////////\n                // //////////////////////////////////\n                // Outside of FOV\n                // //////////////////////////////////\n                rng = Math.min(sensor.obsmaxrange2, 60000);\n                for (az = 0; az < Math.max(360, sensor.obsmaxaz2); az += q) {\n                    if (sensor.obsminaz2 > sensor.obsmaxaz2) {\n                        if (az >= sensor.obsminaz2 || az <= sensor.obsmaxaz2) {\n                            // Intentional\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                    else {\n                        if (az >= sensor.obsminaz2 && az <= sensor.obsmaxaz2) {\n                            // Intentional\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                    for (el = sensor.obsminel2; el < sensor.obsmaxel2; el += q) {\n                        pos = satellite.ecfToEci(lookAnglesToEcf(az, el, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                        if (i === len) {\n                            console.debug('No More Markers');\n                            break;\n                        }\n                        satCache[i].active = true;\n                        satPos = setPosition(satPos, i, pos);\n                        resetVelocity(satVel, i);\n                        i++;\n                    }\n                }\n            }\n        }\n        // //////////////////////////////////\n        // Floor of FOV\n        // //////////////////////////////////\n        q = 0.25;\n        for (rng = sensor.obsmaxrange; rng === sensor.obsmaxrange; rng += 1) {\n            for (az = 0; az < Math.max(360, sensor.obsmaxaz); az += q) {\n                if (sensor.obsminaz > sensor.obsmaxaz) {\n                    if (az >= sensor.obsminaz || az <= sensor.obsmaxaz) {\n                        // Intentional\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                else {\n                    if (az >= sensor.obsminaz && az <= sensor.obsmaxaz) {\n                        // Intentional\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                pos = satellite.ecfToEci(lookAnglesToEcf(az, sensor.obsminel, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                if (i === len) {\n                    console.debug('No More Markers');\n                    break;\n                }\n                satCache[i].active = true;\n                satPos = setPosition(satPos, i, pos);\n                resetVelocity(satVel, i);\n                i++;\n            }\n        }\n        for (rng = sensor.obsminrange; rng === sensor.obsminrange; rng += 1) {\n            for (az = 0; az < Math.max(360, sensor.obsmaxaz); az += q) {\n                if (sensor.obsminaz > sensor.obsmaxaz) {\n                    if (az >= sensor.obsminaz || az <= sensor.obsmaxaz) {\n                        // Intentional\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                else {\n                    if (az >= sensor.obsminaz && az <= sensor.obsmaxaz) {\n                        // Intentional\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                pos = satellite.ecfToEci(lookAnglesToEcf(az, sensor.obsminel, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                if (i === len) {\n                    console.debug('No More Markers');\n                    break;\n                }\n                satCache[i].active = true;\n                satPos = setPosition(satPos, i, pos);\n                resetVelocity(satVel, i);\n                i++;\n            }\n        }\n        if (sensor.obsmaxrange - sensor.obsminrange < 720) {\n            for (rng = Math.max(sensor.obsminrange, 100); rng < Math.min(sensor.obsmaxrange, 60000); rng += Math.min(sensor.obsmaxrange, 60000) / q2) {\n                for (az = 0; az < Math.max(360, sensor.obsmaxaz); az += q) {\n                    if (sensor.obsminaz > sensor.obsmaxaz) {\n                        if (az >= sensor.obsminaz || az <= sensor.obsmaxaz) {\n                            // Intentional\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                    else {\n                        if (az >= sensor.obsminaz && az <= sensor.obsmaxaz) {\n                            // Intentional\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                    pos = satellite.ecfToEci(lookAnglesToEcf(az, sensor.obsminel, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                    if (i === len) {\n                        console.debug('No More Markers');\n                        break;\n                    }\n                    satCache[i].active = true;\n                    satPos = setPosition(satPos, i, pos);\n                    resetVelocity(satVel, i);\n                    i++;\n                }\n            }\n        }\n        if (sensor.obsminaz !== sensor.obsmaxaz && sensor.obsminaz !== sensor.obsmaxaz - 360) {\n            for (az = sensor.obsmaxaz; az === sensor.obsmaxaz; az += 1) {\n                for (rng = sensor.obsminrange; rng < sensor.obsmaxrange; rng += q) {\n                    pos = satellite.ecfToEci(lookAnglesToEcf(az, sensor.obsminel, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                    if (i === len) {\n                        console.debug('No More Markers');\n                        break;\n                    }\n                    satCache[i].active = true;\n                    satPos = setPosition(satPos, i, pos);\n                    resetVelocity(satVel, i);\n                    i++;\n                }\n            }\n            for (az = sensor.obsminaz; az === sensor.obsminaz; az += 1) {\n                for (rng = sensor.obsminrange; rng < sensor.obsmaxrange; rng += q) {\n                    pos = satellite.ecfToEci(lookAnglesToEcf(az, sensor.obsminel, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                    if (i === len) {\n                        console.debug('No More Markers');\n                        break;\n                    }\n                    satCache[i].active = true;\n                    satPos = setPosition(satPos, i, pos);\n                    resetVelocity(satVel, i);\n                    i++;\n                }\n            }\n        }\n    }\n    // Let the main loop know what i we ended on\n    return i;\n};\nexport const sendDataToSatSet = () => {\n    let postMessageArray = {\n        satPos: satPos,\n        satVel: satVel,\n    };\n    // Add In View Data if Sensor Selected\n    if (sensor.observerGd !== defaultGd) {\n        postMessageArray.satInView = satInView;\n    }\n    else {\n        postMessageArray.satInView = EMPTY_INT8_ARRAY;\n    }\n    // Add Sun View Data if Enabled\n    if (isSunlightView) {\n        postMessageArray.satInSun = satInSun;\n    }\n    else {\n        postMessageArray.satInSun = EMPTY_INT8_ARRAY;\n    }\n    // If there is at least one sensor showing markers\n    if (sensorMarkerArray.length >= 1) {\n        postMessageArray.sensorMarkerArray = sensorMarkerArray;\n    }\n    else {\n        postMessageArray.sensorMarkerArray = [];\n    }\n    try {\n        postMessage(postMessageArray);\n    }\n    catch (e) {\n        if (!process)\n            throw e;\n    }\n};\n"],"names":["pad","val","len","String","length","formats","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","i18n","dayNames","monthNames","token","timezone","timezoneClip","dateFormat","date","mask","utc","arguments","Object","prototype","toString","call","test","undefined","Date","Number","isNaN","SyntaxError","slice","_","d","D","m","y","H","M","s","L","o","getTimezoneOffset","flags","dd","ddd","dddd","mm","mmm","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","Math","round","t","tt","T","TT","Z","match","pop","replace","floor","abs","S","$0","DEG2RAD","TAU","SunCalc","MILLISECONDS_IN_A_DAY","J1970","J2000","J0","lw","phi","times","toJulian","valueOf","fromJulian","j","toDays","e","rightAscension","b","atan2","sin","cos","tan","declination","asin","azimuth","dec","altitude","siderealTime","astroRefraction","solarMeanAnomaly","eclipticLongitude","C","P","sunCoords","ra","julianCycle","approxTransit","Ht","n","solarTransitJ","ds","hourAngle","acos","getSetJ","w","a","moonCoords","F","dt","dist","hoursLater","getStarPosition","lat","lng","c","PI","vmag","name","getSunPosition","addTime","angle","riseName","setName","push","getTimes","Jnoon","i","time","Jset","Jrise","result","solarNoon","nadir","getMoonPosition","pa","distance","parallacticAngle","getMoonIllumination","sdist","inc","fraction","phase","getMoonTimes","inUTC","setUTCHours","setHours","hc","h0","h1","h2","rise","set","xe","ye","roots","x1","x2","dx","sqrt"],"sourceRoot":""}