{"version":3,"file":"positionCruncher.js","mappings":"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tB,CAAd;AACV,QAAIrd,GAAJ,EAASyU,MAAM,CAACzU,GAAP,GAAa2Y,OAAO,CAACsC,UAAR,CAAmB5rB,CAAnB,EAAsB2Q,GAAtB,CAAb;AAET,QAAI,CAACqd,IAAD,IAAS,CAACrd,GAAd,EAAmByU,MAAM,CAACpJ,EAAE,GAAG,CAAL,GAAS,UAAT,GAAsB,YAAvB,CAAN,GAA6C,IAA7C;AAEnB,WAAOoJ,MAAP;AACD;AAhQoB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD,uEAAuE;;AAEvE;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,qBAAqB;;AAErB,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;;AAExsCAAsC;;AAEtC;AACA;AACA;AACA,wBAAwB;;AAExB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8HAA8H;;AAE9H,yCAAyC;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,MAAM;AACN;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA,yCAAyC;;AAEzC;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,4DAA4D;;AAE5D;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA,mGAAmG;;AAEnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wFAAwF;;AAExF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB,kCAAkC;AAClC;;AAEA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC;;AAEvC;AACA;;AAEA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC;;AAErC;AACA;AACA,MAAM;AACN;AACA;;AAEA,yCAAyC;;AAEzC;AACA;AACA;AACA,wCAAwC;;AAExoCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kKAAkK;;AAElK;AACA;AACA;AACA;AACA;AACA,sDAAsD;;AAEtD,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA,kCAAkC;;AAElC,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC,SAAS;;AAElD;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sEAAsE,aAAa;AACnF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;;AAEA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;;AAEA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;;AAEA;AACA;AACA;AACA;AACA,oEAAoE;AACpnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEqP;;;;;;;;;;;;;;;AC/+F9O;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BpC;AACA;AACA;AACA;AACA;AACP;AACA;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,kCAAkC;AAClC,8BAA8B;AAC9B,8BAA8B;AAC9B,mCAAmC;;;;;;;;;;;;;;;ACrB1C;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjigBAAigB,QAAQ;AACzgB;AACA;AACA;AACA;AACA,iBAAiB;AACjiBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;;;;;;;;;;;;;;;;;;;;AC30B2C;AACA;AACjD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,qCAAqC,gEAAoB;AACzD;AACA;AACA;AACA;AACA;AACO;AACP,oBAAoB,oEAAU;AAC9B;AACA;AACA;AACA;AACO;AACP,oCAAoC;AACpC;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC/C0C;AACe;AACD;AACZ;AACG;AAC/C;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uDAAuB;AACvC;AACA;AACA;AACA;AACA;AACA,kBAAkB,mDAAO;AACzB,kBAAkB,mDAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP,kBAAkB,8DAAW,KAAK;AAClC,gBAAgB,sEAAmB;AACnC,iBAAiB,sEAAmB,8BAA8B,mDAAO,gCAAgC,mDAAO;AAChH;AACA,aAAa,8EAA2B;AACxC,gBAAgB,8EAA2B;AAC3C,6BAA6B,mDAAO;AACpC,+BAA+B,mDAAO;AACtC,qCAAqC,mDAAO;AAC5C;AACA,gBAAgB,8DAAW,CAAC,uEAAoB;AAChD,gBAAgB,sEAAmB,aAAa,8CAAE;AAClD;AACA;AACA,mDAAmD;AACnD;AACA,mBAAmB,kDAAkB;AACrC,iCAAiC,wDAAS,qBAAqB,yEAAuB,oBAAoB,0EAAwB;AAClI;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACiD;AACP;AACe;AACiG;AACxG;AACD;AACqC;AACtF;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC,iCAAiC;AACjC,6BAA6B;AAC7B,8BAA8B;AAC9B;AACA,kCAAkC;AAClC,yCAAyC;AACzC,gCAAgC;AAChC,gCAAgC;AAChC,iBAAiB;AACjB;AACA;AACA,kBAAkB;AAClB,oCAAoC;AACpC;AACA,yBAAyB;AACzB,6BAA6B;AAC7B,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mDAAO;AAC7D,qDAAqD,mDAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,wDAAwB;AACrD;AACA;AACA;AACA,sDAAsD;AACtD;AACA,+CAA+C;AAC/C,gDAAgD;AAChD,+DAA+D,+CAAG,EAAE;AACpE;AACA;AACA,oFAAoF,2DAAe;AACnG;AACA,qFAAqF,2DAAe;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,qBAAqB,wDAAwB;AAC7C;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,uCAAuC;AACvC,wCAAwC;AACxC,4DAA4D,8CAAE,GAAG;AACjE;AACA;AACA;AACA,4EAA4E,2DAAe;AAC3F,6EAA6E,2DAAe;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+DAAQ;AACxB,cAAc,6DAAI;AAClB;AACA,mCAAmC,gEAAoB;AACvD,iBAAiB,gDAAgB;AACjC;AACA,mBAAmB;AACnB;AACA,mCAAmC,wEAAiB;AACpD;AACA,eAAe,6DAAI;AACnB;AACA,mCAAmC,gEAAoB;AACvD,qBAAqB,gDAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,iBAAiB,8CAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8CAAE;AACpC,+BAA+B,+CAAG;AAClC;AACA,iCAAiC,8CAAE;AACnC,+BAA+B,+CAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kDAAkB,qBAAqB;AAC7E,qCAAqC,yDAAyB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,6BAA6B;AAC7B;AACA,0CAA0C,2DAAe,iHAAiH,mDAAO;AACjL,wCAAwC,yDAAa,kJAAkJ,mDAAO;AAC9M;AACA;AACA,8BAA8B,8DAAW;AACzC;AACA,4KAA4K,mDAAO;AACnL;AACA,qCAAqC;AACrC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,qCAAqC;AACrC;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA,6CAA6C,yEAAuB;AACpE;AACA;AACA;AACA;AACA;AACA,wDAAwD,mDAAO;AAC/D,uDAAuD,mDAAO;AAC9D;AACA;AACA;AACA,8CAA8C,kDAAkB,qBAAqB;AACrF,6CAA6C,yDAAyB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mDAAO;AAC9C,yCAAyC,mDAAO;AAChD;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,yEAAuB;AACjE,mCAAmC,mDAAO;AAC1C,qCAAqC,mDAAO;AAC5C;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sEAAoB;AACzD;AACA;AACA,+BAA+B,2EAAuB;AACtD,+BAA+B,sEAAe,wBAAwB,mDAAO,0BAA0B,mDAAO,EAAE,yDAAa;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,mDAAO;AAC3D,oDAAoD,mDAAO;AAC3D,oDAAoD,mDAAO;AAC3D,oDAAoD,mDAAO;AAC3D,iCAAiC,2DAAe,GAAG,kEAAsB,uCAAuC;AAChH,qCAAqC,2DAAe,GAAG,kEAAsB;AAC7E,qCAAqC,2DAAe,GAAG,kEAAsB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,mDAAO;AACrF,8EAA8E,mDAAO;AACrF,8EAA8E,mDAAO;AACrF,8EAA8E,mDAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,mDAAO;AAC5E,qEAAqE,mDAAO;AAC5E,qEAAqE,mDAAO;AAC5E,qEAAqE,mDAAO;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kDAAkB,GAAG,kBAAkB;AACjE,gBAAgB,uDAAuB,GAAG,kBAAkB;AAC5D;AACA;AACA;AACA,yBAAyB,yDAAyB;AAClD,2CAA2C,mDAAO;AAClD,+CAA+C,mDAAO;AACtD;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,mDAAO;AACnD,2CAA2C,mDAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,yEAAuB;AACzF;AACA,kEAAkE,0EAAwB;AAC1F;AACA,kEAAkE,4EAA0B;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,2CAA2C;AACrH;AACA,2DAA2D,sBAAsB;AACjF,0CAA0C,kDAAkB,CAAC,sEAAe;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,2CAA2C;AACrH;AACA,2DAA2D,sBAAsB;AACjF,0CAA0C,kDAAkB,CAAC,sEAAe;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,2CAA2C;AACzH;AACA,gEAAgE,uBAAuB;AACvF,8CAA8C,kDAAkB,CAAC,sEAAe;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,2CAA2C;AACzH;AACA,gEAAgE,uBAAuB;AACvF,8CAA8C,kDAAkB,CAAC,sEAAe;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,2CAA2C;AACrH;AACA,2DAA2D,sBAAsB;AACjF,0CAA0C,kDAAkB,CAAC,sEAAe;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,2CAA2C;AACjH,yCAAyC,qCAAqC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kDAAkB,CAAC,sEAAe;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,4CAA4C;AACnH,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kDAAkB,CAAC,sEAAe;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qCAAqC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,sBAAsB;AAC7E,sCAAsC,kDAAkB,CAAC,sEAAe;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,sCAAsC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,uBAAuB;AACnF,0CAA0C,kDAAkB,CAAC,sEAAe;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,2BAA2B;AAC9E,qCAAqC,qCAAqC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kDAAkB,CAAC,sEAAe;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,2BAA2B;AAC9E,qCAAqC,qCAAqC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kDAAkB,CAAC,sEAAe;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,2CAA2C;AACjH,yCAAyC,qCAAqC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kDAAkB,CAAC,sEAAe;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,uBAAuB;AAC1E,2DAA2D,0BAA0B;AACrF,sCAAsC,kDAAkB,CAAC,sEAAe;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,uBAAuB;AAC1E,2DAA2D,0BAA0B;AACrF,sCAAsC,kDAAkB,CAAC,sEAAe;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qCAAqC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kDAAkB;AACtD;AACA,yCAAyC,uDAAuB,mBAAmB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,eAAe;AAC5D,yFAAyF,mDAAO,0BAA0B,mDAAO;AACjI;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA,6EAA6E,mDAAO;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yDAAyB;AACtE;AACA;AACA;AACA,gDAAgD,mDAAO,yBAAyB,mDAAO;AACvF,qDAAqD,uDAAuB;AAC5E;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,6EAA6E,mDAAO;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yDAAyB;AACtE;AACA;AACA;AACA,gDAAgD,mDAAO,yBAAyB,mDAAO;AACvF,qDAAqD,uDAAuB;AAC5E;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UC7vCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://keeptrack.space/./src/js/lib/external/dateFormat.js","webpack://keeptrack.space/./src/js/lib/external/numeric.js","webpack://keeptrack.space/./src/js/lib/suncalc.js","webpack://keeptrack.space/./node_modules/satellite.js/dist/satellite.es.js","webpack://keeptrack.space/./src/js/api/SpaceObjectType.ts","webpack://keeptrack.space/./src/js/lib/constants.ts","webpack://keeptrack.space/./src/js/lib/external/meuusjs.ts","webpack://keeptrack.space/./src/js/timeManager/transforms.ts","webpack://keeptrack.space/./src/js/webworker/positionCalculations.ts","webpack://keeptrack.space/./src/js/webworker/positionCruncher.ts","webpack://keeptrack.space/webpack/bootstrap","webpack://keeptrack.space/webpack/runtime/define property getters","webpack://keeptrack.space/webpack/runtime/hasOwnProperty shorthand","webpack://keeptrack.space/webpack/runtime/make namespace object","webpack://keeptrack.space/webpack/before-startup","webpack://keeptrack.space/webpack/startup","webpack://keeptrack.space/webpack/after-startup"],"sourcesContent":["/* */\n\n/*! Date Format 1.2.4\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by:\n * Scott Trenda <scott.trenda.net>\n * Kris Kowal <cixar.com/~kris.kowal/>\n * Theodore Kruczek\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to formats.masks.default.\n */\n\nvar pad = (val, len) => {\n  val = String(val);\n  len = len || 2;\n  while (val.length < len) val = '0' + val;\n  return val;\n};\n\nvar formats = {\n  masks: {\n    // Common Formats\n    default: 'ddd mmm dd yyyy HH:MM:ss',\n    shortDate: 'm/d/yy',\n    mediumDate: 'mmm d, yyyy',\n    longDate: 'mmmm d, yyyy',\n    fullDate: 'dddd, mmmm d, yyyy',\n    shortTime: 'h:MM TT',\n    mediumTime: 'h:MM:ss TT',\n    longTime: 'h:MM:ss TT Z',\n    isoDate: 'yyyy-mm-dd',\n    isoTime: 'HH:MM:ss',\n    isoDateTime: \"yyyy-mm-dd' 'HH:MM:ss\",\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\n  },\n  i18n: {\n    // Internationalization strings\n    dayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    monthNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  },\n};\n\n// eslint-disable-next-line prefer-named-capture-group\nvar token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/gu;\nvar timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/gu;\nvar timezoneClip = /[^-+\\dA-Z]/gu;\nvar dateFormat = function (date, mask, utc) {\n  // You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\n  if (arguments.length === 1 && Object.prototype.toString.call(date) === '[object String]' && !/\\d/u.test(date)) {\n    mask = date;\n    // eslint-disable-next-line no-undefined\n    date = undefined;\n  }\n\n  // Passing date through Date applies Date.parse, if necessary\n  date = date ? new Date(date) : new Date();\n  if (Number.isNaN(date)) throw SyntaxError(`invalid date - ${date}`);\n\n  mask = String(formats.masks[mask] || mask || formats.masks['default']);\n\n  // Allow setting the utc argument via the mask\n  if (mask.slice(0, 4) === 'UTC:') {\n    mask = mask.slice(4);\n    utc = true;\n  }\n\n  var _ = utc ? 'getUTC' : 'get';\n  var d = date[_ + 'Date']();\n  var D = date[_ + 'Day']();\n  var m = date[_ + 'Month']();\n  var y = date[_ + 'FullYear']();\n  var H = date[_ + 'Hours']();\n  var M = date[_ + 'Minutes']();\n  var s = date[_ + 'Seconds']();\n  var L = date[_ + 'Milliseconds']();\n  var o = utc ? 0 : date.getTimezoneOffset();\n  var flags = {\n    d: d,\n    dd: pad(d),\n    ddd: formats.i18n.dayNames[D],\n    dddd: formats.i18n.dayNames[D + 7],\n    m: m + 1,\n    mm: pad(m + 1),\n    mmm: formats.i18n.monthNames[m],\n    mmmm: formats.i18n.monthNames[m + 12],\n    yy: String(y).slice(2),\n    yyyy: y,\n    h: H % 12 || 12,\n    hh: pad(H % 12 || 12),\n    H: H,\n    HH: pad(H),\n    M: M,\n    MM: pad(M),\n    s: s,\n    ss: pad(s),\n    l: pad(L, 3),\n    L: pad(L > 99 ? Math.round(L / 10) : L),\n    t: H < 12 ? 'a' : 'p',\n    tt: H < 12 ? 'am' : 'pm',\n    T: H < 12 ? 'A' : 'P',\n    TT: H < 12 ? 'AM' : 'PM',\n    Z: utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n    o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4),\n    S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (((d % 100) - (d % 10) !== 10) * d) % 10],\n  };\n\n  return mask.replace(token, function ($0) {\n    return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\n  });\n};\n\nexport { dateFormat };\n","const _numeric = {};\n\n_numeric.version = '1.2.7';\n\n// 1. Utility functions\n_numeric.bench = function bench(f, interval) {\n  var t1, t2, n, i;\n  if (typeof interval === 'undefined') {\n    interval = 15;\n  }\n  n = 0.5;\n  t1 = new Date();\n  while (1) {\n    n *= 2;\n    for (i = n; i > 3; i -= 4) {\n      f();\n      f();\n      f();\n      f();\n    }\n    while (i > 0) {\n      f();\n      i--;\n    }\n    t2 = new Date();\n    if (t2 - t1 > interval) break;\n  }\n  for (i = n; i > 3; i -= 4) {\n    f();\n    f();\n    f();\n    f();\n  }\n  while (i > 0) {\n    f();\n    i--;\n  }\n  t2 = new Date();\n  return (1000 * (3 * n - 1)) / (t2 - t1);\n};\n\n_numeric._myIndexOf = function _myIndexOf(w) {\n  var n = this.length,\n    k;\n  for (k = 0; k < n; ++k) if (this[k] === w) return k;\n  return -1;\n};\n_numeric.myIndexOf = Array.prototype.indexOf ? Array.prototype.indexOf : _numeric._myIndexOf;\n\n_numeric.Function = Function;\n_numeric.precision = 4;\n_numeric.largeArray = 50;\n\n_numeric.prettyPrint = function prettyPrint(x) {\n  function fmtnum(x) {\n    if (x === 0) {\n      return '0';\n    }\n    if (isNaN(x)) {\n      return 'NaN';\n    }\n    if (x < 0) {\n      return '-' + fmtnum(-x);\n    }\n    if (isFinite(x)) {\n      var scale = Math.floor(Math.log(x) / Math.log(10));\n      var normalized = x / Math.pow(10, scale);\n      var basic = normalized.toPrecision(_numeric.precision);\n      if (parseFloat(basic) === 10) {\n        scale++;\n        normalized = 1;\n        basic = normalized.toPrecision(_numeric.precision);\n      }\n      return parseFloat(basic).toString() + 'e' + scale.toString();\n    }\n    return 'Infinity';\n  }\n  var ret = [];\n  function foo(x) {\n    var k;\n    if (typeof x === 'undefined') {\n      ret.push(Array(_numeric.precision + 8).join(' '));\n      return false;\n    }\n    if (typeof x === 'string') {\n      ret.push('\"' + x + '\"');\n      return false;\n    }\n    if (typeof x === 'boolean') {\n      ret.push(x.toString());\n      return false;\n    }\n    if (typeof x === 'number') {\n      var a = fmtnum(x);\n      var b = x.toPrecision(_numeric.precision);\n      var c = parseFloat(x.toString()).toString();\n      var d = [a, b, c, parseFloat(b).toString(), parseFloat(c).toString()];\n      for (k = 1; k < d.length; k++) {\n        if (d[k].length < a.length) a = d[k];\n      }\n      ret.push(Array(_numeric.precision + 8 - a.length).join(' ') + a);\n      return false;\n    }\n    if (x === null) {\n      ret.push('null');\n      return false;\n    }\n    if (typeof x === 'function') {\n      ret.push(x.toString());\n      var flag = false;\n      for (k in x) {\n        if (x.hasOwnProperty(k)) {\n          if (flag) ret.push(',\\n');\n          else ret.push('\\n{');\n          flag = true;\n          ret.push(k);\n          ret.push(': \\n');\n          foo(x[k]);\n        }\n      }\n      if (flag) ret.push('}\\n');\n      return true;\n    }\n    if (x instanceof Array) {\n      if (x.length > _numeric.largeArray) {\n        ret.push('...Large Array...');\n        return true;\n      }\n      var flag = false;\n      ret.push('[');\n      for (k = 0; k < x.length; k++) {\n        if (k > 0) {\n          ret.push(',');\n          if (flag) ret.push('\\n ');\n        }\n        flag = foo(x[k]);\n      }\n      ret.push(']');\n      return true;\n    }\n    ret.push('{');\n    var flag = false;\n    for (k in x) {\n      if (x.hasOwnProperty(k)) {\n        if (flag) ret.push(',\\n');\n        flag = true;\n        ret.push(k);\n        ret.push(': \\n');\n        foo(x[k]);\n      }\n    }\n    ret.push('}');\n    return true;\n  }\n  foo(x);\n  return ret.join('');\n};\n\n_numeric.parseDate = function parseDate(d) {\n  function foo(d) {\n    if (typeof d === 'string') {\n      return Date.parse(d.replace(/-/g, '/'));\n    }\n    if (!(d instanceof Array)) {\n      throw new Error('parseDate: parameter must be arrays of strings');\n    }\n    var ret = [],\n      k;\n    for (k = 0; k < d.length; k++) {\n      ret[k] = foo(d[k]);\n    }\n    return ret;\n  }\n  return foo(d);\n};\n\n_numeric.parseFloat = function parseFloat_(d) {\n  function foo(d) {\n    if (typeof d === 'string') {\n      return parseFloat(d);\n    }\n    if (!(d instanceof Array)) {\n      throw new Error('parseFloat: parameter must be arrays of strings');\n    }\n    var ret = [],\n      k;\n    for (k = 0; k < d.length; k++) {\n      ret[k] = foo(d[k]);\n    }\n    return ret;\n  }\n  return foo(d);\n};\n\n_numeric.parseCSV = function parseCSV(t) {\n  var foo = t.split('\\n');\n  var j, k;\n  var ret = [];\n  var pat = /(([^'\",]*)|('[^']*')|(\"[^\"]*\")),/g;\n  var patnum = /^\\s*(([+-]?[0-9]+(\\.[0-9]*)?(e[+-]?[0-9]+)?)|([+-]?[0-9]*(\\.[0-9]+)?(e[+-]?[0-9]+)?))\\s*$/;\n  var stripper = function (n) {\n    return n.substr(0, n.length - 1);\n  };\n  var count = 0;\n  for (k = 0; k < foo.length; k++) {\n    var bar = (foo[k] + ',').match(pat),\n      baz;\n    if (bar.length > 0) {\n      ret[count] = [];\n      for (j = 0; j < bar.length; j++) {\n        baz = stripper(bar[j]);\n        if (patnum.test(baz)) {\n          ret[count][j] = parseFloat(baz);\n        } else ret[count][j] = baz;\n      }\n      count++;\n    }\n  }\n  return ret;\n};\n\n_numeric.toCSV = function toCSV(A) {\n  var s = _numeric.dim(A);\n  var i, j, m, n, row, ret;\n  m = s[0];\n  n = s[1];\n  ret = [];\n  for (i = 0; i < m; i++) {\n    row = [];\n    for (j = 0; j < m; j++) {\n      row[j] = A[i][j].toString();\n    }\n    ret[i] = row.join(', ');\n  }\n  return ret.join('\\n') + '\\n';\n};\n\n_numeric.getURL = function getURL(url) {\n  var client = new XMLHttpRequest();\n  client.open('GET', url, false);\n  client.send();\n  return client;\n};\n\n_numeric.imageURL = function imageURL(img) {\n  function base64(A) {\n    var n = A.length,\n      i,\n      x,\n      y,\n      z,\n      p,\n      q,\n      r,\n      s;\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var ret = '';\n    for (i = 0; i < n; i += 3) {\n      x = A[i];\n      y = A[i + 1];\n      z = A[i + 2];\n      p = x >> 2;\n      q = ((x & 3) << 4) + (y >> 4);\n      r = ((y & 15) << 2) + (z >> 6);\n      s = z & 63;\n      if (i + 1 >= n) {\n        r = s = 64;\n      } else if (i + 2 >= n) {\n        s = 64;\n      }\n      ret += key.charAt(p) + key.charAt(q) + key.charAt(r) + key.charAt(s);\n    }\n    return ret;\n  }\n  function crc32Array(a, from, to) {\n    if (typeof from === 'undefined') {\n      from = 0;\n    }\n    if (typeof to === 'undefined') {\n      to = a.length;\n    }\n    var table = [\n      0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de,\n      0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n      0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n      0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n      0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2,\n      0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n      0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8,\n      0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1, 0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n      0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n      0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n      0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c,\n      0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n      0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n    ];\n\n    var crc = -1,\n      y = 0,\n      n = a.length,\n      i;\n\n    for (i = from; i < to; i++) {\n      y = (crc ^ a[i]) & 0xff;\n      crc = (crc >>> 8) ^ table[y];\n    }\n\n    return crc ^ -1;\n  }\n\n  var h = img[0].length,\n    w = img[0][0].length,\n    s1,\n    s2,\n    next,\n    k,\n    length,\n    a,\n    b,\n    i,\n    j,\n    adler32,\n    crc32;\n  var stream = [\n    137,\n    80,\n    78,\n    71,\n    13,\n    10,\n    26,\n    10, //  0: PNG signature\n    0,\n    0,\n    0,\n    13, //  8: IHDR Chunk length\n    73,\n    72,\n    68,\n    82, // 12: \"IHDR\"\n    (w >> 24) & 255,\n    (w >> 16) & 255,\n    (w >> 8) & 255,\n    w & 255, // 16: Width\n    (h >> 24) & 255,\n    (h >> 16) & 255,\n    (h >> 8) & 255,\n    h & 255, // 20: Height\n    8, // 24: bit depth\n    2, // 25: RGB\n    0, // 26: deflate\n    0, // 27: no filter\n    0, // 28: no interlace\n    -1,\n    -2,\n    -3,\n    -4, // 29: CRC\n    -5,\n    -6,\n    -7,\n    -8, // 33: IDAT Chunk length\n    73,\n    68,\n    65,\n    84, // 37: \"IDAT\"\n    // RFC 1950 header starts here\n    8, // 41: RFC1950 CMF\n    29, // 42: RFC1950 FLG\n  ];\n  crc32 = crc32Array(stream, 12, 29);\n  stream[29] = (crc32 >> 24) & 255;\n  stream[30] = (crc32 >> 16) & 255;\n  stream[31] = (crc32 >> 8) & 255;\n  stream[32] = crc32 & 255;\n  s1 = 1;\n  s2 = 0;\n  for (i = 0; i < h; i++) {\n    if (i < h - 1) {\n      stream.push(0);\n    } else {\n      stream.push(1);\n    }\n    a = (3 * w + 1 + (i === 0)) & 255;\n    b = ((3 * w + 1 + (i === 0)) >> 8) & 255;\n    stream.push(a);\n    stream.push(b);\n    stream.push(~a & 255);\n    stream.push(~b & 255);\n    if (i === 0) stream.push(0);\n    for (j = 0; j < w; j++) {\n      for (k = 0; k < 3; k++) {\n        a = img[k][i][j];\n        if (a > 255) a = 255;\n        else if (a < 0) a = 0;\n        else a = Math.round(a);\n        s1 = (s1 + a) % 65521;\n        s2 = (s2 + s1) % 65521;\n        stream.push(a);\n      }\n    }\n    stream.push(0);\n  }\n  adler32 = (s2 << 16) + s1;\n  stream.push((adler32 >> 24) & 255);\n  stream.push((adler32 >> 16) & 255);\n  stream.push((adler32 >> 8) & 255);\n  stream.push(adler32 & 255);\n  length = stream.length - 41;\n  stream[33] = (length >> 24) & 255;\n  stream[34] = (length >> 16) & 255;\n  stream[35] = (length >> 8) & 255;\n  stream[36] = length & 255;\n  crc32 = crc32Array(stream, 37);\n  stream.push((crc32 >> 24) & 255);\n  stream.push((crc32 >> 16) & 255);\n  stream.push((crc32 >> 8) & 255);\n  stream.push(crc32 & 255);\n  stream.push(0);\n  stream.push(0);\n  stream.push(0);\n  stream.push(0);\n  //    a = stream.length;\n  stream.push(73); // I\n  stream.push(69); // E\n  stream.push(78); // N\n  stream.push(68); // D\n  stream.push(174); // CRC1\n  stream.push(66); // CRC2\n  stream.push(96); // CRC3\n  stream.push(130); // CRC4\n  return 'data:image/png;base64,' + base64(stream);\n};\n\n// 2. Linear algebra with Arrays.\n_numeric._dim = function _dim(x) {\n  var ret = [];\n  while (typeof x === 'object') {\n    ret.push(x.length);\n    x = x[0];\n  }\n  return ret;\n};\n\n_numeric.dim = function dim(x) {\n  var y, z;\n  if (typeof x === 'object') {\n    y = x[0];\n    if (typeof y === 'object') {\n      z = y[0];\n      if (typeof z === 'object') {\n        return _numeric._dim(x);\n      }\n      return [x.length, y.length];\n    }\n    return [x.length];\n  }\n  return [];\n};\n\n_numeric.mapreduce = function mapreduce(body, init) {\n  return Function(\n    'x',\n    'accum',\n    '_s',\n    '_k',\n    'if(typeof accum === \"undefined\") accum = ' +\n      init +\n      ';\\n' +\n      'if(typeof x === \"number\") { var xi = x; ' +\n      body +\n      '; return accum; }\\n' +\n      'if(typeof _s === \"undefined\") _s = _numeric.dim(x);\\n' +\n      'if(typeof _k === \"undefined\") _k = 0;\\n' +\n      'var _n = _s[_k];\\n' +\n      'var i,xi;\\n' +\n      'if(_k < _s.length-1) {\\n' +\n      '    for(i=_n-1;i>=0;i--) {\\n' +\n      '        accum = arguments.callee(x[i],accum,_s,_k+1);\\n' +\n      '    }' +\n      '    return accum;\\n' +\n      '}\\n' +\n      'for(i=_n-1;i>=1;i-=2) { \\n' +\n      '    xi = x[i];\\n' +\n      '    ' +\n      body +\n      ';\\n' +\n      '    xi = x[i-1];\\n' +\n      '    ' +\n      body +\n      ';\\n' +\n      '}\\n' +\n      'if(i === 0) {\\n' +\n      '    xi = x[i];\\n' +\n      '    ' +\n      body +\n      '\\n' +\n      '}\\n' +\n      'return accum;'\n  );\n};\n_numeric.mapreduce2 = function mapreduce2(body, setup) {\n  return Function('x', 'var n = x.length;\\n' + 'var i,xi;\\n' + setup + ';\\n' + 'for(i=n-1;i!==-1;--i) { \\n' + '    xi = x[i];\\n' + '    ' + body + ';\\n' + '}\\n' + 'return accum;');\n};\n\n_numeric.same = function same(x, y) {\n  var i, n;\n  if (!(x instanceof Array) || !(y instanceof Array)) {\n    return false;\n  }\n  n = x.length;\n  if (n !== y.length) {\n    return false;\n  }\n  for (i = 0; i < n; i++) {\n    if (x[i] === y[i]) {\n      continue;\n    }\n    if (typeof x[i] === 'object') {\n      if (!same(x[i], y[i])) return false;\n    } else {\n      return false;\n    }\n  }\n  return true;\n};\n\n_numeric.rep = function rep(s, v, k) {\n  if (typeof k === 'undefined') {\n    k = 0;\n  }\n  var n = s[k],\n    ret = Array(n),\n    i;\n  if (k === s.length - 1) {\n    for (i = n - 2; i >= 0; i -= 2) {\n      ret[i + 1] = v;\n      ret[i] = v;\n    }\n    if (i === -1) {\n      ret[0] = v;\n    }\n    return ret;\n  }\n  for (i = n - 1; i >= 0; i--) {\n    ret[i] = _numeric.rep(s, v, k + 1);\n  }\n  return ret;\n};\n\n_numeric.dotMMsmall = function dotMMsmall(x, y) {\n  var i, j, k, p, q, r, ret, foo, bar, woo, i0, k0, p0, r0;\n  p = x.length;\n  q = y.length;\n  r = y[0].length;\n  ret = Array(p);\n  for (i = p - 1; i >= 0; i--) {\n    foo = Array(r);\n    bar = x[i];\n    for (k = r - 1; k >= 0; k--) {\n      woo = bar[q - 1] * y[q - 1][k];\n      for (j = q - 2; j >= 1; j -= 2) {\n        i0 = j - 1;\n        woo += bar[j] * y[j][k] + bar[i0] * y[i0][k];\n      }\n      if (j === 0) {\n        woo += bar[0] * y[0][k];\n      }\n      foo[k] = woo;\n    }\n    ret[i] = foo;\n  }\n  return ret;\n};\n_numeric._getCol = function _getCol(A, j, x) {\n  var n = A.length,\n    i;\n  for (i = n - 1; i > 0; --i) {\n    x[i] = A[i][j];\n    --i;\n    x[i] = A[i][j];\n  }\n  if (i === 0) x[0] = A[0][j];\n};\n_numeric.dotMMbig = function dotMMbig(x, y) {\n  var gc = _numeric._getCol,\n    p = y.length,\n    v = Array(p);\n  var m = x.length,\n    n = y[0].length,\n    A = new Array(m),\n    xj;\n  var VV = _numeric.dotVV;\n  var i, j, k, z;\n  --p;\n  --m;\n  for (i = m; i !== -1; --i) A[i] = Array(n);\n  --n;\n  for (i = n; i !== -1; --i) {\n    gc(y, i, v);\n    for (j = m; j !== -1; --j) {\n      z = 0;\n      xj = x[j];\n      A[j][i] = VV(xj, v);\n    }\n  }\n  return A;\n};\n\n_numeric.dotMV = function dotMV(x, y) {\n  var p = x.length,\n    q = y.length,\n    i;\n  var ret = Array(p),\n    dotVV = _numeric.dotVV;\n  for (i = p - 1; i >= 0; i--) {\n    ret[i] = dotVV(x[i], y);\n  }\n  return ret;\n};\n\n_numeric.dotVM = function dotVM(x, y) {\n  var i, j, k, p, q, r, ret, foo, bar, woo, i0, k0, p0, r0, s1, s2, s3, baz, accum;\n  p = x.length;\n  q = y[0].length;\n  ret = Array(q);\n  for (k = q - 1; k >= 0; k--) {\n    woo = x[p - 1] * y[p - 1][k];\n    for (j = p - 2; j >= 1; j -= 2) {\n      i0 = j - 1;\n      woo += x[j] * y[j][k] + x[i0] * y[i0][k];\n    }\n    if (j === 0) {\n      woo += x[0] * y[0][k];\n    }\n    ret[k] = woo;\n  }\n  return ret;\n};\n\n_numeric.dotVV = function dotVV(x, y) {\n  var i,\n    n = x.length,\n    i1,\n    ret = x[n - 1] * y[n - 1];\n  for (i = n - 2; i >= 1; i -= 2) {\n    i1 = i - 1;\n    ret += x[i] * y[i] + x[i1] * y[i1];\n  }\n  if (i === 0) {\n    ret += x[0] * y[0];\n  }\n  return ret;\n};\n\n_numeric.dot = function dot(x, y) {\n  var d = _numeric.dim;\n  switch (d(x).length * 1000 + d(y).length) {\n    case 2002:\n      if (y.length < 10) return _numeric.dotMMsmall(x, y);\n      else return _numeric.dotMMbig(x, y);\n    case 2001:\n      return _numeric.dotMV(x, y);\n    case 1002:\n      return _numeric.dotVM(x, y);\n    case 1001:\n      return _numeric.dotVV(x, y);\n    case 1000:\n      return _numeric.mulVS(x, y);\n    case 1:\n      return _numeric.mulSV(x, y);\n    case 0:\n      return x * y;\n    default:\n      throw new Error('_numeric.dot only works on vectors and matrices');\n  }\n};\n\n_numeric.diag = function diag(d) {\n  var i,\n    i1,\n    j,\n    n = d.length,\n    A = Array(n),\n    Ai;\n  for (i = n - 1; i >= 0; i--) {\n    Ai = Array(n);\n    i1 = i + 2;\n    for (j = n - 1; j >= i1; j -= 2) {\n      Ai[j] = 0;\n      Ai[j - 1] = 0;\n    }\n    if (j > i) {\n      Ai[j] = 0;\n    }\n    Ai[i] = d[i];\n    for (j = i - 1; j >= 1; j -= 2) {\n      Ai[j] = 0;\n      Ai[j - 1] = 0;\n    }\n    if (j === 0) {\n      Ai[0] = 0;\n    }\n    A[i] = Ai;\n  }\n  return A;\n};\n_numeric.getDiag = function (A) {\n  var n = Math.min(A.length, A[0].length),\n    i,\n    ret = Array(n);\n  for (i = n - 1; i >= 1; --i) {\n    ret[i] = A[i][i];\n    --i;\n    ret[i] = A[i][i];\n  }\n  if (i === 0) {\n    ret[0] = A[0][0];\n  }\n  return ret;\n};\n\n_numeric.identity = function identity(n) {\n  return _numeric.diag(_numeric.rep([n], 1));\n};\n_numeric.pointwise = function pointwise(params, body, setup) {\n  if (typeof setup === 'undefined') {\n    setup = '';\n  }\n  var fun = [];\n  var k;\n  var avec = /\\[i\\]$/,\n    p,\n    thevec = '';\n  var haveret = false;\n  for (k = 0; k < params.length; k++) {\n    if (avec.test(params[k])) {\n      p = params[k].substring(0, params[k].length - 3);\n      thevec = p;\n    } else {\n      p = params[k];\n    }\n    if (p === 'ret') haveret = true;\n    fun.push(p);\n  }\n  fun[params.length] = '_s';\n  fun[params.length + 1] = '_k';\n  fun[params.length + 2] =\n    'if(typeof _s === \"undefined\") _s = _numeric.dim(' +\n    thevec +\n    ');\\n' +\n    'if(typeof _k === \"undefined\") _k = 0;\\n' +\n    'var _n = _s[_k];\\n' +\n    'var i' +\n    (haveret ? '' : ', ret = Array(_n)') +\n    ';\\n' +\n    'if(_k < _s.length-1) {\\n' +\n    '    for(i=_n-1;i>=0;i--) ret[i] = arguments.callee(' +\n    params.join(',') +\n    ',_s,_k+1);\\n' +\n    '    return ret;\\n' +\n    '}\\n' +\n    setup +\n    '\\n' +\n    'for(i=_n-1;i!==-1;--i) {\\n' +\n    '    ' +\n    body +\n    '\\n' +\n    '}\\n' +\n    'return ret;';\n  return Function.apply(null, fun);\n};\n_numeric.pointwise2 = function pointwise2(params, body, setup) {\n  if (typeof setup === 'undefined') {\n    setup = '';\n  }\n  var fun = [];\n  var k;\n  var avec = /\\[i\\]$/,\n    p,\n    thevec = '';\n  var haveret = false;\n  for (k = 0; k < params.length; k++) {\n    if (avec.test(params[k])) {\n      p = params[k].substring(0, params[k].length - 3);\n      thevec = p;\n    } else {\n      p = params[k];\n    }\n    if (p === 'ret') haveret = true;\n    fun.push(p);\n  }\n  fun[params.length] = 'var _n = ' + thevec + '.length;\\n' + 'var i' + (haveret ? '' : ', ret = Array(_n)') + ';\\n' + setup + '\\n' + 'for(i=_n-1;i!==-1;--i) {\\n' + body + '\\n' + '}\\n' + 'return ret;';\n  return Function.apply(null, fun);\n};\n_numeric._biforeach = function _biforeach(x, y, s, k, f) {\n  if (k === s.length - 1) {\n    f(x, y);\n    return;\n  }\n  var i,\n    n = s[k];\n  for (i = n - 1; i >= 0; i--) {\n    _biforeach(typeof x === 'object' ? x[i] : x, typeof y === 'object' ? y[i] : y, s, k + 1, f);\n  }\n};\n_numeric._biforeach2 = function _biforeach2(x, y, s, k, f) {\n  if (k === s.length - 1) {\n    return f(x, y);\n  }\n  var i,\n    n = s[k],\n    ret = Array(n);\n  for (i = n - 1; i >= 0; --i) {\n    ret[i] = _biforeach2(typeof x === 'object' ? x[i] : x, typeof y === 'object' ? y[i] : y, s, k + 1, f);\n  }\n  return ret;\n};\n_numeric._foreach = function _foreach(x, s, k, f) {\n  if (k === s.length - 1) {\n    f(x);\n    return;\n  }\n  var i,\n    n = s[k];\n  for (i = n - 1; i >= 0; i--) {\n    _foreach(x[i], s, k + 1, f);\n  }\n};\n_numeric._foreach2 = function _foreach2(x, s, k, f) {\n  if (k === s.length - 1) {\n    return f(x);\n  }\n  var i,\n    n = s[k],\n    ret = Array(n);\n  for (i = n - 1; i >= 0; i--) {\n    ret[i] = _foreach2(x[i], s, k + 1, f);\n  }\n  return ret;\n};\n\n/*_numeric.anyV = _numeric.mapreduce('if(xi) return true;','false');\n_numeric.allV = _numeric.mapreduce('if(!xi) return false;','true');\n_numeric.any = function(x) { if(typeof x.length === \"undefined\") return x; return _numeric.anyV(x); }\n_numeric.all = function(x) { if(typeof x.length === \"undefined\") return x; return _numeric.allV(x); }*/\n\n_numeric.ops2 = {\n  add: '+',\n  sub: '-',\n  mul: '*',\n  div: '/',\n  mod: '%',\n  and: '&&',\n  or: '||',\n  eq: '===',\n  neq: '!==',\n  lt: '<',\n  gt: '>',\n  leq: '<=',\n  geq: '>=',\n  band: '&',\n  bor: '|',\n  bxor: '^',\n  lshift: '<<',\n  rshift: '>>',\n  rrshift: '>>>',\n};\n_numeric.opseq = {\n  addeq: '+=',\n  subeq: '-=',\n  muleq: '*=',\n  diveq: '/=',\n  modeq: '%=',\n  lshifteq: '<<=',\n  rshifteq: '>>=',\n  rrshifteq: '>>>=',\n  bandeq: '&=',\n  boreq: '|=',\n  bxoreq: '^=',\n};\n_numeric.mathfuns = ['abs', 'acos', 'asin', 'atan', 'ceil', 'cos', 'exp', 'floor', 'log', 'round', 'sin', 'sqrt', 'tan', 'isNaN', 'isFinite'];\n_numeric.mathfuns2 = ['atan2', 'pow', 'max', 'min'];\n_numeric.ops1 = {\n  neg: '-',\n  not: '!',\n  bnot: '~',\n  clone: '',\n};\n_numeric.mapreducers = {\n  any: ['if(xi) return true;', 'var accum = false;'],\n  all: ['if(!xi) return false;', 'var accum = true;'],\n  sum: ['accum += xi;', 'var accum = 0;'],\n  prod: ['accum *= xi;', 'var accum = 1;'],\n  norm2Squared: ['accum += xi*xi;', 'var accum = 0;'],\n  norminf: ['accum = max(accum,abs(xi));', 'var accum = 0, max = Math.max, abs = Math.abs;'],\n  norm1: ['accum += abs(xi)', 'var accum = 0, abs = Math.abs;'],\n  sup: ['accum = max(accum,xi);', 'var accum = -Infinity, max = Math.max;'],\n  inf: ['accum = min(accum,xi);', 'var accum = Infinity, min = Math.min;'],\n};\n\n(function () {\n  var i, o;\n  for (i = 0; i < _numeric.mathfuns2.length; ++i) {\n    o = _numeric.mathfuns2[i];\n    _numeric.ops2[o] = o;\n  }\n  for (i in _numeric.ops2) {\n    if (_numeric.ops2.hasOwnProperty(i)) {\n      o = _numeric.ops2[i];\n      var code,\n        codeeq,\n        setup = '';\n      if (_numeric.myIndexOf.call(_numeric.mathfuns2, i) !== -1) {\n        setup = 'var ' + o + ' = Math.' + o + ';\\n';\n        code = function (r, x, y) {\n          return r + ' = ' + o + '(' + x + ',' + y + ')';\n        };\n        codeeq = function (x, y) {\n          return x + ' = ' + o + '(' + x + ',' + y + ')';\n        };\n      } else {\n        code = function (r, x, y) {\n          return r + ' = ' + x + ' ' + o + ' ' + y;\n        };\n        if (_numeric.opseq.hasOwnProperty(i + 'eq')) {\n          codeeq = function (x, y) {\n            return x + ' ' + o + '= ' + y;\n          };\n        } else {\n          codeeq = function (x, y) {\n            return x + ' = ' + x + ' ' + o + ' ' + y;\n          };\n        }\n      }\n      _numeric[i + 'VV'] = _numeric.pointwise2(['x[i]', 'y[i]'], code('ret[i]', 'x[i]', 'y[i]'), setup);\n      _numeric[i + 'SV'] = _numeric.pointwise2(['x', 'y[i]'], code('ret[i]', 'x', 'y[i]'), setup);\n      _numeric[i + 'VS'] = _numeric.pointwise2(['x[i]', 'y'], code('ret[i]', 'x[i]', 'y'), setup);\n      _numeric[i] = Function(\n        'var n = arguments.length, i, x = arguments[0], y;\\n' +\n          'var VV = _numeric.' +\n          i +\n          'VV, VS = _numeric.' +\n          i +\n          'VS, SV = _numeric.' +\n          i +\n          'SV;\\n' +\n          'var dim = _numeric.dim;\\n' +\n          'for(i=1;i!==n;++i) { \\n' +\n          '  y = arguments[i];\\n' +\n          '  if(typeof x === \"object\") {\\n' +\n          '      if(typeof y === \"object\") x = _numeric._biforeach2(x,y,dim(x),0,VV);\\n' +\n          '      else x = _numeric._biforeach2(x,y,dim(x),0,VS);\\n' +\n          '  } else if(typeof y === \"object\") x = _numeric._biforeach2(x,y,dim(y),0,SV);\\n' +\n          '  else ' +\n          codeeq('x', 'y') +\n          '\\n' +\n          '}\\nreturn x;\\n'\n      );\n      _numeric[o] = _numeric[i];\n      _numeric[i + 'eqV'] = _numeric.pointwise2(['ret[i]', 'x[i]'], codeeq('ret[i]', 'x[i]'), setup);\n      _numeric[i + 'eqS'] = _numeric.pointwise2(['ret[i]', 'x'], codeeq('ret[i]', 'x'), setup);\n      _numeric[i + 'eq'] = Function(\n        'var n = arguments.length, i, x = arguments[0], y;\\n' +\n          'var V = _numeric.' +\n          i +\n          'eqV, S = _numeric.' +\n          i +\n          'eqS\\n' +\n          'var s = _numeric.dim(x);\\n' +\n          'for(i=1;i!==n;++i) { \\n' +\n          '  y = arguments[i];\\n' +\n          '  if(typeof y === \"object\") _numeric._biforeach(x,y,s,0,V);\\n' +\n          '  else _numeric._biforeach(x,y,s,0,S);\\n' +\n          '}\\nreturn x;\\n'\n      );\n    }\n  }\n  for (i = 0; i < _numeric.mathfuns2.length; ++i) {\n    o = _numeric.mathfuns2[i];\n    delete _numeric.ops2[o];\n  }\n  for (i = 0; i < _numeric.mathfuns.length; ++i) {\n    o = _numeric.mathfuns[i];\n    _numeric.ops1[o] = o;\n  }\n  for (i in _numeric.ops1) {\n    if (_numeric.ops1.hasOwnProperty(i)) {\n      setup = '';\n      o = _numeric.ops1[i];\n      if (_numeric.myIndexOf.call(_numeric.mathfuns, i) !== -1) {\n        if (Math.hasOwnProperty(o)) setup = 'var ' + o + ' = Math.' + o + ';\\n';\n      }\n      _numeric[i + 'eqV'] = _numeric.pointwise2(['ret[i]'], 'ret[i] = ' + o + '(ret[i]);', setup);\n      _numeric[i + 'eq'] = Function('x', 'if(typeof x !== \"object\") return ' + o + 'x\\n' + 'var i;\\n' + 'var V = _numeric.' + i + 'eqV;\\n' + 'var s = _numeric.dim(x);\\n' + '_numeric._foreach(x,s,0,V);\\n' + 'return x;\\n');\n      _numeric[i + 'V'] = _numeric.pointwise2(['x[i]'], 'ret[i] = ' + o + '(x[i]);', setup);\n      _numeric[i] = Function('x', 'if(typeof x !== \"object\") return ' + o + '(x)\\n' + 'var i;\\n' + 'var V = _numeric.' + i + 'V;\\n' + 'var s = _numeric.dim(x);\\n' + 'return _numeric._foreach2(x,s,0,V);\\n');\n    }\n  }\n  for (i = 0; i < _numeric.mathfuns.length; ++i) {\n    o = _numeric.mathfuns[i];\n    delete _numeric.ops1[o];\n  }\n  for (i in _numeric.mapreducers) {\n    if (_numeric.mapreducers.hasOwnProperty(i)) {\n      o = _numeric.mapreducers[i];\n      _numeric[i + 'V'] = _numeric.mapreduce2(o[0], o[1]);\n      _numeric[i] = Function(\n        'x',\n        's',\n        'k',\n        o[1] +\n          'if(typeof x !== \"object\") {' +\n          '    xi = x;\\n' +\n          o[0] +\n          ';\\n' +\n          '    return accum;\\n' +\n          '}' +\n          'if(typeof s === \"undefined\") s = _numeric.dim(x);\\n' +\n          'if(typeof k === \"undefined\") k = 0;\\n' +\n          'if(k === s.length-1) return _numeric.' +\n          i +\n          'V(x);\\n' +\n          'var xi;\\n' +\n          'var n = x.length, i;\\n' +\n          'for(i=n-1;i!==-1;--i) {\\n' +\n          '   xi = arguments.callee(x[i]);\\n' +\n          o[0] +\n          ';\\n' +\n          '}\\n' +\n          'return accum;\\n'\n      );\n    }\n  }\n})();\n\n_numeric.truncVV = _numeric.pointwise(['x[i]', 'y[i]'], 'ret[i] = round(x[i]/y[i])*y[i];', 'var round = Math.round;');\n_numeric.truncVS = _numeric.pointwise(['x[i]', 'y'], 'ret[i] = round(x[i]/y)*y;', 'var round = Math.round;');\n_numeric.truncSV = _numeric.pointwise(['x', 'y[i]'], 'ret[i] = round(x/y[i])*y[i];', 'var round = Math.round;');\n_numeric.trunc = function trunc(x, y) {\n  if (typeof x === 'object') {\n    if (typeof y === 'object') return _numeric.truncVV(x, y);\n    return _numeric.truncVS(x, y);\n  }\n  if (typeof y === 'object') return _numeric.truncSV(x, y);\n  return Math.round(x / y) * y;\n};\n\n_numeric.inv = function inv(x) {\n  var s = _numeric.dim(x),\n    abs = Math.abs,\n    m = s[0],\n    n = s[1];\n  var A = _numeric.clone(x),\n    Ai,\n    Aj;\n  var I = _numeric.identity(m),\n    Ii,\n    Ij;\n  var i, j, k, x;\n  for (j = 0; j < n; ++j) {\n    var i0 = -1;\n    var v0 = -1;\n    for (i = j; i !== m; ++i) {\n      k = abs(A[i][j]);\n      if (k > v0) {\n        i0 = i;\n        v0 = k;\n      }\n    }\n    Aj = A[i0];\n    A[i0] = A[j];\n    A[j] = Aj;\n    Ij = I[i0];\n    I[i0] = I[j];\n    I[j] = Ij;\n    x = Aj[j];\n    for (k = j; k !== n; ++k) Aj[k] /= x;\n    for (k = n - 1; k !== -1; --k) Ij[k] /= x;\n    for (i = m - 1; i !== -1; --i) {\n      if (i !== j) {\n        Ai = A[i];\n        Ii = I[i];\n        x = Ai[j];\n        for (k = j + 1; k !== n; ++k) Ai[k] -= Aj[k] * x;\n        for (k = n - 1; k > 0; --k) {\n          Ii[k] -= Ij[k] * x;\n          --k;\n          Ii[k] -= Ij[k] * x;\n        }\n        if (k === 0) Ii[0] -= Ij[0] * x;\n      }\n    }\n  }\n  return I;\n};\n\n_numeric.det = function det(x) {\n  var s = _numeric.dim(x);\n  if (s.length !== 2 || s[0] !== s[1]) {\n    throw new Error('_numeric: det() only works on square matrices');\n  }\n  var n = s[0],\n    ret = 1,\n    i,\n    j,\n    k,\n    A = _numeric.clone(x),\n    Aj,\n    Ai,\n    alpha,\n    temp,\n    k1,\n    k2,\n    k3;\n  for (j = 0; j < n - 1; j++) {\n    k = j;\n    for (i = j + 1; i < n; i++) {\n      if (Math.abs(A[i][j]) > Math.abs(A[k][j])) {\n        k = i;\n      }\n    }\n    if (k !== j) {\n      temp = A[k];\n      A[k] = A[j];\n      A[j] = temp;\n      ret *= -1;\n    }\n    Aj = A[j];\n    for (i = j + 1; i < n; i++) {\n      Ai = A[i];\n      alpha = Ai[j] / Aj[j];\n      for (k = j + 1; k < n - 1; k += 2) {\n        k1 = k + 1;\n        Ai[k] -= Aj[k] * alpha;\n        Ai[k1] -= Aj[k1] * alpha;\n      }\n      if (k !== n) {\n        Ai[k] -= Aj[k] * alpha;\n      }\n    }\n    if (Aj[j] === 0) {\n      return 0;\n    }\n    ret *= Aj[j];\n  }\n  return ret * A[j][j];\n};\n\n_numeric.transpose = function transpose(x) {\n  var i,\n    j,\n    m = x.length,\n    n = x[0].length,\n    ret = Array(n),\n    A0,\n    A1,\n    Bj;\n  for (j = 0; j < n; j++) ret[j] = Array(m);\n  for (i = m - 1; i >= 1; i -= 2) {\n    A1 = x[i];\n    A0 = x[i - 1];\n    for (j = n - 1; j >= 1; --j) {\n      Bj = ret[j];\n      Bj[i] = A1[j];\n      Bj[i - 1] = A0[j];\n      --j;\n      Bj = ret[j];\n      Bj[i] = A1[j];\n      Bj[i - 1] = A0[j];\n    }\n    if (j === 0) {\n      Bj = ret[0];\n      Bj[i] = A1[0];\n      Bj[i - 1] = A0[0];\n    }\n  }\n  if (i === 0) {\n    A0 = x[0];\n    for (j = n - 1; j >= 1; --j) {\n      ret[j][0] = A0[j];\n      --j;\n      ret[j][0] = A0[j];\n    }\n    if (j === 0) {\n      ret[0][0] = A0[0];\n    }\n  }\n  return ret;\n};\n_numeric.negtranspose = function negtranspose(x) {\n  var i,\n    j,\n    m = x.length,\n    n = x[0].length,\n    ret = Array(n),\n    A0,\n    A1,\n    Bj;\n  for (j = 0; j < n; j++) ret[j] = Array(m);\n  for (i = m - 1; i >= 1; i -= 2) {\n    A1 = x[i];\n    A0 = x[i - 1];\n    for (j = n - 1; j >= 1; --j) {\n      Bj = ret[j];\n      Bj[i] = -A1[j];\n      Bj[i - 1] = -A0[j];\n      --j;\n      Bj = ret[j];\n      Bj[i] = -A1[j];\n      Bj[i - 1] = -A0[j];\n    }\n    if (j === 0) {\n      Bj = ret[0];\n      Bj[i] = -A1[0];\n      Bj[i - 1] = -A0[0];\n    }\n  }\n  if (i === 0) {\n    A0 = x[0];\n    for (j = n - 1; j >= 1; --j) {\n      ret[j][0] = -A0[j];\n      --j;\n      ret[j][0] = -A0[j];\n    }\n    if (j === 0) {\n      ret[0][0] = -A0[0];\n    }\n  }\n  return ret;\n};\n\n_numeric._random = function _random(s, k) {\n  var i,\n    n = s[k],\n    ret = Array(n),\n    rnd;\n  if (k === s.length - 1) {\n    rnd = Math.random;\n    for (i = n - 1; i >= 1; i -= 2) {\n      ret[i] = rnd();\n      ret[i - 1] = rnd();\n    }\n    if (i === 0) {\n      ret[0] = rnd();\n    }\n    return ret;\n  }\n  for (i = n - 1; i >= 0; i--) ret[i] = _random(s, k + 1);\n  return ret;\n};\n_numeric.random = function random(s) {\n  return _numeric._random(s, 0);\n};\n\n_numeric.norm2 = function norm2(x) {\n  return Math.sqrt(_numeric.norm2Squared(x));\n};\n\n_numeric.linspace = function linspace(a, b, n) {\n  if (typeof n === 'undefined') n = Math.max(Math.round(b - a) + 1, 1);\n  if (n < 2) {\n    return n === 1 ? [a] : [];\n  }\n  var i,\n    ret = Array(n);\n  n--;\n  for (i = n; i >= 0; i--) {\n    ret[i] = (i * b + (n - i) * a) / n;\n  }\n  return ret;\n};\n\n_numeric.getBlock = function getBlock(x, from, to) {\n  var s = _numeric.dim(x);\n  function foo(x, k) {\n    var i,\n      a = from[k],\n      n = to[k] - a,\n      ret = Array(n);\n    if (k === s.length - 1) {\n      for (i = n; i >= 0; i--) {\n        ret[i] = x[i + a];\n      }\n      return ret;\n    }\n    for (i = n; i >= 0; i--) {\n      ret[i] = foo(x[i + a], k + 1);\n    }\n    return ret;\n  }\n  return foo(x, 0);\n};\n\n_numeric.setBlock = function setBlock(x, from, to, B) {\n  var s = _numeric.dim(x);\n  function foo(x, y, k) {\n    var i,\n      a = from[k],\n      n = to[k] - a;\n    if (k === s.length - 1) {\n      for (i = n; i >= 0; i--) {\n        x[i + a] = y[i];\n      }\n    }\n    for (i = n; i >= 0; i--) {\n      foo(x[i + a], y[i], k + 1);\n    }\n  }\n  foo(x, B, 0);\n  return x;\n};\n\n_numeric.getRange = function getRange(A, I, J) {\n  var m = I.length,\n    n = J.length;\n  var i, j;\n  var B = Array(m),\n    Bi,\n    AI;\n  for (i = m - 1; i !== -1; --i) {\n    B[i] = Array(n);\n    Bi = B[i];\n    AI = A[I[i]];\n    for (j = n - 1; j !== -1; --j) Bi[j] = AI[J[j]];\n  }\n  return B;\n};\n\n_numeric.blockMatrix = function blockMatrix(X) {\n  var s = _numeric.dim(X);\n  if (s.length < 4) return _numeric.blockMatrix([X]);\n  var m = s[0],\n    n = s[1],\n    M,\n    N,\n    i,\n    j,\n    Xij;\n  M = 0;\n  N = 0;\n  for (i = 0; i < m; ++i) M += X[i][0].length;\n  for (j = 0; j < n; ++j) N += X[0][j][0].length;\n  var Z = Array(M);\n  for (i = 0; i < M; ++i) Z[i] = Array(N);\n  var I = 0,\n    J,\n    ZI,\n    k,\n    l,\n    Xijk;\n  for (i = 0; i < m; ++i) {\n    J = N;\n    for (j = n - 1; j !== -1; --j) {\n      Xij = X[i][j];\n      J -= Xij[0].length;\n      for (k = Xij.length - 1; k !== -1; --k) {\n        Xijk = Xij[k];\n        ZI = Z[I + k];\n        for (l = Xijk.length - 1; l !== -1; --l) ZI[J + l] = Xijk[l];\n      }\n    }\n    I += X[i][0].length;\n  }\n  return Z;\n};\n\n_numeric.tensor = function tensor(x, y) {\n  if (typeof x === 'number' || typeof y === 'number') return _numeric.mul(x, y);\n  var s1 = _numeric.dim(x),\n    s2 = _numeric.dim(y);\n  if (s1.length !== 1 || s2.length !== 1) {\n    throw new Error('_numeric: tensor product is only defined for vectors');\n  }\n  var m = s1[0],\n    n = s2[0],\n    A = Array(m),\n    Ai,\n    i,\n    j,\n    xi;\n  for (i = m - 1; i >= 0; i--) {\n    Ai = Array(n);\n    xi = x[i];\n    for (j = n - 1; j >= 3; --j) {\n      Ai[j] = xi * y[j];\n      --j;\n      Ai[j] = xi * y[j];\n      --j;\n      Ai[j] = xi * y[j];\n      --j;\n      Ai[j] = xi * y[j];\n    }\n    while (j >= 0) {\n      Ai[j] = xi * y[j];\n      --j;\n    }\n    A[i] = Ai;\n  }\n  return A;\n};\n\n// 3. The Tensor type T\n_numeric.T = function T(x, y) {\n  this.x = x;\n  this.y = y;\n};\n_numeric.t = function t(x, y) {\n  return new _numeric.T(x, y);\n};\n\n_numeric.Tbinop = function Tbinop(rr, rc, cr, cc, setup) {\n  var io = _numeric.indexOf;\n  if (typeof setup !== 'string') {\n    var k;\n    setup = '';\n    for (k in _numeric) {\n      if (_numeric.hasOwnProperty(k) && (rr.indexOf(k) >= 0 || rc.indexOf(k) >= 0 || cr.indexOf(k) >= 0 || cc.indexOf(k) >= 0) && k.length > 1) {\n        setup += 'var ' + k + ' = _numeric.' + k + ';\\n';\n      }\n    }\n  }\n  return Function(\n    ['y'],\n    'var x = this;\\n' +\n      'if(!(y instanceof _numeric.T)) { y = new _numeric.T(y); }\\n' +\n      setup +\n      '\\n' +\n      'if(x.y) {' +\n      '  if(y.y) {' +\n      '    return new _numeric.T(' +\n      cc +\n      ');\\n' +\n      '  }\\n' +\n      '  return new _numeric.T(' +\n      cr +\n      ');\\n' +\n      '}\\n' +\n      'if(y.y) {\\n' +\n      '  return new _numeric.T(' +\n      rc +\n      ');\\n' +\n      '}\\n' +\n      'return new _numeric.T(' +\n      rr +\n      ');\\n'\n  );\n};\n\n_numeric.T.prototype.add = _numeric.Tbinop('add(x.x,y.x)', 'add(x.x,y.x),y.y', 'add(x.x,y.x),x.y', 'add(x.x,y.x),add(x.y,y.y)');\n_numeric.T.prototype.sub = _numeric.Tbinop('sub(x.x,y.x)', 'sub(x.x,y.x),neg(y.y)', 'sub(x.x,y.x),x.y', 'sub(x.x,y.x),sub(x.y,y.y)');\n_numeric.T.prototype.mul = _numeric.Tbinop('mul(x.x,y.x)', 'mul(x.x,y.x),mul(x.x,y.y)', 'mul(x.x,y.x),mul(x.y,y.x)', 'sub(mul(x.x,y.x),mul(x.y,y.y)),add(mul(x.x,y.y),mul(x.y,y.x))');\n\n_numeric.T.prototype.reciprocal = function reciprocal() {\n  var mul = _numeric.mul,\n    div = _numeric.div;\n  if (this.y) {\n    var d = _numeric.add(mul(this.x, this.x), mul(this.y, this.y));\n    return new _numeric.T(div(this.x, d), div(_numeric.neg(this.y), d));\n  }\n  return new T(div(1, this.x));\n};\n_numeric.T.prototype.div = function div(y) {\n  if (!(y instanceof _numeric.T)) y = new _numeric.T(y);\n  if (y.y) {\n    return this.mul(y.reciprocal());\n  }\n  var div = _numeric.div;\n  if (this.y) {\n    return new _numeric.T(div(this.x, y.x), div(this.y, y.x));\n  }\n  return new _numeric.T(div(this.x, y.x));\n};\n_numeric.T.prototype.dot = _numeric.Tbinop('dot(x.x,y.x)', 'dot(x.x,y.x),dot(x.x,y.y)', 'dot(x.x,y.x),dot(x.y,y.x)', 'sub(dot(x.x,y.x),dot(x.y,y.y)),add(dot(x.x,y.y),dot(x.y,y.x))');\n_numeric.T.prototype.transpose = function transpose() {\n  var t = _numeric.transpose,\n    x = this.x,\n    y = this.y;\n  if (y) {\n    return new _numeric.T(t(x), t(y));\n  }\n  return new _numeric.T(t(x));\n};\n_numeric.T.prototype.transjugate = function transjugate() {\n  var t = _numeric.transpose,\n    x = this.x,\n    y = this.y;\n  if (y) {\n    return new _numeric.T(t(x), _numeric.negtranspose(y));\n  }\n  return new _numeric.T(t(x));\n};\n_numeric.Tunop = function Tunop(r, c, s) {\n  if (typeof s !== 'string') {\n    s = '';\n  }\n  return Function('var x = this;\\n' + s + '\\n' + 'if(x.y) {' + '  ' + c + ';\\n' + '}\\n' + r + ';\\n');\n};\n\n_numeric.T.prototype.exp = _numeric.Tunop('return new _numeric.T(ex)', 'return new _numeric.T(mul(cos(x.y),ex),mul(sin(x.y),ex))', 'var ex = _numeric.exp(x.x), cos = _numeric.cos, sin = _numeric.sin, mul = _numeric.mul;');\n_numeric.T.prototype.conj = _numeric.Tunop('return new _numeric.T(x.x);', 'return new _numeric.T(x.x,_numeric.neg(x.y));');\n_numeric.T.prototype.neg = _numeric.Tunop('return new _numeric.T(neg(x.x));', 'return new _numeric.T(neg(x.x),neg(x.y));', 'var neg = _numeric.neg;');\n_numeric.T.prototype.sin = _numeric.Tunop('return new _numeric.T(_numeric.sin(x.x))', 'return x.exp().sub(x.neg().exp()).div(new _numeric.T(0,2));');\n_numeric.T.prototype.cos = _numeric.Tunop('return new _numeric.T(_numeric.cos(x.x))', 'return x.exp().add(x.neg().exp()).div(2);');\n_numeric.T.prototype.abs = _numeric.Tunop('return new _numeric.T(_numeric.abs(x.x));', 'return new _numeric.T(_numeric.sqrt(_numeric.add(mul(x.x,x.x),mul(x.y,x.y))));', 'var mul = _numeric.mul;');\n_numeric.T.prototype.log = _numeric.Tunop('return new _numeric.T(_numeric.log(x.x));', 'var theta = new _numeric.T(_numeric.atan2(x.y,x.x)), r = x.abs();\\n' + 'return new _numeric.T(_numeric.log(r.x),theta.x);');\n_numeric.T.prototype.norm2 = _numeric.Tunop('return _numeric.norm2(x.x);', 'var f = _numeric.norm2Squared;\\n' + 'return Math.sqrt(f(x.x)+f(x.y));');\n_numeric.T.prototype.inv = function inv() {\n  var A = this;\n  if (typeof A.y === 'undefined') {\n    return new _numeric.T(_numeric.inv(A.x));\n  }\n  var n = A.x.length,\n    i,\n    j,\n    k;\n  var Rx = _numeric.identity(n),\n    Ry = _numeric.rep([n, n], 0);\n  var Ax = _numeric.clone(A.x),\n    Ay = _numeric.clone(A.y);\n  var Aix, Aiy, Ajx, Ajy, Rix, Riy, Rjx, Rjy;\n  var i, j, k, d, d1, ax, ay, bx, by, temp;\n  for (i = 0; i < n; i++) {\n    ax = Ax[i][i];\n    ay = Ay[i][i];\n    d = ax * ax + ay * ay;\n    k = i;\n    for (j = i + 1; j < n; j++) {\n      ax = Ax[j][i];\n      ay = Ay[j][i];\n      d1 = ax * ax + ay * ay;\n      if (d1 > d) {\n        k = j;\n        d = d1;\n      }\n    }\n    if (k !== i) {\n      temp = Ax[i];\n      Ax[i] = Ax[k];\n      Ax[k] = temp;\n      temp = Ay[i];\n      Ay[i] = Ay[k];\n      Ay[k] = temp;\n      temp = Rx[i];\n      Rx[i] = Rx[k];\n      Rx[k] = temp;\n      temp = Ry[i];\n      Ry[i] = Ry[k];\n      Ry[k] = temp;\n    }\n    Aix = Ax[i];\n    Aiy = Ay[i];\n    Rix = Rx[i];\n    Riy = Ry[i];\n    ax = Aix[i];\n    ay = Aiy[i];\n    for (j = i + 1; j < n; j++) {\n      bx = Aix[j];\n      by = Aiy[j];\n      Aix[j] = (bx * ax + by * ay) / d;\n      Aiy[j] = (by * ax - bx * ay) / d;\n    }\n    for (j = 0; j < n; j++) {\n      bx = Rix[j];\n      by = Riy[j];\n      Rix[j] = (bx * ax + by * ay) / d;\n      Riy[j] = (by * ax - bx * ay) / d;\n    }\n    for (j = i + 1; j < n; j++) {\n      Ajx = Ax[j];\n      Ajy = Ay[j];\n      Rjx = Rx[j];\n      Rjy = Ry[j];\n      ax = Ajx[i];\n      ay = Ajy[i];\n      for (k = i + 1; k < n; k++) {\n        bx = Aix[k];\n        by = Aiy[k];\n        Ajx[k] -= bx * ax - by * ay;\n        Ajy[k] -= by * ax + bx * ay;\n      }\n      for (k = 0; k < n; k++) {\n        bx = Rix[k];\n        by = Riy[k];\n        Rjx[k] -= bx * ax - by * ay;\n        Rjy[k] -= by * ax + bx * ay;\n      }\n    }\n  }\n  for (i = n - 1; i > 0; i--) {\n    Rix = Rx[i];\n    Riy = Ry[i];\n    for (j = i - 1; j >= 0; j--) {\n      Rjx = Rx[j];\n      Rjy = Ry[j];\n      ax = Ax[j][i];\n      ay = Ay[j][i];\n      for (k = n - 1; k >= 0; k--) {\n        bx = Rix[k];\n        by = Riy[k];\n        Rjx[k] -= ax * bx - ay * by;\n        Rjy[k] -= ax * by + ay * bx;\n      }\n    }\n  }\n  return new _numeric.T(Rx, Ry);\n};\n_numeric.T.prototype.get = function get(i) {\n  var x = this.x,\n    y = this.y,\n    k = 0,\n    ik,\n    n = i.length;\n  if (y) {\n    while (k < n) {\n      ik = i[k];\n      x = x[ik];\n      y = y[ik];\n      k++;\n    }\n    return new _numeric.T(x, y);\n  }\n  while (k < n) {\n    ik = i[k];\n    x = x[ik];\n    k++;\n  }\n  return new _numeric.T(x);\n};\n_numeric.T.prototype.set = function set(i, v) {\n  var x = this.x,\n    y = this.y,\n    k = 0,\n    ik,\n    n = i.length,\n    vx = v.x,\n    vy = v.y;\n  if (n === 0) {\n    if (vy) {\n      this.y = vy;\n    } else if (y) {\n      this.y = undefined;\n    }\n    this.x = x;\n    return this;\n  }\n  if (vy) {\n    if (y) {\n      /* ok */\n    } else {\n      y = _numeric.rep(_numeric.dim(x), 0);\n      this.y = y;\n    }\n    while (k < n - 1) {\n      ik = i[k];\n      x = x[ik];\n      y = y[ik];\n      k++;\n    }\n    ik = i[k];\n    x[ik] = vx;\n    y[ik] = vy;\n    return this;\n  }\n  if (y) {\n    while (k < n - 1) {\n      ik = i[k];\n      x = x[ik];\n      y = y[ik];\n      k++;\n    }\n    ik = i[k];\n    x[ik] = vx;\n    if (vx instanceof Array) y[ik] = _numeric.rep(_numeric.dim(vx), 0);\n    else y[ik] = 0;\n    return this;\n  }\n  while (k < n - 1) {\n    ik = i[k];\n    x = x[ik];\n    k++;\n  }\n  ik = i[k];\n  x[ik] = vx;\n  return this;\n};\n_numeric.T.prototype.getRows = function getRows(i0, i1) {\n  var n = i1 - i0 + 1,\n    j;\n  var rx = Array(n),\n    ry,\n    x = this.x,\n    y = this.y;\n  for (j = i0; j <= i1; j++) {\n    rx[j - i0] = x[j];\n  }\n  if (y) {\n    ry = Array(n);\n    for (j = i0; j <= i1; j++) {\n      ry[j - i0] = y[j];\n    }\n    return new _numeric.T(rx, ry);\n  }\n  return new _numeric.T(rx);\n};\n_numeric.T.prototype.setRows = function setRows(i0, i1, A) {\n  var j;\n  var rx = this.x,\n    ry = this.y,\n    x = A.x,\n    y = A.y;\n  for (j = i0; j <= i1; j++) {\n    rx[j] = x[j - i0];\n  }\n  if (y) {\n    if (!ry) {\n      ry = _numeric.rep(_numeric.dim(rx), 0);\n      this.y = ry;\n    }\n    for (j = i0; j <= i1; j++) {\n      ry[j] = y[j - i0];\n    }\n  } else if (ry) {\n    for (j = i0; j <= i1; j++) {\n      ry[j] = _numeric.rep([x[j - i0].length], 0);\n    }\n  }\n  return this;\n};\n_numeric.T.prototype.getRow = function getRow(k) {\n  var x = this.x,\n    y = this.y;\n  if (y) {\n    return new _numeric.T(x[k], y[k]);\n  }\n  return new _numeric.T(x[k]);\n};\n_numeric.T.prototype.setRow = function setRow(i, v) {\n  var rx = this.x,\n    ry = this.y,\n    x = v.x,\n    y = v.y;\n  rx[i] = x;\n  if (y) {\n    if (!ry) {\n      ry = _numeric.rep(_numeric.dim(rx), 0);\n      this.y = ry;\n    }\n    ry[i] = y;\n  } else if (ry) {\n    ry = _numeric.rep([x.length], 0);\n  }\n  return this;\n};\n\n_numeric.T.prototype.getBlock = function getBlock(from, to) {\n  var x = this.x,\n    y = this.y,\n    b = _numeric.getBlock;\n  if (y) {\n    return new _numeric.T(b(x, from, to), b(y, from, to));\n  }\n  return new _numeric.T(b(x, from, to));\n};\n_numeric.T.prototype.setBlock = function setBlock(from, to, A) {\n  if (!(A instanceof _numeric.T)) A = new _numeric.T(A);\n  var x = this.x,\n    y = this.y,\n    b = _numeric.setBlock,\n    Ax = A.x,\n    Ay = A.y;\n  if (Ay) {\n    if (!y) {\n      this.y = _numeric.rep(_numeric.dim(this), 0);\n      y = this.y;\n    }\n    b(x, from, to, Ax);\n    b(y, from, to, Ay);\n    return this;\n  }\n  b(x, from, to, Ax);\n  if (y) b(y, from, to, _numeric.rep(_numeric.dim(Ax), 0));\n};\n_numeric.T.rep = function rep(s, v) {\n  var T = _numeric.T;\n  if (!(v instanceof T)) v = new T(v);\n  var x = v.x,\n    y = v.y,\n    r = _numeric.rep;\n  if (y) return new T(r(s, x), r(s, y));\n  return new T(r(s, x));\n};\n_numeric.T.diag = function diag(d) {\n  if (!(d instanceof _numeric.T)) d = new _numeric.T(d);\n  var x = d.x,\n    y = d.y,\n    diag = _numeric.diag;\n  if (y) return new _numeric.T(diag(x), diag(y));\n  return new _numeric.T(diag(x));\n};\n_numeric.T.eig = function eig() {\n  if (this.y) {\n    throw new Error('eig: not implemented for complex matrices.');\n  }\n  return _numeric.eig(this.x);\n};\n_numeric.T.identity = function identity(n) {\n  return new _numeric.T(_numeric.identity(n));\n};\n_numeric.T.prototype.getDiag = function getDiag() {\n  var n = _numeric;\n  var x = this.x,\n    y = this.y;\n  if (y) {\n    return new n.T(n.getDiag(x), n.getDiag(y));\n  }\n  return new n.T(n.getDiag(x));\n};\n\n// 4. Eigenvalues of real matrices\n\n_numeric.house = function house(x) {\n  var v = _numeric.clone(x);\n  var s = x[0] >= 0 ? 1 : -1;\n  var alpha = s * _numeric.norm2(x);\n  v[0] += alpha;\n  var foo = _numeric.norm2(v);\n  if (foo === 0) {\n    /* this should not happen */ throw new Error('eig: internal error');\n  }\n  return _numeric.div(v, foo);\n};\n\n_numeric.toUpperHessenberg = function toUpperHessenberg(me) {\n  var s = _numeric.dim(me);\n  if (s.length !== 2 || s[0] !== s[1]) {\n    throw new Error('_numeric: toUpperHessenberg() only works on square matrices');\n  }\n  var m = s[0],\n    i,\n    j,\n    k,\n    x,\n    v,\n    A = _numeric.clone(me),\n    B,\n    C,\n    Ai,\n    Ci,\n    Q = _numeric.identity(m),\n    Qi;\n  for (j = 0; j < m - 2; j++) {\n    x = Array(m - j - 1);\n    for (i = j + 1; i < m; i++) {\n      x[i - j - 1] = A[i][j];\n    }\n    if (_numeric.norm2(x) > 0) {\n      v = _numeric.house(x);\n      B = _numeric.getBlock(A, [j + 1, j], [m - 1, m - 1]);\n      C = _numeric.tensor(v, _numeric.dot(v, B));\n      for (i = j + 1; i < m; i++) {\n        Ai = A[i];\n        Ci = C[i - j - 1];\n        for (k = j; k < m; k++) Ai[k] -= 2 * Ci[k - j];\n      }\n      B = _numeric.getBlock(A, [0, j + 1], [m - 1, m - 1]);\n      C = _numeric.tensor(_numeric.dot(B, v), v);\n      for (i = 0; i < m; i++) {\n        Ai = A[i];\n        Ci = C[i];\n        for (k = j + 1; k < m; k++) Ai[k] -= 2 * Ci[k - j - 1];\n      }\n      B = Array(m - j - 1);\n      for (i = j + 1; i < m; i++) B[i - j - 1] = Q[i];\n      C = _numeric.tensor(v, _numeric.dot(v, B));\n      for (i = j + 1; i < m; i++) {\n        Qi = Q[i];\n        Ci = C[i - j - 1];\n        for (k = 0; k < m; k++) Qi[k] -= 2 * Ci[k];\n      }\n    }\n  }\n  return { H: A, Q: Q };\n};\n\n_numeric.epsilon = 2.220446049250313e-16;\n\n_numeric.QRFrancis = function (H, maxiter) {\n  if (typeof maxiter === 'undefined') {\n    maxiter = 10000;\n  }\n  H = _numeric.clone(H);\n  var H0 = _numeric.clone(H);\n  var s = _numeric.dim(H),\n    m = s[0],\n    x,\n    v,\n    a,\n    b,\n    c,\n    d,\n    det,\n    tr,\n    Hloc,\n    Q = _numeric.identity(m),\n    Qi,\n    Hi,\n    B,\n    C,\n    Ci,\n    i,\n    j,\n    k,\n    iter;\n  if (m < 3) {\n    return { Q: Q, B: [[0, m - 1]] };\n  }\n  var epsilon = _numeric.epsilon;\n  for (iter = 0; iter < maxiter; iter++) {\n    for (j = 0; j < m - 1; j++) {\n      if (Math.abs(H[j + 1][j]) < epsilon * (Math.abs(H[j][j]) + Math.abs(H[j + 1][j + 1]))) {\n        var QH1 = _numeric.QRFrancis(_numeric.getBlock(H, [0, 0], [j, j]), maxiter);\n        var QH2 = _numeric.QRFrancis(_numeric.getBlock(H, [j + 1, j + 1], [m - 1, m - 1]), maxiter);\n        B = Array(j + 1);\n        for (i = 0; i <= j; i++) {\n          B[i] = Q[i];\n        }\n        C = _numeric.dot(QH1.Q, B);\n        for (i = 0; i <= j; i++) {\n          Q[i] = C[i];\n        }\n        B = Array(m - j - 1);\n        for (i = j + 1; i < m; i++) {\n          B[i - j - 1] = Q[i];\n        }\n        C = _numeric.dot(QH2.Q, B);\n        for (i = j + 1; i < m; i++) {\n          Q[i] = C[i - j - 1];\n        }\n        return { Q: Q, B: QH1.B.concat(_numeric.add(QH2.B, j + 1)) };\n      }\n    }\n    a = H[m - 2][m - 2];\n    b = H[m - 2][m - 1];\n    c = H[m - 1][m - 2];\n    d = H[m - 1][m - 1];\n    tr = a + d;\n    det = a * d - b * c;\n    Hloc = _numeric.getBlock(H, [0, 0], [2, 2]);\n    if (tr * tr >= 4 * det) {\n      var s1, s2;\n      s1 = 0.5 * (tr + Math.sqrt(tr * tr - 4 * det));\n      s2 = 0.5 * (tr - Math.sqrt(tr * tr - 4 * det));\n      Hloc = _numeric.add(_numeric.sub(_numeric.dot(Hloc, Hloc), _numeric.mul(Hloc, s1 + s2)), _numeric.diag(_numeric.rep([3], s1 * s2)));\n    } else {\n      Hloc = _numeric.add(_numeric.sub(_numeric.dot(Hloc, Hloc), _numeric.mul(Hloc, tr)), _numeric.diag(_numeric.rep([3], det)));\n    }\n    x = [Hloc[0][0], Hloc[1][0], Hloc[2][0]];\n    v = _numeric.house(x);\n    B = [H[0], H[1], H[2]];\n    C = _numeric.tensor(v, _numeric.dot(v, B));\n    for (i = 0; i < 3; i++) {\n      Hi = H[i];\n      Ci = C[i];\n      for (k = 0; k < m; k++) Hi[k] -= 2 * Ci[k];\n    }\n    B = _numeric.getBlock(H, [0, 0], [m - 1, 2]);\n    C = _numeric.tensor(_numeric.dot(B, v), v);\n    for (i = 0; i < m; i++) {\n      Hi = H[i];\n      Ci = C[i];\n      for (k = 0; k < 3; k++) Hi[k] -= 2 * Ci[k];\n    }\n    B = [Q[0], Q[1], Q[2]];\n    C = _numeric.tensor(v, _numeric.dot(v, B));\n    for (i = 0; i < 3; i++) {\n      Qi = Q[i];\n      Ci = C[i];\n      for (k = 0; k < m; k++) Qi[k] -= 2 * Ci[k];\n    }\n    var J;\n    for (j = 0; j < m - 2; j++) {\n      for (k = j; k <= j + 1; k++) {\n        if (Math.abs(H[k + 1][k]) < epsilon * (Math.abs(H[k][k]) + Math.abs(H[k + 1][k + 1]))) {\n          var QH1 = _numeric.QRFrancis(_numeric.getBlock(H, [0, 0], [k, k]), maxiter);\n          var QH2 = _numeric.QRFrancis(_numeric.getBlock(H, [k + 1, k + 1], [m - 1, m - 1]), maxiter);\n          B = Array(k + 1);\n          for (i = 0; i <= k; i++) {\n            B[i] = Q[i];\n          }\n          C = _numeric.dot(QH1.Q, B);\n          for (i = 0; i <= k; i++) {\n            Q[i] = C[i];\n          }\n          B = Array(m - k - 1);\n          for (i = k + 1; i < m; i++) {\n            B[i - k - 1] = Q[i];\n          }\n          C = _numeric.dot(QH2.Q, B);\n          for (i = k + 1; i < m; i++) {\n            Q[i] = C[i - k - 1];\n          }\n          return { Q: Q, B: QH1.B.concat(_numeric.add(QH2.B, k + 1)) };\n        }\n      }\n      J = Math.min(m - 1, j + 3);\n      x = Array(J - j);\n      for (i = j + 1; i <= J; i++) {\n        x[i - j - 1] = H[i][j];\n      }\n      v = _numeric.house(x);\n      B = _numeric.getBlock(H, [j + 1, j], [J, m - 1]);\n      C = _numeric.tensor(v, _numeric.dot(v, B));\n      for (i = j + 1; i <= J; i++) {\n        Hi = H[i];\n        Ci = C[i - j - 1];\n        for (k = j; k < m; k++) Hi[k] -= 2 * Ci[k - j];\n      }\n      B = _numeric.getBlock(H, [0, j + 1], [m - 1, J]);\n      C = _numeric.tensor(_numeric.dot(B, v), v);\n      for (i = 0; i < m; i++) {\n        Hi = H[i];\n        Ci = C[i];\n        for (k = j + 1; k <= J; k++) Hi[k] -= 2 * Ci[k - j - 1];\n      }\n      B = Array(J - j);\n      for (i = j + 1; i <= J; i++) B[i - j - 1] = Q[i];\n      C = _numeric.tensor(v, _numeric.dot(v, B));\n      for (i = j + 1; i <= J; i++) {\n        Qi = Q[i];\n        Ci = C[i - j - 1];\n        for (k = 0; k < m; k++) Qi[k] -= 2 * Ci[k];\n      }\n    }\n  }\n  throw new Error('_numeric: eigenvalue iteration does not converge -- increase maxiter?');\n};\n\n_numeric.eig = function eig(A, maxiter) {\n  var QH = _numeric.toUpperHessenberg(A);\n  var QB = _numeric.QRFrancis(QH.H, maxiter);\n  var T = _numeric.T;\n  var n = A.length,\n    i,\n    k,\n    flag = false,\n    B = QB.B,\n    H = _numeric.dot(QB.Q, _numeric.dot(QH.H, _numeric.transpose(QB.Q)));\n  var Q = new T(_numeric.dot(QB.Q, QH.Q)),\n    Q0;\n  var m = B.length,\n    j;\n  var a, b, c, d, p1, p2, disc, x, y, p, q, n1, n2;\n  var sqrt = Math.sqrt;\n  for (k = 0; k < m; k++) {\n    i = B[k][0];\n    if (i === B[k][1]) {\n      // nothing\n    } else {\n      j = i + 1;\n      a = H[i][i];\n      b = H[i][j];\n      c = H[j][i];\n      d = H[j][j];\n      if (b === 0 && c === 0) continue;\n      p1 = -a - d;\n      p2 = a * d - b * c;\n      disc = p1 * p1 - 4 * p2;\n      if (disc >= 0) {\n        if (p1 < 0) x = -0.5 * (p1 - sqrt(disc));\n        else x = -0.5 * (p1 + sqrt(disc));\n        n1 = (a - x) * (a - x) + b * b;\n        n2 = c * c + (d - x) * (d - x);\n        if (n1 > n2) {\n          n1 = sqrt(n1);\n          p = (a - x) / n1;\n          q = b / n1;\n        } else {\n          n2 = sqrt(n2);\n          p = c / n2;\n          q = (d - x) / n2;\n        }\n        Q0 = new T([\n          [q, -p],\n          [p, q],\n        ]);\n        Q.setRows(i, j, Q0.dot(Q.getRows(i, j)));\n      } else {\n        x = -0.5 * p1;\n        y = 0.5 * sqrt(-disc);\n        n1 = (a - x) * (a - x) + b * b;\n        n2 = c * c + (d - x) * (d - x);\n        if (n1 > n2) {\n          n1 = sqrt(n1 + y * y);\n          p = (a - x) / n1;\n          q = b / n1;\n          x = 0;\n          y /= n1;\n        } else {\n          n2 = sqrt(n2 + y * y);\n          p = c / n2;\n          q = (d - x) / n2;\n          x = y / n2;\n          y = 0;\n        }\n        Q0 = new T(\n          [\n            [q, -p],\n            [p, q],\n          ],\n          [\n            [x, y],\n            [y, -x],\n          ]\n        );\n        Q.setRows(i, j, Q0.dot(Q.getRows(i, j)));\n      }\n    }\n  }\n  var R = Q.dot(A).dot(Q.transjugate()),\n    n = A.length,\n    E = _numeric.T.identity(n);\n  for (j = 0; j < n; j++) {\n    if (j > 0) {\n      for (k = j - 1; k >= 0; k--) {\n        var Rk = R.get([k, k]),\n          Rj = R.get([j, j]);\n        if (_numeric.neq(Rk.x, Rj.x) || _numeric.neq(Rk.y, Rj.y)) {\n          x = R.getRow(k).getBlock([k], [j - 1]);\n          y = E.getRow(j).getBlock([k], [j - 1]);\n          E.set([j, k], R.get([k, j]).neg().sub(x.dot(y)).div(Rk.sub(Rj)));\n        } else {\n          E.setRow(j, E.getRow(k));\n          continue;\n        }\n      }\n    }\n  }\n  for (j = 0; j < n; j++) {\n    x = E.getRow(j);\n    E.setRow(j, x.div(x.norm2()));\n  }\n  E = E.transpose();\n  E = Q.transjugate().dot(E);\n  return { lambda: R.getDiag(), E: E };\n};\n\n// 5. Compressed Column Storage matrices\n_numeric.ccsSparse = function ccsSparse(A) {\n  var m = A.length,\n    n,\n    foo,\n    i,\n    j,\n    counts = [];\n  for (i = m - 1; i !== -1; --i) {\n    foo = A[i];\n    for (j in foo) {\n      j = parseInt(j);\n      while (j >= counts.length) counts[counts.length] = 0;\n      if (foo[j] !== 0) counts[j]++;\n    }\n  }\n  var n = counts.length;\n  var Ai = Array(n + 1);\n  Ai[0] = 0;\n  for (i = 0; i < n; ++i) Ai[i + 1] = Ai[i] + counts[i];\n  var Aj = Array(Ai[n]),\n    Av = Array(Ai[n]);\n  for (i = m - 1; i !== -1; --i) {\n    foo = A[i];\n    for (j in foo) {\n      if (foo[j] !== 0) {\n        counts[j]--;\n        Aj[Ai[j] + counts[j]] = i;\n        Av[Ai[j] + counts[j]] = foo[j];\n      }\n    }\n  }\n  return [Ai, Aj, Av];\n};\n_numeric.ccsFull = function ccsFull(A) {\n  var Ai = A[0],\n    Aj = A[1],\n    Av = A[2],\n    s = _numeric.ccsDim(A),\n    m = s[0],\n    n = s[1],\n    i,\n    j,\n    j0,\n    j1,\n    k;\n  var B = _numeric.rep([m, n], 0);\n  for (i = 0; i < n; i++) {\n    j0 = Ai[i];\n    j1 = Ai[i + 1];\n    for (j = j0; j < j1; ++j) {\n      B[Aj[j]][i] = Av[j];\n    }\n  }\n  return B;\n};\n_numeric.ccsTSolve = function ccsTSolve(A, b, x, bj, xj) {\n  var Ai = A[0],\n    Aj = A[1],\n    Av = A[2],\n    m = Ai.length - 1,\n    max = Math.max,\n    n = 0;\n  if (typeof bj === 'undefined') x = _numeric.rep([m], 0);\n  if (typeof bj === 'undefined') bj = _numeric.linspace(0, x.length - 1);\n  if (typeof xj === 'undefined') xj = [];\n  function dfs(j) {\n    var k;\n    if (x[j] !== 0) return;\n    x[j] = 1;\n    for (k = Ai[j]; k < Ai[j + 1]; ++k) dfs(Aj[k]);\n    xj[n] = j;\n    ++n;\n  }\n  var i, j, j0, j1, k, l, l0, l1, a;\n  for (i = bj.length - 1; i !== -1; --i) {\n    dfs(bj[i]);\n  }\n  xj.length = n;\n  for (i = xj.length - 1; i !== -1; --i) {\n    x[xj[i]] = 0;\n  }\n  for (i = bj.length - 1; i !== -1; --i) {\n    j = bj[i];\n    x[j] = b[j];\n  }\n  for (i = xj.length - 1; i !== -1; --i) {\n    j = xj[i];\n    j0 = Ai[j];\n    j1 = max(Ai[j + 1], j0);\n    for (k = j0; k !== j1; ++k) {\n      if (Aj[k] === j) {\n        x[j] /= Av[k];\n        break;\n      }\n    }\n    a = x[j];\n    for (k = j0; k !== j1; ++k) {\n      l = Aj[k];\n      if (l !== j) x[l] -= a * Av[k];\n    }\n  }\n  return x;\n};\n_numeric.ccsDFS = function ccsDFS(n) {\n  this.k = Array(n);\n  this.k1 = Array(n);\n  this.j = Array(n);\n};\n_numeric.ccsDFS.prototype.dfs = function dfs(J, Ai, Aj, x, xj, Pinv) {\n  var m = 0,\n    foo,\n    n = xj.length;\n  var k = this.k,\n    k1 = this.k1,\n    j = this.j,\n    km,\n    k11;\n  if (x[J] !== 0) return;\n  x[J] = 1;\n  j[0] = J;\n  k[0] = km = Ai[J];\n  k1[0] = k11 = Ai[J + 1];\n  while (1) {\n    if (km >= k11) {\n      xj[n] = j[m];\n      if (m === 0) return;\n      ++n;\n      --m;\n      km = k[m];\n      k11 = k1[m];\n    } else {\n      foo = Pinv[Aj[km]];\n      if (x[foo] === 0) {\n        x[foo] = 1;\n        k[m] = km;\n        ++m;\n        j[m] = foo;\n        km = Ai[foo];\n        k1[m] = k11 = Ai[foo + 1];\n      } else ++km;\n    }\n  }\n};\n_numeric.ccsLPSolve = function ccsLPSolve(A, B, x, xj, I, Pinv, dfs) {\n  var Ai = A[0],\n    Aj = A[1],\n    Av = A[2],\n    m = Ai.length - 1,\n    n = 0;\n  var Bi = B[0],\n    Bj = B[1],\n    Bv = B[2];\n\n  var i, i0, i1, j, J, j0, j1, k, l, l0, l1, a;\n  i0 = Bi[I];\n  i1 = Bi[I + 1];\n  xj.length = 0;\n  for (i = i0; i < i1; ++i) {\n    dfs.dfs(Pinv[Bj[i]], Ai, Aj, x, xj, Pinv);\n  }\n  for (i = xj.length - 1; i !== -1; --i) {\n    x[xj[i]] = 0;\n  }\n  for (i = i0; i !== i1; ++i) {\n    j = Pinv[Bj[i]];\n    x[j] = Bv[i];\n  }\n  for (i = xj.length - 1; i !== -1; --i) {\n    j = xj[i];\n    j0 = Ai[j];\n    j1 = Ai[j + 1];\n    for (k = j0; k < j1; ++k) {\n      if (Pinv[Aj[k]] === j) {\n        x[j] /= Av[k];\n        break;\n      }\n    }\n    a = x[j];\n    for (k = j0; k < j1; ++k) {\n      l = Pinv[Aj[k]];\n      if (l !== j) x[l] -= a * Av[k];\n    }\n  }\n  return x;\n};\n_numeric.ccsLUP1 = function ccsLUP1(A, threshold) {\n  var m = A[0].length - 1;\n  var L = [_numeric.rep([m + 1], 0), [], []],\n    U = [_numeric.rep([m + 1], 0), [], []];\n  var Li = L[0],\n    Lj = L[1],\n    Lv = L[2],\n    Ui = U[0],\n    Uj = U[1],\n    Uv = U[2];\n  var x = _numeric.rep([m], 0),\n    xj = _numeric.rep([m], 0);\n  var i, j, k, j0, j1, a, e, c, d, K;\n  var sol = _numeric.ccsLPSolve,\n    max = Math.max,\n    abs = Math.abs;\n  var P = _numeric.linspace(0, m - 1),\n    Pinv = _numeric.linspace(0, m - 1);\n  var dfs = new _numeric.ccsDFS(m);\n  if (typeof threshold === 'undefined') {\n    threshold = 1;\n  }\n  for (i = 0; i < m; ++i) {\n    sol(L, A, x, xj, i, Pinv, dfs);\n    a = -1;\n    e = -1;\n    for (j = xj.length - 1; j !== -1; --j) {\n      k = xj[j];\n      if (k <= i) continue;\n      c = abs(x[k]);\n      if (c > a) {\n        e = k;\n        a = c;\n      }\n    }\n    if (abs(x[i]) < threshold * a) {\n      j = P[i];\n      a = P[e];\n      P[i] = a;\n      Pinv[a] = i;\n      P[e] = j;\n      Pinv[j] = e;\n      a = x[i];\n      x[i] = x[e];\n      x[e] = a;\n    }\n    a = Li[i];\n    e = Ui[i];\n    d = x[i];\n    Lj[a] = P[i];\n    Lv[a] = 1;\n    ++a;\n    for (j = xj.length - 1; j !== -1; --j) {\n      k = xj[j];\n      c = x[k];\n      xj[j] = 0;\n      x[k] = 0;\n      if (k <= i) {\n        Uj[e] = k;\n        Uv[e] = c;\n        ++e;\n      } else {\n        Lj[a] = P[k];\n        Lv[a] = c / d;\n        ++a;\n      }\n    }\n    Li[i + 1] = a;\n    Ui[i + 1] = e;\n  }\n  for (j = Lj.length - 1; j !== -1; --j) {\n    Lj[j] = Pinv[Lj[j]];\n  }\n  return { L: L, U: U, P: P, Pinv: Pinv };\n};\n_numeric.ccsDFS0 = function ccsDFS0(n) {\n  this.k = Array(n);\n  this.k1 = Array(n);\n  this.j = Array(n);\n};\n_numeric.ccsDFS0.prototype.dfs = function dfs(J, Ai, Aj, x, xj, Pinv, P) {\n  var m = 0,\n    foo,\n    n = xj.length;\n  var k = this.k,\n    k1 = this.k1,\n    j = this.j,\n    km,\n    k11;\n  if (x[J] !== 0) return;\n  x[J] = 1;\n  j[0] = J;\n  k[0] = km = Ai[Pinv[J]];\n  k1[0] = k11 = Ai[Pinv[J] + 1];\n  while (1) {\n    if (isNaN(km)) throw new Error('Ow!');\n    if (km >= k11) {\n      xj[n] = Pinv[j[m]];\n      if (m === 0) return;\n      ++n;\n      --m;\n      km = k[m];\n      k11 = k1[m];\n    } else {\n      foo = Aj[km];\n      if (x[foo] === 0) {\n        x[foo] = 1;\n        k[m] = km;\n        ++m;\n        j[m] = foo;\n        foo = Pinv[foo];\n        km = Ai[foo];\n        k1[m] = k11 = Ai[foo + 1];\n      } else ++km;\n    }\n  }\n};\n_numeric.ccsLPSolve0 = function ccsLPSolve0(A, B, y, xj, I, Pinv, P, dfs) {\n  var Ai = A[0],\n    Aj = A[1],\n    Av = A[2],\n    m = Ai.length - 1,\n    n = 0;\n  var Bi = B[0],\n    Bj = B[1],\n    Bv = B[2];\n\n  var i, i0, i1, j, J, j0, j1, k, l, l0, l1, a;\n  i0 = Bi[I];\n  i1 = Bi[I + 1];\n  xj.length = 0;\n  for (i = i0; i < i1; ++i) {\n    dfs.dfs(Bj[i], Ai, Aj, y, xj, Pinv, P);\n  }\n  for (i = xj.length - 1; i !== -1; --i) {\n    j = xj[i];\n    y[P[j]] = 0;\n  }\n  for (i = i0; i !== i1; ++i) {\n    j = Bj[i];\n    y[j] = Bv[i];\n  }\n  for (i = xj.length - 1; i !== -1; --i) {\n    j = xj[i];\n    l = P[j];\n    j0 = Ai[j];\n    j1 = Ai[j + 1];\n    for (k = j0; k < j1; ++k) {\n      if (Aj[k] === l) {\n        y[l] /= Av[k];\n        break;\n      }\n    }\n    a = y[l];\n    for (k = j0; k < j1; ++k) y[Aj[k]] -= a * Av[k];\n    y[l] = a;\n  }\n};\n_numeric.ccsLUP0 = function ccsLUP0(A, threshold) {\n  var m = A[0].length - 1;\n  var L = [_numeric.rep([m + 1], 0), [], []],\n    U = [_numeric.rep([m + 1], 0), [], []];\n  var Li = L[0],\n    Lj = L[1],\n    Lv = L[2],\n    Ui = U[0],\n    Uj = U[1],\n    Uv = U[2];\n  var y = _numeric.rep([m], 0),\n    xj = _numeric.rep([m], 0);\n  var i, j, k, j0, j1, a, e, c, d, K;\n  var sol = _numeric.ccsLPSolve0,\n    max = Math.max,\n    abs = Math.abs;\n  var P = _numeric.linspace(0, m - 1),\n    Pinv = _numeric.linspace(0, m - 1);\n  var dfs = new _numeric.ccsDFS0(m);\n  if (typeof threshold === 'undefined') {\n    threshold = 1;\n  }\n  for (i = 0; i < m; ++i) {\n    sol(L, A, y, xj, i, Pinv, P, dfs);\n    a = -1;\n    e = -1;\n    for (j = xj.length - 1; j !== -1; --j) {\n      k = xj[j];\n      if (k <= i) continue;\n      c = abs(y[P[k]]);\n      if (c > a) {\n        e = k;\n        a = c;\n      }\n    }\n    if (abs(y[P[i]]) < threshold * a) {\n      j = P[i];\n      a = P[e];\n      P[i] = a;\n      Pinv[a] = i;\n      P[e] = j;\n      Pinv[j] = e;\n    }\n    a = Li[i];\n    e = Ui[i];\n    d = y[P[i]];\n    Lj[a] = P[i];\n    Lv[a] = 1;\n    ++a;\n    for (j = xj.length - 1; j !== -1; --j) {\n      k = xj[j];\n      c = y[P[k]];\n      xj[j] = 0;\n      y[P[k]] = 0;\n      if (k <= i) {\n        Uj[e] = k;\n        Uv[e] = c;\n        ++e;\n      } else {\n        Lj[a] = P[k];\n        Lv[a] = c / d;\n        ++a;\n      }\n    }\n    Li[i + 1] = a;\n    Ui[i + 1] = e;\n  }\n  for (j = Lj.length - 1; j !== -1; --j) {\n    Lj[j] = Pinv[Lj[j]];\n  }\n  return { L: L, U: U, P: P, Pinv: Pinv };\n};\n_numeric.ccsLUP = _numeric.ccsLUP0;\n\n_numeric.ccsDim = function ccsDim(A) {\n  return [_numeric.sup(A[1]) + 1, A[0].length - 1];\n};\n_numeric.ccsGetBlock = function ccsGetBlock(A, i, j) {\n  var s = _numeric.ccsDim(A),\n    m = s[0],\n    n = s[1];\n  if (typeof i === 'undefined') {\n    i = _numeric.linspace(0, m - 1);\n  } else if (typeof i === 'number') {\n    i = [i];\n  }\n  if (typeof j === 'undefined') {\n    j = _numeric.linspace(0, n - 1);\n  } else if (typeof j === 'number') {\n    j = [j];\n  }\n  var p,\n    p0,\n    p1,\n    P = i.length,\n    q,\n    Q = j.length,\n    r,\n    jq,\n    ip;\n  var Bi = _numeric.rep([n], 0),\n    Bj = [],\n    Bv = [],\n    B = [Bi, Bj, Bv];\n  var Ai = A[0],\n    Aj = A[1],\n    Av = A[2];\n  var x = _numeric.rep([m], 0),\n    count = 0,\n    flags = _numeric.rep([m], 0);\n  for (q = 0; q < Q; ++q) {\n    jq = j[q];\n    var q0 = Ai[jq];\n    var q1 = Ai[jq + 1];\n    for (p = q0; p < q1; ++p) {\n      r = Aj[p];\n      flags[r] = 1;\n      x[r] = Av[p];\n    }\n    for (p = 0; p < P; ++p) {\n      ip = i[p];\n      if (flags[ip]) {\n        Bj[count] = p;\n        Bv[count] = x[i[p]];\n        ++count;\n      }\n    }\n    for (p = q0; p < q1; ++p) {\n      r = Aj[p];\n      flags[r] = 0;\n    }\n    Bi[q + 1] = count;\n  }\n  return B;\n};\n\n_numeric.ccsDot = function ccsDot(A, B) {\n  var Ai = A[0],\n    Aj = A[1],\n    Av = A[2];\n  var Bi = B[0],\n    Bj = B[1],\n    Bv = B[2];\n  var sA = _numeric.ccsDim(A),\n    sB = _numeric.ccsDim(B);\n  var m = sA[0],\n    n = sA[1],\n    o = sB[1];\n  var x = _numeric.rep([m], 0),\n    flags = _numeric.rep([m], 0),\n    xj = Array(m);\n  var Ci = _numeric.rep([o], 0),\n    Cj = [],\n    Cv = [],\n    C = [Ci, Cj, Cv];\n  var i, j, k, j0, j1, i0, i1, l, p, a, b;\n  for (k = 0; k !== o; ++k) {\n    j0 = Bi[k];\n    j1 = Bi[k + 1];\n    p = 0;\n    for (j = j0; j < j1; ++j) {\n      a = Bj[j];\n      b = Bv[j];\n      i0 = Ai[a];\n      i1 = Ai[a + 1];\n      for (i = i0; i < i1; ++i) {\n        l = Aj[i];\n        if (flags[l] === 0) {\n          xj[p] = l;\n          flags[l] = 1;\n          p = p + 1;\n        }\n        x[l] = x[l] + Av[i] * b;\n      }\n    }\n    j0 = Ci[k];\n    j1 = j0 + p;\n    Ci[k + 1] = j1;\n    for (j = p - 1; j !== -1; --j) {\n      b = j0 + j;\n      i = xj[j];\n      Cj[b] = i;\n      Cv[b] = x[i];\n      flags[i] = 0;\n      x[i] = 0;\n    }\n    Ci[k + 1] = Ci[k] + p;\n  }\n  return C;\n};\n\n_numeric.ccsLUPSolve = function ccsLUPSolve(LUP, B) {\n  var L = LUP.L,\n    U = LUP.U,\n    P = LUP.P;\n  var Bi = B[0];\n  var flag = false;\n  if (typeof Bi !== 'object') {\n    B = [[0, B.length], _numeric.linspace(0, B.length - 1), B];\n    Bi = B[0];\n    flag = true;\n  }\n  var Bj = B[1],\n    Bv = B[2];\n  var n = L[0].length - 1,\n    m = Bi.length - 1;\n  var x = _numeric.rep([n], 0),\n    xj = Array(n);\n  var b = _numeric.rep([n], 0),\n    bj = Array(n);\n  var Xi = _numeric.rep([m + 1], 0),\n    Xj = [],\n    Xv = [];\n  var sol = _numeric.ccsTSolve;\n  var i,\n    j,\n    j0,\n    j1,\n    k,\n    J,\n    N = 0;\n  for (i = 0; i < m; ++i) {\n    k = 0;\n    j0 = Bi[i];\n    j1 = Bi[i + 1];\n    for (j = j0; j < j1; ++j) {\n      J = LUP.Pinv[Bj[j]];\n      bj[k] = J;\n      b[J] = Bv[j];\n      ++k;\n    }\n    bj.length = k;\n    sol(L, b, x, bj, xj);\n    for (j = bj.length - 1; j !== -1; --j) b[bj[j]] = 0;\n    sol(U, x, b, xj, bj);\n    if (flag) return b;\n    for (j = xj.length - 1; j !== -1; --j) x[xj[j]] = 0;\n    for (j = bj.length - 1; j !== -1; --j) {\n      J = bj[j];\n      Xj[N] = J;\n      Xv[N] = b[J];\n      b[J] = 0;\n      ++N;\n    }\n    Xi[i + 1] = N;\n  }\n  return [Xi, Xj, Xv];\n};\n\n_numeric.ccsbinop = function ccsbinop(body, setup) {\n  if (typeof setup === 'undefined') setup = '';\n  return Function(\n    'X',\n    'Y',\n    'var Xi = X[0], Xj = X[1], Xv = X[2];\\n' +\n      'var Yi = Y[0], Yj = Y[1], Yv = Y[2];\\n' +\n      'var n = Xi.length-1,m = Math.max(_numeric.sup(Xj),_numeric.sup(Yj))+1;\\n' +\n      'var Zi = _numeric.rep([n+1],0), Zj = [], Zv = [];\\n' +\n      'var x = _numeric.rep([m],0),y = _numeric.rep([m],0);\\n' +\n      'var xk,yk,zk;\\n' +\n      'var i,j,j0,j1,k,p=0;\\n' +\n      setup +\n      'for(i=0;i<n;++i) {\\n' +\n      '  j0 = Xi[i]; j1 = Xi[i+1];\\n' +\n      '  for(j=j0;j!==j1;++j) {\\n' +\n      '    k = Xj[j];\\n' +\n      '    x[k] = 1;\\n' +\n      '    Zj[p] = k;\\n' +\n      '    ++p;\\n' +\n      '  }\\n' +\n      '  j0 = Yi[i]; j1 = Yi[i+1];\\n' +\n      '  for(j=j0;j!==j1;++j) {\\n' +\n      '    k = Yj[j];\\n' +\n      '    y[k] = Yv[j];\\n' +\n      '    if(x[k] === 0) {\\n' +\n      '      Zj[p] = k;\\n' +\n      '      ++p;\\n' +\n      '    }\\n' +\n      '  }\\n' +\n      '  Zi[i+1] = p;\\n' +\n      '  j0 = Xi[i]; j1 = Xi[i+1];\\n' +\n      '  for(j=j0;j!==j1;++j) x[Xj[j]] = Xv[j];\\n' +\n      '  j0 = Zi[i]; j1 = Zi[i+1];\\n' +\n      '  for(j=j0;j!==j1;++j) {\\n' +\n      '    k = Zj[j];\\n' +\n      '    xk = x[k];\\n' +\n      '    yk = y[k];\\n' +\n      body +\n      '\\n' +\n      '    Zv[j] = zk;\\n' +\n      '  }\\n' +\n      '  j0 = Xi[i]; j1 = Xi[i+1];\\n' +\n      '  for(j=j0;j!==j1;++j) x[Xj[j]] = 0;\\n' +\n      '  j0 = Yi[i]; j1 = Yi[i+1];\\n' +\n      '  for(j=j0;j!==j1;++j) y[Yj[j]] = 0;\\n' +\n      '}\\n' +\n      'return [Zi,Zj,Zv];'\n  );\n};\n\n(function () {\n  var k, A, B, C;\n  for (k in _numeric.ops2) {\n    if (isFinite(eval('1' + _numeric.ops2[k] + '0'))) A = '[Y[0],Y[1],_numeric.' + k + '(X,Y[2])]';\n    else A = 'NaN';\n    if (isFinite(eval('0' + _numeric.ops2[k] + '1'))) B = '[X[0],X[1],_numeric.' + k + '(X[2],Y)]';\n    else B = 'NaN';\n    if (isFinite(eval('1' + _numeric.ops2[k] + '0')) && isFinite(eval('0' + _numeric.ops2[k] + '1'))) C = '_numeric.ccs' + k + 'MM(X,Y)';\n    else C = 'NaN';\n    _numeric['ccs' + k + 'MM'] = _numeric.ccsbinop('zk = xk ' + _numeric.ops2[k] + 'yk;');\n    _numeric['ccs' + k] = Function('X', 'Y', 'if(typeof X === \"number\") return ' + A + ';\\n' + 'if(typeof Y === \"number\") return ' + B + ';\\n' + 'return ' + C + ';\\n');\n  }\n})();\n\n_numeric.ccsScatter = function ccsScatter(A) {\n  var Ai = A[0],\n    Aj = A[1],\n    Av = A[2];\n  var n = _numeric.sup(Aj) + 1,\n    m = Ai.length;\n  var Ri = _numeric.rep([n], 0),\n    Rj = Array(m),\n    Rv = Array(m);\n  var counts = _numeric.rep([n], 0),\n    i;\n  for (i = 0; i < m; ++i) counts[Aj[i]]++;\n  for (i = 0; i < n; ++i) Ri[i + 1] = Ri[i] + counts[i];\n  var ptr = Ri.slice(0),\n    k,\n    Aii;\n  for (i = 0; i < m; ++i) {\n    Aii = Aj[i];\n    k = ptr[Aii];\n    Rj[k] = Ai[i];\n    Rv[k] = Av[i];\n    ptr[Aii] = ptr[Aii] + 1;\n  }\n  return [Ri, Rj, Rv];\n};\n\n_numeric.ccsGather = function ccsGather(A) {\n  var Ai = A[0],\n    Aj = A[1],\n    Av = A[2];\n  var n = Ai.length - 1,\n    m = Aj.length;\n  var Ri = Array(m),\n    Rj = Array(m),\n    Rv = Array(m);\n  var i, j, j0, j1, p;\n  p = 0;\n  for (i = 0; i < n; ++i) {\n    j0 = Ai[i];\n    j1 = Ai[i + 1];\n    for (j = j0; j !== j1; ++j) {\n      Rj[p] = i;\n      Ri[p] = Aj[j];\n      Rv[p] = Av[j];\n      ++p;\n    }\n  }\n  return [Ri, Rj, Rv];\n};\n\n// The following sparse linear algebra routines are deprecated.\n\n_numeric.sdim = function dim(A, ret, k) {\n  if (typeof ret === 'undefined') {\n    ret = [];\n  }\n  if (typeof A !== 'object') return ret;\n  if (typeof k === 'undefined') {\n    k = 0;\n  }\n  if (!(k in ret)) {\n    ret[k] = 0;\n  }\n  if (A.length > ret[k]) ret[k] = A.length;\n  var i;\n  for (i in A) {\n    if (A.hasOwnProperty(i)) dim(A[i], ret, k + 1);\n  }\n  return ret;\n};\n\n_numeric.sclone = function clone(A, k, n) {\n  if (typeof k === 'undefined') {\n    k = 0;\n  }\n  if (typeof n === 'undefined') {\n    n = _numeric.sdim(A).length;\n  }\n  var i,\n    ret = Array(A.length);\n  if (k === n - 1) {\n    for (i in A) {\n      if (A.hasOwnProperty(i)) ret[i] = A[i];\n    }\n    return ret;\n  }\n  for (i in A) {\n    if (A.hasOwnProperty(i)) ret[i] = clone(A[i], k + 1, n);\n  }\n  return ret;\n};\n\n_numeric.sdiag = function diag(d) {\n  var n = d.length,\n    i,\n    ret = Array(n),\n    i1,\n    i2,\n    i3;\n  for (i = n - 1; i >= 1; i -= 2) {\n    i1 = i - 1;\n    ret[i] = [];\n    ret[i][i] = d[i];\n    ret[i1] = [];\n    ret[i1][i1] = d[i1];\n  }\n  if (i === 0) {\n    ret[0] = [];\n    ret[0][0] = d[i];\n  }\n  return ret;\n};\n\n_numeric.sidentity = function identity(n) {\n  return _numeric.sdiag(_numeric.rep([n], 1));\n};\n\n_numeric.stranspose = function transpose(A) {\n  var ret = [],\n    n = A.length,\n    i,\n    j,\n    Ai;\n  for (i in A) {\n    if (!A.hasOwnProperty(i)) continue;\n    Ai = A[i];\n    for (j in Ai) {\n      if (!Ai.hasOwnProperty(j)) continue;\n      if (typeof ret[j] !== 'object') {\n        ret[j] = [];\n      }\n      ret[j][i] = Ai[j];\n    }\n  }\n  return ret;\n};\n\n_numeric.sLUP = function LUP(A, tol) {\n  throw new Error('The function _numeric.sLUP had a bug in it and has been removed. Please use the new _numeric.ccsLUP function instead.');\n};\n\n_numeric.sdotMM = function dotMM(A, B) {\n  var p = A.length,\n    q = B.length,\n    BT = _numeric.stranspose(B),\n    r = BT.length,\n    Ai,\n    BTk;\n  var i, j, k, accum;\n  var ret = Array(p),\n    reti;\n  for (i = p - 1; i >= 0; i--) {\n    reti = [];\n    Ai = A[i];\n    for (k = r - 1; k >= 0; k--) {\n      accum = 0;\n      BTk = BT[k];\n      for (j in Ai) {\n        if (!Ai.hasOwnProperty(j)) continue;\n        if (j in BTk) {\n          accum += Ai[j] * BTk[j];\n        }\n      }\n      if (accum) reti[k] = accum;\n    }\n    ret[i] = reti;\n  }\n  return ret;\n};\n\n_numeric.sdotMV = function dotMV(A, x) {\n  var p = A.length,\n    Ai,\n    i,\n    j;\n  var ret = Array(p),\n    accum;\n  for (i = p - 1; i >= 0; i--) {\n    Ai = A[i];\n    accum = 0;\n    for (j in Ai) {\n      if (!Ai.hasOwnProperty(j)) continue;\n      if (x[j]) accum += Ai[j] * x[j];\n    }\n    if (accum) ret[i] = accum;\n  }\n  return ret;\n};\n\n_numeric.sdotVM = function dotMV(x, A) {\n  var i, j, Ai, alpha;\n  var ret = [],\n    accum;\n  for (i in x) {\n    if (!x.hasOwnProperty(i)) continue;\n    Ai = A[i];\n    alpha = x[i];\n    for (j in Ai) {\n      if (!Ai.hasOwnProperty(j)) continue;\n      if (!ret[j]) {\n        ret[j] = 0;\n      }\n      ret[j] += alpha * Ai[j];\n    }\n  }\n  return ret;\n};\n\n_numeric.sdotVV = function dotVV(x, y) {\n  var i,\n    ret = 0;\n  for (i in x) {\n    if (x[i] && y[i]) ret += x[i] * y[i];\n  }\n  return ret;\n};\n\n_numeric.sdot = function dot(A, B) {\n  var m = _numeric.sdim(A).length,\n    n = _numeric.sdim(B).length;\n  var k = m * 1000 + n;\n  switch (k) {\n    case 0:\n      return A * B;\n    case 1001:\n      return _numeric.sdotVV(A, B);\n    case 2001:\n      return _numeric.sdotMV(A, B);\n    case 1002:\n      return _numeric.sdotVM(A, B);\n    case 2002:\n      return _numeric.sdotMM(A, B);\n    default:\n      throw new Error('_numeric.sdot not implemented for tensors of order ' + m + ' and ' + n);\n  }\n};\n\n_numeric.sscatter = function scatter(V) {\n  var n = V[0].length,\n    Vij,\n    i,\n    j,\n    m = V.length,\n    A = [],\n    Aj;\n  for (i = n - 1; i >= 0; --i) {\n    if (!V[m - 1][i]) continue;\n    Aj = A;\n    for (j = 0; j < m - 2; j++) {\n      Vij = V[j][i];\n      if (!Aj[Vij]) Aj[Vij] = [];\n      Aj = Aj[Vij];\n    }\n    Aj[V[j][i]] = V[j + 1][i];\n  }\n  return A;\n};\n\n_numeric.sgather = function gather(A, ret, k) {\n  if (typeof ret === 'undefined') ret = [];\n  if (typeof k === 'undefined') k = [];\n  var n, i, Ai;\n  n = k.length;\n  for (i in A) {\n    if (A.hasOwnProperty(i)) {\n      k[n] = parseInt(i);\n      Ai = A[i];\n      if (typeof Ai === 'number') {\n        if (Ai) {\n          if (ret.length === 0) {\n            for (i = n + 1; i >= 0; --i) ret[i] = [];\n          }\n          for (i = n; i >= 0; --i) ret[i].push(k[i]);\n          ret[n + 1].push(Ai);\n        }\n      } else gather(Ai, ret, k);\n    }\n  }\n  if (k.length > n) k.pop();\n  return ret;\n};\n\n// 6. Coordinate matrices\n_numeric.cLU = function LU(A) {\n  var I = A[0],\n    J = A[1],\n    V = A[2];\n  var p = I.length,\n    m = 0,\n    i,\n    j,\n    k,\n    a,\n    b,\n    c;\n  for (i = 0; i < p; i++) if (I[i] > m) m = I[i];\n  m++;\n  var L = Array(m),\n    U = Array(m),\n    left = _numeric.rep([m], Infinity),\n    right = _numeric.rep([m], -Infinity);\n  var Ui, Uj, alpha;\n  for (k = 0; k < p; k++) {\n    i = I[k];\n    j = J[k];\n    if (j < left[i]) left[i] = j;\n    if (j > right[i]) right[i] = j;\n  }\n  for (i = 0; i < m - 1; i++) {\n    if (right[i] > right[i + 1]) right[i + 1] = right[i];\n  }\n  for (i = m - 1; i >= 1; i--) {\n    if (left[i] < left[i - 1]) left[i - 1] = left[i];\n  }\n  var countL = 0,\n    countU = 0;\n  for (i = 0; i < m; i++) {\n    U[i] = _numeric.rep([right[i] - left[i] + 1], 0);\n    L[i] = _numeric.rep([i - left[i]], 0);\n    countL += i - left[i] + 1;\n    countU += right[i] - i + 1;\n  }\n  for (k = 0; k < p; k++) {\n    i = I[k];\n    U[i][J[k] - left[i]] = V[k];\n  }\n  for (i = 0; i < m - 1; i++) {\n    a = i - left[i];\n    Ui = U[i];\n    for (j = i + 1; left[j] <= i && j < m; j++) {\n      b = i - left[j];\n      c = right[i] - i;\n      Uj = U[j];\n      alpha = Uj[b] / Ui[a];\n      if (alpha) {\n        for (k = 1; k <= c; k++) {\n          Uj[k + b] -= alpha * Ui[k + a];\n        }\n        L[j][i - left[j]] = alpha;\n      }\n    }\n  }\n  var Ui = [],\n    Uj = [],\n    Uv = [],\n    Li = [],\n    Lj = [],\n    Lv = [];\n  var p, q, foo;\n  p = 0;\n  q = 0;\n  for (i = 0; i < m; i++) {\n    a = left[i];\n    b = right[i];\n    foo = U[i];\n    for (j = i; j <= b; j++) {\n      if (foo[j - a]) {\n        Ui[p] = i;\n        Uj[p] = j;\n        Uv[p] = foo[j - a];\n        p++;\n      }\n    }\n    foo = L[i];\n    for (j = a; j < i; j++) {\n      if (foo[j - a]) {\n        Li[q] = i;\n        Lj[q] = j;\n        Lv[q] = foo[j - a];\n        q++;\n      }\n    }\n    Li[q] = i;\n    Lj[q] = i;\n    Lv[q] = 1;\n    q++;\n  }\n  return { U: [Ui, Uj, Uv], L: [Li, Lj, Lv] };\n};\n\n_numeric.cLUsolve = function LUsolve(lu, b) {\n  var L = lu.L,\n    U = lu.U,\n    ret = _numeric.clone(b);\n  var Li = L[0],\n    Lj = L[1],\n    Lv = L[2];\n  var Ui = U[0],\n    Uj = U[1],\n    Uv = U[2];\n  var p = Ui.length,\n    q = Li.length;\n  var m = ret.length,\n    i,\n    j,\n    k;\n  k = 0;\n  for (i = 0; i < m; i++) {\n    while (Lj[k] < i) {\n      ret[i] -= Lv[k] * ret[Lj[k]];\n      k++;\n    }\n    k++;\n  }\n  k = p - 1;\n  for (i = m - 1; i >= 0; i--) {\n    while (Uj[k] > i) {\n      ret[i] -= Uv[k] * ret[Uj[k]];\n      k--;\n    }\n    ret[i] /= Uv[k];\n    k--;\n  }\n  return ret;\n};\n\n_numeric.cgrid = function grid(n, shape) {\n  if (typeof n === 'number') n = [n, n];\n  var ret = _numeric.rep(n, -1);\n  var i, j, count;\n  if (typeof shape !== 'function') {\n    switch (shape) {\n      case 'L':\n        shape = function (i, j) {\n          return i >= n[0] / 2 || j < n[1] / 2;\n        };\n        break;\n      default:\n        shape = function (i, j) {\n          return true;\n        };\n        break;\n    }\n  }\n  count = 0;\n  for (i = 1; i < n[0] - 1; i++)\n    for (j = 1; j < n[1] - 1; j++)\n      if (shape(i, j)) {\n        ret[i][j] = count;\n        count++;\n      }\n  return ret;\n};\n\n_numeric.cdelsq = function delsq(g) {\n  var dir = [\n    [-1, 0],\n    [0, -1],\n    [0, 1],\n    [1, 0],\n  ];\n  var s = _numeric.dim(g),\n    m = s[0],\n    n = s[1],\n    i,\n    j,\n    k,\n    p,\n    q;\n  var Li = [],\n    Lj = [],\n    Lv = [];\n  for (i = 1; i < m - 1; i++)\n    for (j = 1; j < n - 1; j++) {\n      if (g[i][j] < 0) continue;\n      for (k = 0; k < 4; k++) {\n        p = i + dir[k][0];\n        q = j + dir[k][1];\n        if (g[p][q] < 0) continue;\n        Li.push(g[i][j]);\n        Lj.push(g[p][q]);\n        Lv.push(-1);\n      }\n      Li.push(g[i][j]);\n      Lj.push(g[i][j]);\n      Lv.push(4);\n    }\n  return [Li, Lj, Lv];\n};\n\n_numeric.cdotMV = function dotMV(A, x) {\n  var ret,\n    Ai = A[0],\n    Aj = A[1],\n    Av = A[2],\n    k,\n    p = Ai.length,\n    N;\n  N = 0;\n  for (k = 0; k < p; k++) {\n    if (Ai[k] > N) N = Ai[k];\n  }\n  N++;\n  ret = _numeric.rep([N], 0);\n  for (k = 0; k < p; k++) {\n    ret[Ai[k]] += Av[k] * x[Aj[k]];\n  }\n  return ret;\n};\n\n// 7. Splines\n\n_numeric.Spline = function Spline(x, yl, yr, kl, kr) {\n  this.x = x;\n  this.yl = yl;\n  this.yr = yr;\n  this.kl = kl;\n  this.kr = kr;\n};\n_numeric.Spline.prototype._at = function _at(x1, p) {\n  var x = this.x;\n  var yl = this.yl;\n  var yr = this.yr;\n  var kl = this.kl;\n  var kr = this.kr;\n  var x1, a, b, t;\n  var add = _numeric.add,\n    sub = _numeric.sub,\n    mul = _numeric.mul;\n  a = sub(mul(kl[p], x[p + 1] - x[p]), sub(yr[p + 1], yl[p]));\n  b = add(mul(kr[p + 1], x[p] - x[p + 1]), sub(yr[p + 1], yl[p]));\n  t = (x1 - x[p]) / (x[p + 1] - x[p]);\n  var s = t * (1 - t);\n  return add(add(add(mul(1 - t, yl[p]), mul(t, yr[p + 1])), mul(a, s * (1 - t))), mul(b, s * t));\n};\n_numeric.Spline.prototype.at = function at(x0) {\n  if (typeof x0 === 'number') {\n    var x = this.x;\n    var n = x.length;\n    var p,\n      q,\n      mid,\n      floor = Math.floor,\n      a,\n      b,\n      t;\n    p = 0;\n    q = n - 1;\n    while (q - p > 1) {\n      mid = floor((p + q) / 2);\n      if (x[mid] <= x0) p = mid;\n      else q = mid;\n    }\n    return this._at(x0, p);\n  }\n  var n = x0.length,\n    i,\n    ret = Array(n);\n  for (i = n - 1; i !== -1; --i) ret[i] = this.at(x0[i]);\n  return ret;\n};\n_numeric.Spline.prototype.diff = function diff() {\n  var x = this.x;\n  var yl = this.yl;\n  var yr = this.yr;\n  var kl = this.kl;\n  var kr = this.kr;\n  var n = yl.length;\n  var i, dx, dy;\n  var zl = kl,\n    zr = kr,\n    pl = Array(n),\n    pr = Array(n);\n  var add = _numeric.add,\n    mul = _numeric.mul,\n    div = _numeric.div,\n    sub = _numeric.sub;\n  for (i = n - 1; i !== -1; --i) {\n    dx = x[i + 1] - x[i];\n    dy = sub(yr[i + 1], yl[i]);\n    pl[i] = div(add(mul(dy, 6), mul(kl[i], -4 * dx), mul(kr[i + 1], -2 * dx)), dx * dx);\n    pr[i + 1] = div(add(mul(dy, -6), mul(kl[i], 2 * dx), mul(kr[i + 1], 4 * dx)), dx * dx);\n  }\n  return new _numeric.Spline(x, zl, zr, pl, pr);\n};\n_numeric.Spline.prototype.roots = function roots() {\n  function sqr(x) {\n    return x * x;\n  }\n  function heval(y0, y1, k0, k1, x) {\n    var A = k0 * 2 - (y1 - y0);\n    var B = -k1 * 2 + (y1 - y0);\n    var t = (x + 1) * 0.5;\n    var s = t * (1 - t);\n    return (1 - t) * y0 + t * y1 + A * s * (1 - t) + B * s * t;\n  }\n  var ret = [];\n  var x = this.x,\n    yl = this.yl,\n    yr = this.yr,\n    kl = this.kl,\n    kr = this.kr;\n  if (typeof yl[0] === 'number') {\n    yl = [yl];\n    yr = [yr];\n    kl = [kl];\n    kr = [kr];\n  }\n  var m = yl.length,\n    n = x.length - 1,\n    i,\n    j,\n    k,\n    y,\n    s,\n    t;\n  var ai,\n    bi,\n    ci,\n    di,\n    ret = Array(m),\n    ri,\n    k0,\n    k1,\n    y0,\n    y1,\n    A,\n    B,\n    D,\n    dx,\n    cx,\n    stops,\n    z0,\n    z1,\n    zm,\n    t0,\n    t1,\n    tm;\n  var sqrt = Math.sqrt;\n  for (i = 0; i !== m; ++i) {\n    ai = yl[i];\n    bi = yr[i];\n    ci = kl[i];\n    di = kr[i];\n    ri = [];\n    for (j = 0; j !== n; j++) {\n      if (j > 0 && bi[j] * ai[j] < 0) ri.push(x[j]);\n      dx = x[j + 1] - x[j];\n      cx = x[j];\n      y0 = ai[j];\n      y1 = bi[j + 1];\n      k0 = ci[j] / dx;\n      k1 = di[j + 1] / dx;\n      D = sqr(k0 - k1 + 3 * (y0 - y1)) + 12 * k1 * y0;\n      A = k1 + 3 * y0 + 2 * k0 - 3 * y1;\n      B = 3 * (k1 + k0 + 2 * (y0 - y1));\n      if (D <= 0) {\n        z0 = A / B;\n        if (z0 > x[j] && z0 < x[j + 1]) stops = [x[j], z0, x[j + 1]];\n        else stops = [x[j], x[j + 1]];\n      } else {\n        z0 = (A - sqrt(D)) / B;\n        z1 = (A + sqrt(D)) / B;\n        stops = [x[j]];\n        if (z0 > x[j] && z0 < x[j + 1]) stops.push(z0);\n        if (z1 > x[j] && z1 < x[j + 1]) stops.push(z1);\n        stops.push(x[j + 1]);\n      }\n      t0 = stops[0];\n      z0 = this._at(t0, j);\n      for (k = 0; k < stops.length - 1; k++) {\n        t1 = stops[k + 1];\n        z1 = this._at(t1, j);\n        if (z0 === 0) {\n          ri.push(t0);\n          t0 = t1;\n          z0 = z1;\n          continue;\n        }\n        if (z1 === 0 || z0 * z1 > 0) {\n          t0 = t1;\n          z0 = z1;\n          continue;\n        }\n        var side = 0;\n        while (1) {\n          tm = (z0 * t1 - z1 * t0) / (z0 - z1);\n          if (tm <= t0 || tm >= t1) {\n            break;\n          }\n          zm = this._at(tm, j);\n          if (zm * z1 > 0) {\n            t1 = tm;\n            z1 = zm;\n            if (side === -1) z0 *= 0.5;\n            side = -1;\n          } else if (zm * z0 > 0) {\n            t0 = tm;\n            z0 = zm;\n            if (side === 1) z1 *= 0.5;\n            side = 1;\n          } else break;\n        }\n        ri.push(tm);\n        t0 = stops[k + 1];\n        z0 = this._at(t0, j);\n      }\n      if (z1 === 0) ri.push(t1);\n    }\n    ret[i] = ri;\n  }\n  if (typeof this.yl[0] === 'number') return ret[0];\n  return ret;\n};\n_numeric.spline = function spline(x, y, k1, kn) {\n  var n = x.length,\n    b = [],\n    dx = [],\n    dy = [];\n  var i;\n  var sub = _numeric.sub,\n    mul = _numeric.mul,\n    add = _numeric.add;\n  for (i = n - 2; i >= 0; i--) {\n    dx[i] = x[i + 1] - x[i];\n    dy[i] = sub(y[i + 1], y[i]);\n  }\n  if (typeof k1 === 'string' || typeof kn === 'string') {\n    k1 = kn = 'periodic';\n  }\n  // Build sparse tridiagonal system\n  var T = [[], [], []];\n  switch (typeof k1) {\n    case 'undefined':\n      b[0] = mul(3 / (dx[0] * dx[0]), dy[0]);\n      T[0].push(0, 0);\n      T[1].push(0, 1);\n      T[2].push(2 / dx[0], 1 / dx[0]);\n      break;\n    case 'string':\n      b[0] = add(mul(3 / (dx[n - 2] * dx[n - 2]), dy[n - 2]), mul(3 / (dx[0] * dx[0]), dy[0]));\n      T[0].push(0, 0, 0);\n      T[1].push(n - 2, 0, 1);\n      T[2].push(1 / dx[n - 2], 2 / dx[n - 2] + 2 / dx[0], 1 / dx[0]);\n      break;\n    default:\n      b[0] = k1;\n      T[0].push(0);\n      T[1].push(0);\n      T[2].push(1);\n      break;\n  }\n  for (i = 1; i < n - 1; i++) {\n    b[i] = add(mul(3 / (dx[i - 1] * dx[i - 1]), dy[i - 1]), mul(3 / (dx[i] * dx[i]), dy[i]));\n    T[0].push(i, i, i);\n    T[1].push(i - 1, i, i + 1);\n    T[2].push(1 / dx[i - 1], 2 / dx[i - 1] + 2 / dx[i], 1 / dx[i]);\n  }\n  switch (typeof kn) {\n    case 'undefined':\n      b[n - 1] = mul(3 / (dx[n - 2] * dx[n - 2]), dy[n - 2]);\n      T[0].push(n - 1, n - 1);\n      T[1].push(n - 2, n - 1);\n      T[2].push(1 / dx[n - 2], 2 / dx[n - 2]);\n      break;\n    case 'string':\n      T[1][T[1].length - 1] = 0;\n      break;\n    default:\n      b[n - 1] = kn;\n      T[0].push(n - 1);\n      T[1].push(n - 1);\n      T[2].push(1);\n      break;\n  }\n  if (typeof b[0] !== 'number') b = _numeric.transpose(b);\n  else b = [b];\n  var k = Array(b.length);\n  if (typeof k1 === 'string') {\n    for (i = k.length - 1; i !== -1; --i) {\n      k[i] = _numeric.ccsLUPSolve(_numeric.ccsLUP(_numeric.ccsScatter(T)), b[i]);\n      k[i][n - 1] = k[i][0];\n    }\n  } else {\n    for (i = k.length - 1; i !== -1; --i) {\n      k[i] = _numeric.cLUsolve(_numeric.cLU(T), b[i]);\n    }\n  }\n  if (typeof y[0] === 'number') k = k[0];\n  else k = _numeric.transpose(k);\n  return new _numeric.Spline(x, y, y, k, k);\n};\n\n// 8. FFT\n_numeric.fftpow2 = function fftpow2(x, y) {\n  var n = x.length;\n  if (n === 1) return;\n  var cos = Math.cos,\n    sin = Math.sin,\n    i,\n    j;\n  var xe = Array(n / 2),\n    ye = Array(n / 2),\n    xo = Array(n / 2),\n    yo = Array(n / 2);\n  j = n / 2;\n  for (i = n - 1; i !== -1; --i) {\n    --j;\n    xo[j] = x[i];\n    yo[j] = y[i];\n    --i;\n    xe[j] = x[i];\n    ye[j] = y[i];\n  }\n  fftpow2(xe, ye);\n  fftpow2(xo, yo);\n  j = n / 2;\n  var t,\n    k = -6.2831853071795864769252867665590057683943387987502116419 / n,\n    ci,\n    si;\n  for (i = n - 1; i !== -1; --i) {\n    --j;\n    if (j === -1) j = n / 2 - 1;\n    t = k * i;\n    ci = cos(t);\n    si = sin(t);\n    x[i] = xe[j] + ci * xo[j] - si * yo[j];\n    y[i] = ye[j] + ci * yo[j] + si * xo[j];\n  }\n};\n_numeric._ifftpow2 = function _ifftpow2(x, y) {\n  var n = x.length;\n  if (n === 1) return;\n  var cos = Math.cos,\n    sin = Math.sin,\n    i,\n    j;\n  var xe = Array(n / 2),\n    ye = Array(n / 2),\n    xo = Array(n / 2),\n    yo = Array(n / 2);\n  j = n / 2;\n  for (i = n - 1; i !== -1; --i) {\n    --j;\n    xo[j] = x[i];\n    yo[j] = y[i];\n    --i;\n    xe[j] = x[i];\n    ye[j] = y[i];\n  }\n  _ifftpow2(xe, ye);\n  _ifftpow2(xo, yo);\n  j = n / 2;\n  var t,\n    k = 6.2831853071795864769252867665590057683943387987502116419 / n,\n    ci,\n    si;\n  for (i = n - 1; i !== -1; --i) {\n    --j;\n    if (j === -1) j = n / 2 - 1;\n    t = k * i;\n    ci = cos(t);\n    si = sin(t);\n    x[i] = xe[j] + ci * xo[j] - si * yo[j];\n    y[i] = ye[j] + ci * yo[j] + si * xo[j];\n  }\n};\n_numeric.ifftpow2 = function ifftpow2(x, y) {\n  _numeric._ifftpow2(x, y);\n  _numeric.diveq(x, x.length);\n  _numeric.diveq(y, y.length);\n};\n_numeric.convpow2 = function convpow2(ax, ay, bx, by) {\n  _numeric.fftpow2(ax, ay);\n  _numeric.fftpow2(bx, by);\n  var i,\n    n = ax.length,\n    axi,\n    bxi,\n    ayi,\n    byi;\n  for (i = n - 1; i !== -1; --i) {\n    axi = ax[i];\n    ayi = ay[i];\n    bxi = bx[i];\n    byi = by[i];\n    ax[i] = axi * bxi - ayi * byi;\n    ay[i] = axi * byi + ayi * bxi;\n  }\n  _numeric.ifftpow2(ax, ay);\n};\n_numeric.T.prototype.fft = function fft() {\n  var x = this.x,\n    y = this.y;\n  var n = x.length,\n    log = Math.log,\n    log2 = log(2),\n    p = Math.ceil(log(2 * n - 1) / log2),\n    m = Math.pow(2, p);\n  var cx = _numeric.rep([m], 0),\n    cy = _numeric.rep([m], 0),\n    cos = Math.cos,\n    sin = Math.sin;\n  var k,\n    c = -3.14159265358979323846264338327950288419716939937510582 / n,\n    t;\n  var a = _numeric.rep([m], 0),\n    b = _numeric.rep([m], 0),\n    nhalf = Math.floor(n / 2);\n  for (k = 0; k < n; k++) a[k] = x[k];\n  if (typeof y !== 'undefined') for (k = 0; k < n; k++) b[k] = y[k];\n  cx[0] = 1;\n  for (k = 1; k <= m / 2; k++) {\n    t = c * k * k;\n    cx[k] = cos(t);\n    cy[k] = sin(t);\n    cx[m - k] = cos(t);\n    cy[m - k] = sin(t);\n  }\n  var X = new _numeric.T(a, b),\n    Y = new _numeric.T(cx, cy);\n  X = X.mul(Y);\n  _numeric.convpow2(X.x, X.y, _numeric.clone(Y.x), _numeric.neg(Y.y));\n  X = X.mul(Y);\n  X.x.length = n;\n  X.y.length = n;\n  return X;\n};\n_numeric.T.prototype.ifft = function ifft() {\n  var x = this.x,\n    y = this.y;\n  var n = x.length,\n    log = Math.log,\n    log2 = log(2),\n    p = Math.ceil(log(2 * n - 1) / log2),\n    m = Math.pow(2, p);\n  var cx = _numeric.rep([m], 0),\n    cy = _numeric.rep([m], 0),\n    cos = Math.cos,\n    sin = Math.sin;\n  var k,\n    c = 3.14159265358979323846264338327950288419716939937510582 / n,\n    t;\n  var a = _numeric.rep([m], 0),\n    b = _numeric.rep([m], 0),\n    nhalf = Math.floor(n / 2);\n  for (k = 0; k < n; k++) a[k] = x[k];\n  if (typeof y !== 'undefined') for (k = 0; k < n; k++) b[k] = y[k];\n  cx[0] = 1;\n  for (k = 1; k <= m / 2; k++) {\n    t = c * k * k;\n    cx[k] = cos(t);\n    cy[k] = sin(t);\n    cx[m - k] = cos(t);\n    cy[m - k] = sin(t);\n  }\n  var X = new _numeric.T(a, b),\n    Y = new _numeric.T(cx, cy);\n  X = X.mul(Y);\n  _numeric.convpow2(X.x, X.y, _numeric.clone(Y.x), _numeric.neg(Y.y));\n  X = X.mul(Y);\n  X.x.length = n;\n  X.y.length = n;\n  return X.div(n);\n};\n\n//9. Unconstrained optimization\n_numeric.gradient = function gradient(f, x) {\n  var n = x.length;\n  var f0 = f(x);\n  if (isNaN(f0)) throw new Error('gradient: f(x) is a NaN!');\n  var max = Math.max;\n  var i,\n    x0 = _numeric.clone(x),\n    f1,\n    f2,\n    J = Array(n);\n  var div = _numeric.div,\n    sub = _numeric.sub,\n    errest,\n    roundoff,\n    max = Math.max,\n    eps = 1e-3,\n    abs = Math.abs,\n    min = Math.min;\n  var t0,\n    t1,\n    t2,\n    it = 0,\n    d1,\n    d2,\n    N;\n  for (i = 0; i < n; i++) {\n    var h = max(1e-6 * f0, 1e-8);\n    while (1) {\n      ++it;\n      if (it > 20) {\n        throw new Error('Numerical gradient fails');\n      }\n      x0[i] = x[i] + h;\n      f1 = f(x0);\n      x0[i] = x[i] - h;\n      f2 = f(x0);\n      x0[i] = x[i];\n      if (isNaN(f1) || isNaN(f2)) {\n        h /= 16;\n        continue;\n      }\n      J[i] = (f1 - f2) / (2 * h);\n      t0 = x[i] - h;\n      t1 = x[i];\n      t2 = x[i] + h;\n      d1 = (f1 - f0) / h;\n      d2 = (f0 - f2) / h;\n      N = max(abs(J[i]), abs(f0), abs(f1), abs(f2), abs(t0), abs(t1), abs(t2), 1e-8);\n      errest = min(max(abs(d1 - J[i]), abs(d2 - J[i]), abs(d1 - d2)) / N, h / N);\n      if (errest > eps) {\n        h /= 16;\n      } else break;\n    }\n  }\n  return J;\n};\n\n_numeric.uncmin = function uncmin(f, x0, tol, gradient, maxit, callback, options) {\n  var grad = _numeric.gradient;\n  if (typeof options === 'undefined') {\n    options = {};\n  }\n  if (typeof tol === 'undefined') {\n    tol = 1e-8;\n  }\n  if (typeof gradient === 'undefined') {\n    gradient = function (x) {\n      return grad(f, x);\n    };\n  }\n  if (typeof maxit === 'undefined') maxit = 1000;\n  x0 = _numeric.clone(x0);\n  var n = x0.length;\n  var f0 = f(x0),\n    f1,\n    df0;\n  if (isNaN(f0)) throw new Error('uncmin: f(x0) is a NaN!');\n  var max = Math.max,\n    norm2 = _numeric.norm2;\n  tol = max(tol, _numeric.epsilon);\n  var step,\n    g0,\n    g1,\n    H1 = options.Hinv || _numeric.identity(n);\n  var dot = _numeric.dot,\n    inv = _numeric.inv,\n    sub = _numeric.sub,\n    add = _numeric.add,\n    ten = _numeric.tensor,\n    div = _numeric.div,\n    mul = _numeric.mul;\n  var all = _numeric.all,\n    isfinite = _numeric.isFinite,\n    neg = _numeric.neg;\n  var it = 0,\n    i,\n    s,\n    x1,\n    y,\n    Hy,\n    Hs,\n    ys,\n    i0,\n    t,\n    nstep,\n    t1,\n    t2;\n  var msg = '';\n  g0 = gradient(x0);\n  while (it < maxit) {\n    if (typeof callback === 'function') {\n      if (callback(it, x0, f0, g0, H1)) {\n        msg = 'Callback returned true';\n        break;\n      }\n    }\n    if (!all(isfinite(g0))) {\n      msg = 'Gradient has Infinity or NaN';\n      break;\n    }\n    step = neg(dot(H1, g0));\n    if (!all(isfinite(step))) {\n      msg = 'Search direction has Infinity or NaN';\n      break;\n    }\n    nstep = norm2(step);\n    if (nstep < tol) {\n      msg = 'Newton step smaller than tol';\n      break;\n    }\n    t = 1;\n    df0 = dot(g0, step);\n    // line search\n    x1 = x0;\n    while (it < maxit) {\n      if (t * nstep < tol) {\n        break;\n      }\n      s = mul(step, t);\n      x1 = add(x0, s);\n      f1 = f(x1);\n      if (f1 - f0 >= 0.1 * t * df0 || isNaN(f1)) {\n        t *= 0.5;\n        ++it;\n        continue;\n      }\n      break;\n    }\n    if (t * nstep < tol) {\n      msg = 'Line search step size smaller than tol';\n      break;\n    }\n    if (it === maxit) {\n      msg = 'maxit reached during line search';\n      break;\n    }\n    g1 = gradient(x1);\n    y = sub(g1, g0);\n    ys = dot(y, s);\n    Hy = dot(H1, y);\n    H1 = sub(add(H1, mul((ys + dot(y, Hy)) / (ys * ys), ten(s, s))), div(add(ten(Hy, s), ten(s, Hy)), ys));\n    x0 = x1;\n    f0 = f1;\n    g0 = g1;\n    ++it;\n  }\n  return { solution: x0, f: f0, gradient: g0, invHessian: H1, iterations: it, message: msg };\n};\n\n// 10. Ode solver (Dormand-Prince)\n_numeric.Dopri = function Dopri(x, y, f, ymid, iterations, msg, events) {\n  this.x = x;\n  this.y = y;\n  this.f = f;\n  this.ymid = ymid;\n  this.iterations = iterations;\n  this.events = events;\n  this.message = msg;\n};\n_numeric.Dopri.prototype._at = function _at(xi, j) {\n  function sqr(x) {\n    return x * x;\n  }\n  var sol = this;\n  var xs = sol.x;\n  var ys = sol.y;\n  var k1 = sol.f;\n  var ymid = sol.ymid;\n  var n = xs.length;\n  var x0, x1, xh, y0, y1, yh, xi;\n  var floor = Math.floor,\n    h;\n  var c = 0.5;\n  var add = _numeric.add,\n    mul = _numeric.mul,\n    sub = _numeric.sub,\n    p,\n    q,\n    w;\n  x0 = xs[j];\n  x1 = xs[j + 1];\n  y0 = ys[j];\n  y1 = ys[j + 1];\n  h = x1 - x0;\n  xh = x0 + c * h;\n  yh = ymid[j];\n  p = sub(k1[j], mul(y0, 1 / (x0 - xh) + 2 / (x0 - x1)));\n  q = sub(k1[j + 1], mul(y1, 1 / (x1 - xh) + 2 / (x1 - x0)));\n  w = [\n    (sqr(xi - x1) * (xi - xh)) / sqr(x0 - x1) / (x0 - xh),\n    (sqr(xi - x0) * sqr(xi - x1)) / sqr(x0 - xh) / sqr(x1 - xh),\n    (sqr(xi - x0) * (xi - xh)) / sqr(x1 - x0) / (x1 - xh),\n    ((xi - x0) * sqr(xi - x1) * (xi - xh)) / sqr(x0 - x1) / (x0 - xh),\n    ((xi - x1) * sqr(xi - x0) * (xi - xh)) / sqr(x0 - x1) / (x1 - xh),\n  ];\n  return add(add(add(add(mul(y0, w[0]), mul(yh, w[1])), mul(y1, w[2])), mul(p, w[3])), mul(q, w[4]));\n};\n_numeric.Dopri.prototype.at = function at(x) {\n  var i,\n    j,\n    k,\n    floor = Math.floor;\n  if (typeof x !== 'number') {\n    var n = x.length,\n      ret = Array(n);\n    for (i = n - 1; i !== -1; --i) {\n      ret[i] = this.at(x[i]);\n    }\n    return ret;\n  }\n  var x0 = this.x;\n  i = 0;\n  j = x0.length - 1;\n  while (j - i > 1) {\n    k = floor(0.5 * (i + j));\n    if (x0[k] <= x) i = k;\n    else j = k;\n  }\n  return this._at(x, i);\n};\n\n_numeric.dopri = function dopri(x0, x1, y0, f, tol, maxit, event) {\n  if (typeof tol === 'undefined') {\n    tol = 1e-6;\n  }\n  if (typeof maxit === 'undefined') {\n    maxit = 1000;\n  }\n  var xs = [x0],\n    ys = [y0],\n    k1 = [f(x0, y0)],\n    k2,\n    k3,\n    k4,\n    k5,\n    k6,\n    k7,\n    ymid = [];\n  var A2 = 1 / 5;\n  var A3 = [3 / 40, 9 / 40];\n  var A4 = [44 / 45, -56 / 15, 32 / 9];\n  var A5 = [19372 / 6561, -25360 / 2187, 64448 / 6561, -212 / 729];\n  var A6 = [9017 / 3168, -355 / 33, 46732 / 5247, 49 / 176, -5103 / 18656];\n  var b = [35 / 384, 0, 500 / 1113, 125 / 192, -2187 / 6784, 11 / 84];\n  var bm = [(0.5 * 6025192743) / 30085553152, 0, (0.5 * 51252292925) / 65400821598, (0.5 * -2691868925) / 45128329728, (0.5 * 187940372067) / 1594534317056, (0.5 * -1776094331) / 19743644256, (0.5 * 11237099) / 235043384];\n  var c = [1 / 5, 3 / 10, 4 / 5, 8 / 9, 1, 1];\n  var e = [-71 / 57600, 0, 71 / 16695, -71 / 1920, 17253 / 339200, -22 / 525, 1 / 40];\n  var i = 0,\n    er,\n    j;\n  var h = (x1 - x0) / 10;\n  var it = 0;\n  var add = _numeric.add,\n    mul = _numeric.mul,\n    y1,\n    erinf;\n  var max = Math.max,\n    min = Math.min,\n    abs = Math.abs,\n    norminf = _numeric.norminf,\n    pow = Math.pow;\n  var any = _numeric.any,\n    lt = _numeric.lt,\n    and = _numeric.and,\n    sub = _numeric.sub;\n  var e0, e1, ev;\n  var ret = new _numeric.Dopri(xs, ys, k1, ymid, -1, '');\n  if (typeof event === 'function') e0 = event(x0, y0);\n  while (x0 < x1 && it < maxit) {\n    ++it;\n    if (x0 + h > x1) h = x1 - x0;\n    k2 = f(x0 + c[0] * h, add(y0, mul(A2 * h, k1[i])));\n    k3 = f(x0 + c[1] * h, add(add(y0, mul(A3[0] * h, k1[i])), mul(A3[1] * h, k2)));\n    k4 = f(x0 + c[2] * h, add(add(add(y0, mul(A4[0] * h, k1[i])), mul(A4[1] * h, k2)), mul(A4[2] * h, k3)));\n    k5 = f(x0 + c[3] * h, add(add(add(add(y0, mul(A5[0] * h, k1[i])), mul(A5[1] * h, k2)), mul(A5[2] * h, k3)), mul(A5[3] * h, k4)));\n    k6 = f(x0 + c[4] * h, add(add(add(add(add(y0, mul(A6[0] * h, k1[i])), mul(A6[1] * h, k2)), mul(A6[2] * h, k3)), mul(A6[3] * h, k4)), mul(A6[4] * h, k5)));\n    y1 = add(add(add(add(add(y0, mul(k1[i], h * b[0])), mul(k3, h * b[2])), mul(k4, h * b[3])), mul(k5, h * b[4])), mul(k6, h * b[5]));\n    k7 = f(x0 + h, y1);\n    er = add(add(add(add(add(mul(k1[i], h * e[0]), mul(k3, h * e[2])), mul(k4, h * e[3])), mul(k5, h * e[4])), mul(k6, h * e[5])), mul(k7, h * e[6]));\n    if (typeof er === 'number') erinf = abs(er);\n    else erinf = norminf(er);\n    if (erinf > tol) {\n      // reject\n      h = 0.2 * h * pow(tol / erinf, 0.25);\n      if (x0 + h === x0) {\n        ret.msg = 'Step size became too small';\n        break;\n      }\n      continue;\n    }\n    ymid[i] = add(add(add(add(add(add(y0, mul(k1[i], h * bm[0])), mul(k3, h * bm[2])), mul(k4, h * bm[3])), mul(k5, h * bm[4])), mul(k6, h * bm[5])), mul(k7, h * bm[6]));\n    ++i;\n    xs[i] = x0 + h;\n    ys[i] = y1;\n    k1[i] = k7;\n    if (typeof event === 'function') {\n      var yi,\n        xl = x0,\n        xr = x0 + 0.5 * h,\n        xi;\n      e1 = event(xr, ymid[i - 1]);\n      ev = and(lt(e0, 0), lt(0, e1));\n      if (!any(ev)) {\n        xl = xr;\n        xr = x0 + h;\n        e0 = e1;\n        e1 = event(xr, y1);\n        ev = and(lt(e0, 0), lt(0, e1));\n      }\n      if (any(ev)) {\n        var xc, yc, en, ei;\n        var side = 0,\n          sl = 1.0,\n          sr = 1.0;\n        while (1) {\n          if (typeof e0 === 'number') xi = (sr * e1 * xl - sl * e0 * xr) / (sr * e1 - sl * e0);\n          else {\n            xi = xr;\n            for (j = e0.length - 1; j !== -1; --j) {\n              if (e0[j] < 0 && e1[j] > 0) xi = min(xi, (sr * e1[j] * xl - sl * e0[j] * xr) / (sr * e1[j] - sl * e0[j]));\n            }\n          }\n          if (xi <= xl || xi >= xr) break;\n          yi = ret._at(xi, i - 1);\n          ei = event(xi, yi);\n          en = and(lt(e0, 0), lt(0, ei));\n          if (any(en)) {\n            xr = xi;\n            e1 = ei;\n            ev = en;\n            sr = 1.0;\n            if (side === -1) sl *= 0.5;\n            else sl = 1.0;\n            side = -1;\n          } else {\n            xl = xi;\n            e0 = ei;\n            sl = 1.0;\n            if (side === 1) sr *= 0.5;\n            else sr = 1.0;\n            side = 1;\n          }\n        }\n        y1 = ret._at(0.5 * (x0 + xi), i - 1);\n        ret.f[i] = f(xi, yi);\n        ret.x[i] = xi;\n        ret.y[i] = yi;\n        ret.ymid[i - 1] = y1;\n        ret.events = ev;\n        ret.iterations = it;\n        return ret;\n      }\n    }\n    x0 += h;\n    y0 = y1;\n    e0 = e1;\n    h = min(0.8 * h * pow(tol / erinf, 0.25), 4 * h);\n  }\n  ret.iterations = it;\n  return ret;\n};\n\n// 11. Ax = b\n_numeric.LU = function (A, fast) {\n  fast = fast || false;\n\n  var abs = Math.abs;\n  var i, j, k, absAjk, Akk, Ak, Pk, Ai;\n  var max;\n  var n = A.length,\n    n1 = n - 1;\n  var P = new Array(n);\n  if (!fast) A = _numeric.clone(A);\n\n  for (k = 0; k < n; ++k) {\n    Pk = k;\n    Ak = A[k];\n    max = abs(Ak[k]);\n    for (j = k + 1; j < n; ++j) {\n      absAjk = abs(A[j][k]);\n      if (max < absAjk) {\n        max = absAjk;\n        Pk = j;\n      }\n    }\n    P[k] = Pk;\n\n    if (Pk != k) {\n      A[k] = A[Pk];\n      A[Pk] = Ak;\n      Ak = A[k];\n    }\n\n    Akk = Ak[k];\n\n    for (i = k + 1; i < n; ++i) {\n      A[i][k] /= Akk;\n    }\n\n    for (i = k + 1; i < n; ++i) {\n      Ai = A[i];\n      for (j = k + 1; j < n1; ++j) {\n        Ai[j] -= Ai[k] * Ak[j];\n        ++j;\n        Ai[j] -= Ai[k] * Ak[j];\n      }\n      if (j === n1) Ai[j] -= Ai[k] * Ak[j];\n    }\n  }\n\n  return {\n    LU: A,\n    P: P,\n  };\n};\n\n_numeric.LUsolve = function LUsolve(LUP, b) {\n  var i, j;\n  var LU = LUP.LU;\n  var n = LU.length;\n  var x = _numeric.clone(b);\n  var P = LUP.P;\n  var Pi, LUi, LUii, tmp;\n\n  for (i = n - 1; i !== -1; --i) x[i] = b[i];\n  for (i = 0; i < n; ++i) {\n    Pi = P[i];\n    if (P[i] !== i) {\n      tmp = x[i];\n      x[i] = x[Pi];\n      x[Pi] = tmp;\n    }\n\n    LUi = LU[i];\n    for (j = 0; j < i; ++j) {\n      x[i] -= x[j] * LUi[j];\n    }\n  }\n\n  for (i = n - 1; i >= 0; --i) {\n    LUi = LU[i];\n    for (j = i + 1; j < n; ++j) {\n      x[i] -= x[j] * LUi[j];\n    }\n\n    x[i] /= LUi[i];\n  }\n\n  return x;\n};\n\n_numeric.solve = function solve(A, b, fast) {\n  return _numeric.LUsolve(_numeric.LU(A, fast), b);\n};\n\n// 12. Linear programming\n_numeric.echelonize = function echelonize(A) {\n  var s = _numeric.dim(A),\n    m = s[0],\n    n = s[1];\n  var I = _numeric.identity(m);\n  var P = Array(m);\n  var i, j, k, l, Ai, Ii, Z, a;\n  var abs = Math.abs;\n  var diveq = _numeric.diveq;\n  A = _numeric.clone(A);\n  for (i = 0; i < m; ++i) {\n    k = 0;\n    Ai = A[i];\n    Ii = I[i];\n    for (j = 1; j < n; ++j) if (abs(Ai[k]) < abs(Ai[j])) k = j;\n    P[i] = k;\n    diveq(Ii, Ai[k]);\n    diveq(Ai, Ai[k]);\n    for (j = 0; j < m; ++j)\n      if (j !== i) {\n        Z = A[j];\n        a = Z[k];\n        for (l = n - 1; l !== -1; --l) Z[l] -= Ai[l] * a;\n        Z = I[j];\n        for (l = m - 1; l !== -1; --l) Z[l] -= Ii[l] * a;\n      }\n  }\n  return { I: I, A: A, P: P };\n};\n\n_numeric.__solveLP = function __solveLP(c, A, b, tol, maxit, x, flag) {\n  var sum = _numeric.sum,\n    log = _numeric.log,\n    mul = _numeric.mul,\n    sub = _numeric.sub,\n    dot = _numeric.dot,\n    div = _numeric.div,\n    add = _numeric.add;\n  var m = c.length,\n    n = b.length,\n    y;\n  var unbounded = false,\n    cb,\n    i0 = 0;\n  var alpha = 1.0;\n  var f0,\n    df0,\n    AT = _numeric.transpose(A),\n    svd = _numeric.svd,\n    transpose = _numeric.transpose,\n    leq = _numeric.leq,\n    sqrt = Math.sqrt,\n    abs = Math.abs;\n  var muleq = _numeric.muleq;\n  var norm = _numeric.norminf,\n    any = _numeric.any,\n    min = Math.min;\n  var all = _numeric.all,\n    gt = _numeric.gt;\n  var p = Array(m),\n    A0 = Array(n),\n    e = _numeric.rep([n], 1),\n    H;\n  var solve = _numeric.solve,\n    z = sub(b, dot(A, x)),\n    count;\n  var dotcc = dot(c, c);\n  var g;\n  for (count = i0; count < maxit; ++count) {\n    var i, j, d;\n    for (i = n - 1; i !== -1; --i) A0[i] = div(A[i], z[i]);\n    var A1 = transpose(A0);\n    for (i = m - 1; i !== -1; --i) p[i] = /*x[i]+*/ sum(A1[i]);\n    alpha = 0.25 * abs(dotcc / dot(c, p));\n    var a1 = 100 * sqrt(dotcc / dot(p, p));\n    if (!isFinite(alpha) || alpha > a1) alpha = a1;\n    g = add(c, mul(alpha, p));\n    H = dot(A1, A0);\n    for (i = m - 1; i !== -1; --i) H[i][i] += 1;\n    d = solve(H, div(g, alpha), true);\n    var t0 = div(z, dot(A, d));\n    var t = 1.0;\n    for (i = n - 1; i !== -1; --i) if (t0[i] < 0) t = min(t, -0.999 * t0[i]);\n    y = sub(x, mul(d, t));\n    z = sub(b, dot(A, y));\n    if (!all(gt(z, 0))) return { solution: x, message: '', iterations: count };\n    x = y;\n    if (alpha < tol) return { solution: y, message: '', iterations: count };\n    if (flag) {\n      var s = dot(c, g),\n        Ag = dot(A, g);\n      unbounded = true;\n      for (i = n - 1; i !== -1; --i)\n        if (s * Ag[i] < 0) {\n          unbounded = false;\n          break;\n        }\n    } else {\n      if (x[m - 1] >= 0) unbounded = false;\n      else unbounded = true;\n    }\n    if (unbounded) return { solution: y, message: 'Unbounded', iterations: count };\n  }\n  return { solution: x, message: 'maximum iteration count exceeded', iterations: count };\n};\n\n_numeric._solveLP = function _solveLP(c, A, b, tol, maxit) {\n  var m = c.length,\n    n = b.length,\n    y;\n  var sum = _numeric.sum,\n    log = _numeric.log,\n    mul = _numeric.mul,\n    sub = _numeric.sub,\n    dot = _numeric.dot,\n    div = _numeric.div,\n    add = _numeric.add;\n  var c0 = _numeric.rep([m], 0).concat([1]);\n  var J = _numeric.rep([n, 1], -1);\n  var A0 = _numeric.blockMatrix([[A, J]]);\n  var b0 = b;\n  var y = _numeric.rep([m], 0).concat(Math.max(0, _numeric.sup(_numeric.neg(b))) + 1);\n  var x0 = _numeric.__solveLP(c0, A0, b0, tol, maxit, y, false);\n  var x = _numeric.clone(x0.solution);\n  x.length = m;\n  var foo = _numeric.inf(sub(b, dot(A, x)));\n  if (foo < 0) {\n    return { solution: NaN, message: 'Infeasible', iterations: x0.iterations };\n  }\n  var ret = _numeric.__solveLP(c, A, b, tol, maxit - x0.iterations, x, true);\n  ret.iterations += x0.iterations;\n  return ret;\n};\n\n_numeric.solveLP = function solveLP(c, A, b, Aeq, beq, tol, maxit) {\n  if (typeof maxit === 'undefined') maxit = 1000;\n  if (typeof tol === 'undefined') tol = _numeric.epsilon;\n  if (typeof Aeq === 'undefined') return _numeric._solveLP(c, A, b, tol, maxit);\n  var m = Aeq.length,\n    n = Aeq[0].length,\n    o = A.length;\n  var B = _numeric.echelonize(Aeq);\n  var flags = _numeric.rep([n], 0);\n  var P = B.P;\n  var Q = [];\n  var i;\n  for (i = P.length - 1; i !== -1; --i) flags[P[i]] = 1;\n  for (i = n - 1; i !== -1; --i) if (flags[i] === 0) Q.push(i);\n  var g = _numeric.getRange;\n  var I = _numeric.linspace(0, m - 1),\n    J = _numeric.linspace(0, o - 1);\n  var Aeq2 = g(Aeq, I, Q),\n    A1 = g(A, J, P),\n    A2 = g(A, J, Q),\n    dot = _numeric.dot,\n    sub = _numeric.sub;\n  var A3 = dot(A1, B.I);\n  var A4 = sub(A2, dot(A3, Aeq2)),\n    b4 = sub(b, dot(A3, beq));\n  var c1 = Array(P.length),\n    c2 = Array(Q.length);\n  for (i = P.length - 1; i !== -1; --i) c1[i] = c[P[i]];\n  for (i = Q.length - 1; i !== -1; --i) c2[i] = c[Q[i]];\n  var c4 = sub(c2, dot(c1, dot(B.I, Aeq2)));\n  var S = _numeric._solveLP(c4, A4, b4, tol, maxit);\n  var x2 = S.solution;\n  if (x2 !== x2) return S;\n  var x1 = dot(B.I, sub(beq, dot(Aeq2, x2)));\n  var x = Array(c.length);\n  for (i = P.length - 1; i !== -1; --i) x[P[i]] = x1[i];\n  for (i = Q.length - 1; i !== -1; --i) x[Q[i]] = x2[i];\n  return { solution: x, message: S.message, iterations: S.iterations };\n};\n\n_numeric.MPStoLP = function MPStoLP(MPS) {\n  if (MPS instanceof String) {\n    MPS.split('\\n');\n  }\n  var state = 0;\n  var states = ['Initial state', 'NAME', 'ROWS', 'COLUMNS', 'RHS', 'BOUNDS', 'ENDATA'];\n  var n = MPS.length;\n  var i,\n    j,\n    z,\n    N = 0,\n    rows = {},\n    sign = [],\n    rl = 0,\n    vars = {},\n    nv = 0;\n  var name;\n  var c = [],\n    A = [],\n    b = [];\n  function err(e) {\n    throw new Error('MPStoLP: ' + e + '\\nLine ' + i + ': ' + MPS[i] + '\\nCurrent state: ' + states[state] + '\\n');\n  }\n  for (i = 0; i < n; ++i) {\n    z = MPS[i];\n    var w0 = z.match(/\\S*/g);\n    var w = [];\n    for (j = 0; j < w0.length; ++j) if (w0[j] !== '') w.push(w0[j]);\n    if (w.length === 0) continue;\n    for (j = 0; j < states.length; ++j) if (z.substr(0, states[j].length) === states[j]) break;\n    if (j < states.length) {\n      state = j;\n      if (j === 1) {\n        name = w[1];\n      }\n      if (j === 6) return { name: name, c: c, A: _numeric.transpose(A), b: b, rows: rows, vars: vars };\n      continue;\n    }\n    switch (state) {\n      case 0:\n      case 1:\n        err('Unexpected line');\n      case 2:\n        switch (w[0]) {\n          case 'N':\n            if (N === 0) N = w[1];\n            else err('Two or more N rows');\n            break;\n          case 'L':\n            rows[w[1]] = rl;\n            sign[rl] = 1;\n            b[rl] = 0;\n            ++rl;\n            break;\n          case 'G':\n            rows[w[1]] = rl;\n            sign[rl] = -1;\n            b[rl] = 0;\n            ++rl;\n            break;\n          case 'E':\n            rows[w[1]] = rl;\n            sign[rl] = 0;\n            b[rl] = 0;\n            ++rl;\n            break;\n          default:\n            err('Parse error ' + _numeric.prettyPrint(w));\n        }\n        break;\n      case 3:\n        if (!vars.hasOwnProperty(w[0])) {\n          vars[w[0]] = nv;\n          c[nv] = 0;\n          A[nv] = _numeric.rep([rl], 0);\n          ++nv;\n        }\n        var p = vars[w[0]];\n        for (j = 1; j < w.length; j += 2) {\n          if (w[j] === N) {\n            c[p] = parseFloat(w[j + 1]);\n            continue;\n          }\n          var q = rows[w[j]];\n          A[p][q] = (sign[q] < 0 ? -1 : 1) * parseFloat(w[j + 1]);\n        }\n        break;\n      case 4:\n        for (j = 1; j < w.length; j += 2) b[rows[w[j]]] = (sign[rows[w[j]]] < 0 ? -1 : 1) * parseFloat(w[j + 1]);\n        break;\n      case 5:\n        /*FIXME*/ break;\n      case 6:\n        err('Internal error');\n    }\n  }\n  err('Reached end of file without ENDATA');\n};\n// seedrandom.js version 2.0.\n// Author: David Bau 4/2/2011\n//\n// Defines a method Math.seedrandom() that, when called, substitutes\n// an explicitly seeded RC4-based algorithm for Math.random().  Also\n// supports automatic seeding from local or network sources of entropy.\n//\n// Usage:\n//\n//   <script src=http://davidbau.com/encode/seedrandom-min.js></script>\n//\n//   Math.seedrandom('yipee'); Sets Math.random to a function that is\n//                             initialized using the given explicit seed.\n//\n//   Math.seedrandom();        Sets Math.random to a function that is\n//                             seeded using the current time, dom state,\n//                             and other accumulated local entropy.\n//                             The generated seed string is returned.\n//\n//   Math.seedrandom('yowza', true);\n//                             Seeds using the given explicit seed mixed\n//                             together with accumulated entropy.\n//\n//   <script src=\"http://bit.ly/srandom-512\"></script>\n//                             Seeds using physical random bits downloaded\n//                             from random.org.\n//\n//   <script src=\"https://jsonlib.appspot.com/urandom?callback=Math.seedrandom\">\n//   </script>                 Seeds using urandom bits from call.jsonlib.com,\n//                             which is faster than random.org.\n//\n// Examples:\n//\n//   Math.seedrandom(\"hello\");            // Use \"hello\" as the seed.\n//   document.write(Math.random());       // Always 0.5463663768140734\n//   document.write(Math.random());       // Always 0.43973793770592234\n//   var rng1 = Math.random;              // Remember the current prng.\n//\n//   var autoseed = Math.seedrandom();    // New prng with an automatic seed.\n//   document.write(Math.random());       // Pretty much unpredictable.\n//\n//   Math.random = rng1;                  // Continue \"hello\" prng sequence.\n//   document.write(Math.random());       // Always 0.554769432473455\n//\n//   Math.seedrandom(autoseed);           // Restart at the previous seed.\n//   document.write(Math.random());       // Repeat the 'unpredictable' value.\n//\n// Notes:\n//\n// Each time seedrandom('arg') is called, entropy from the passed seed\n// is accumulated in a pool to help generate future seeds for the\n// zero-argument form of Math.seedrandom, so entropy can be injected over\n// time by calling seedrandom with explicit data repeatedly.\n//\n// On speed - This javascript implementation of Math.random() is about\n// 3-10x slower than the built-in Math.random() because it is not native\n// code, but this is typically fast enough anyway.  Seeding is more expensive,\n// especially if you use auto-seeding.  Some details (timings on Chrome 4):\n//\n// Our Math.random()            - avg less than 0.002 milliseconds per call\n// seedrandom('explicit')       - avg less than 0.5 milliseconds per call\n// seedrandom('explicit', true) - avg less than 2 milliseconds per call\n// seedrandom()                 - avg about 38 milliseconds per call\n//\n// LICENSE (BSD):\n//\n// Copyright 2010 David Bau, all rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//   1. Redistributions of source code must retain the above copyright\n//      notice, this list of conditions and the following disclaimer.\n//\n//   2. Redistributions in binary form must reproduce the above copyright\n//      notice, this list of conditions and the following disclaimer in the\n//      documentation and/or other materials provided with the distribution.\n//\n//   3. Neither the name of this module nor the names of its contributors may\n//      be used to endorse or promote products derived from this software\n//      without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n/**\n * All code is in an anonymous closure to keep the global namespace clean.\n *\n * @param {number=} overflow\n * @param {number=} startdenom\n */\n\n// Patched by Seb so that seedrandom.js does not pollute the Math object.\n// My tests suggest that doing Math.trouble = 1 makes Math lookups about 5%\n// slower.\n_numeric.seedrandom = { pow: Math.pow, random: Math.random };\n\n(function (pool, math, width, chunks, significance, overflow, startdenom) {\n  //\n  // seedrandom()\n  // This is the seedrandom function described above.\n  //\n  math['seedrandom'] = function seedrandom(seed, use_entropy) {\n    var key = [];\n    var arc4;\n\n    // Flatten the seed string or build one from local entropy if needed.\n    seed = mixkey(flatten(use_entropy ? [seed, pool] : arguments.length ? seed : [new Date().getTime(), pool, window], 3), key);\n\n    // Use the seed to initialize an ARC4 generator.\n    arc4 = new ARC4(key);\n\n    // Mix the randomness into accumulated entropy.\n    mixkey(arc4.S, pool);\n\n    // Override Math.random\n\n    // This function returns a random double in [0, 1) that contains\n    // randomness in every bit of the mantissa of the IEEE 754 value.\n\n    math['random'] = function random() {\n      // Closure to return a random double:\n      var n = arc4.g(chunks); // Start with a numerator n < 2 ^ 48\n      var d = startdenom; //   and denominator d = 2 ^ 48.\n      var x = 0; //   and no 'extra last byte'.\n      while (n < significance) {\n        // Fill up all significant digits by\n        n = (n + x) * width; //   shifting numerator and\n        d *= width; //   denominator and generating a\n        x = arc4.g(1); //   new least-significant-byte.\n      }\n      while (n >= overflow) {\n        // To avoid rounding up, before adding\n        n /= 2; //   last byte, shift everything\n        d /= 2; //   right using integer math until\n        x >>>= 1; //   we have exactly the desired bits.\n      }\n      return (n + x) / d; // Form the number within [0, 1).\n    };\n\n    // Return the seed that was used\n    return seed;\n  };\n\n  //\n  // ARC4\n  //\n  // An ARC4 implementation.  The constructor takes a key in the form of\n  // an array of at most (width) integers that should be 0 <= x < (width).\n  //\n  // The g(count) method returns a pseudorandom integer that concatenates\n  // the next (count) outputs from ARC4.  Its return value is a number x\n  // that is in the range 0 <= x < (width ^ count).\n  //\n  /** @constructor */\n  function ARC4(key) {\n    var t,\n      u,\n      me = this,\n      keylen = key.length;\n    var i = 0,\n      j = (me.i = me.j = me.m = 0);\n    me.S = [];\n    me.c = [];\n\n    // The empty key [] is treated as [0].\n    if (!keylen) {\n      key = [keylen++];\n    }\n\n    // Set up S using the standard key scheduling algorithm.\n    while (i < width) {\n      me.S[i] = i++;\n    }\n    for (i = 0; i < width; i++) {\n      t = me.S[i];\n      j = lowbits(j + t + key[i % keylen]);\n      u = me.S[j];\n      me.S[i] = u;\n      me.S[j] = t;\n    }\n\n    // The \"g\" method returns the next (count) outputs as one number.\n    me.g = function getnext(count) {\n      var s = me.S;\n      var i = lowbits(me.i + 1);\n      var t = s[i];\n      var j = lowbits(me.j + t);\n      var u = s[j];\n      s[i] = u;\n      s[j] = t;\n      var r = s[lowbits(t + u)];\n      while (--count) {\n        i = lowbits(i + 1);\n        t = s[i];\n        j = lowbits(j + t);\n        u = s[j];\n        s[i] = u;\n        s[j] = t;\n        r = r * width + s[lowbits(t + u)];\n      }\n      me.i = i;\n      me.j = j;\n      return r;\n    };\n    // For robust unpredictability discard an initial batch of values.\n    // See http://www.rsa.com/rsalabs/node.asp?id=2009\n    me.g(width);\n  }\n\n  //\n  // flatten()\n  // Converts an object tree to nested arrays of strings.\n  //\n  /** @param {Object=} result\n   * @param {string=} prop\n   * @param {string=} typ */\n  function flatten(obj, depth, result, prop, typ) {\n    result = [];\n    typ = typeof obj;\n    if (depth && typ == 'object') {\n      for (prop in obj) {\n        if (prop.indexOf('S') < 5) {\n          // Avoid FF3 bug (local/sessionStorage)\n          try {\n            result.push(flatten(obj[prop], depth - 1));\n          } catch (e) {}\n        }\n      }\n    }\n    return result.length ? result : obj + (typ != 'string' ? '\\0' : '');\n  }\n\n  //\n  // mixkey()\n  // Mixes a string seed into a key that is an array of integers, and\n  // returns a shortened string seed that is equivalent to the result key.\n  //\n  /** @param {number=} smear\n   * @param {number=} j */\n  function mixkey(seed, key, smear, j) {\n    seed += ''; // Ensure the seed is a string\n    smear = 0;\n    for (j = 0; j < seed.length; j++) {\n      key[lowbits(j)] = lowbits((smear ^= key[lowbits(j)] * 19) + seed.charCodeAt(j));\n    }\n    seed = '';\n    for (j in key) {\n      seed += String.fromCharCode(key[j]);\n    }\n    return seed;\n  }\n\n  //\n  // lowbits()\n  // A quick \"n mod width\" for width a power of 2.\n  //\n  function lowbits(n) {\n    return n & (width - 1);\n  }\n\n  //\n  // The following constants are related to IEEE 754 limits.\n  //\n  startdenom = math.pow(width, chunks);\n  significance = math.pow(2, significance);\n  overflow = significance * 2;\n\n  //\n  // When seedrandom.js is loaded, we immediately mix a few bits\n  // from the built-in RNG into the entropy pool.  Because we do\n  // not want to intefere with determinstic PRNG state later,\n  // seedrandom will not call math.random on its own again after\n  // initialization.\n  //\n  mixkey(math.random(), pool);\n\n  // End anonymous scope, and pass initial values.\n})(\n  [], // pool: entropy pool starts empty\n  _numeric.seedrandom, // math: package containing random, pow, and seedrandom\n  256, // width: each RC4 output is 0 <= x < 256\n  6, // chunks: at least six RC4 outputs for each double\n  52 // significance: there are 52 significant digits in a double\n);\n/* This file is a slightly modified version of quadprog.js from Alberto Santini.\n * It has been slightly modified by Sébastien Loisel to make sure that it handles\n * 0-based Arrays instead of 1-based Arrays.\n * License is in resources/LICENSE.quadprog */\n(function (exports) {\n  function base0to1(A) {\n    if (typeof A !== 'object') {\n      return A;\n    }\n    var ret = [],\n      i,\n      n = A.length;\n    for (i = 0; i < n; i++) ret[i + 1] = base0to1(A[i]);\n    return ret;\n  }\n  function base1to0(A) {\n    if (typeof A !== 'object') {\n      return A;\n    }\n    var ret = [],\n      i,\n      n = A.length;\n    for (i = 1; i < n; i++) ret[i - 1] = base1to0(A[i]);\n    return ret;\n  }\n\n  function dpori(a, lda, n) {\n    var i, j, k, kp1, t;\n\n    for (k = 1; k <= n; k = k + 1) {\n      a[k][k] = 1 / a[k][k];\n      t = -a[k][k];\n      //~ dscal(k - 1, t, a[1][k], 1);\n      for (i = 1; i < k; i = i + 1) {\n        a[i][k] = t * a[i][k];\n      }\n\n      kp1 = k + 1;\n      if (n < kp1) {\n        break;\n      }\n      for (j = kp1; j <= n; j = j + 1) {\n        t = a[k][j];\n        a[k][j] = 0;\n        //~ daxpy(k, t, a[1][k], 1, a[1][j], 1);\n        for (i = 1; i <= k; i = i + 1) {\n          a[i][j] = a[i][j] + t * a[i][k];\n        }\n      }\n    }\n  }\n\n  function dposl(a, lda, n, b) {\n    var i, k, kb, t;\n\n    for (k = 1; k <= n; k = k + 1) {\n      //~ t = ddot(k - 1, a[1][k], 1, b[1], 1);\n      t = 0;\n      for (i = 1; i < k; i = i + 1) {\n        t = t + a[i][k] * b[i];\n      }\n\n      b[k] = (b[k] - t) / a[k][k];\n    }\n\n    for (kb = 1; kb <= n; kb = kb + 1) {\n      k = n + 1 - kb;\n      b[k] = b[k] / a[k][k];\n      t = -b[k];\n      //~ daxpy(k - 1, t, a[1][k], 1, b[1], 1);\n      for (i = 1; i < k; i = i + 1) {\n        b[i] = b[i] + t * a[i][k];\n      }\n    }\n  }\n\n  function dpofa(a, lda, n, info) {\n    var i, j, jm1, k, t, s;\n\n    for (j = 1; j <= n; j = j + 1) {\n      info[1] = j;\n      s = 0;\n      jm1 = j - 1;\n      if (jm1 < 1) {\n        s = a[j][j] - s;\n        if (s <= 0) {\n          break;\n        }\n        a[j][j] = Math.sqrt(s);\n      } else {\n        for (k = 1; k <= jm1; k = k + 1) {\n          //~ t = a[k][j] - ddot(k - 1, a[1][k], 1, a[1][j], 1);\n          t = a[k][j];\n          for (i = 1; i < k; i = i + 1) {\n            t = t - a[i][j] * a[i][k];\n          }\n          t = t / a[k][k];\n          a[k][j] = t;\n          s = s + t * t;\n        }\n        s = a[j][j] - s;\n        if (s <= 0) {\n          break;\n        }\n        a[j][j] = Math.sqrt(s);\n      }\n      info[1] = 0;\n    }\n  }\n\n  function qpgen2(dmat, dvec, fddmat, n, sol, crval, amat, bvec, fdamat, q, meq, iact, nact, iter, work, ierr) {\n    var i, j, l, l1, info, it1, iwzv, iwrv, iwrm, iwsv, iwuv, nvl, r, iwnbv, temp, sum, t1, tt, gc, gs, nu, t1inf, t2min, vsmall, tmpa, tmpb, go;\n\n    r = Math.min(n, q);\n    l = 2 * n + (r * (r + 5)) / 2 + 2 * q + 1;\n\n    vsmall = 1.0e-60;\n    do {\n      vsmall = vsmall + vsmall;\n      tmpa = 1 + 0.1 * vsmall;\n      tmpb = 1 + 0.2 * vsmall;\n    } while (tmpa <= 1 || tmpb <= 1);\n\n    for (i = 1; i <= n; i = i + 1) {\n      work[i] = dvec[i];\n    }\n    for (i = n + 1; i <= l; i = i + 1) {\n      work[i] = 0;\n    }\n    for (i = 1; i <= q; i = i + 1) {\n      iact[i] = 0;\n    }\n\n    info = [];\n\n    if (ierr[1] === 0) {\n      dpofa(dmat, fddmat, n, info);\n      if (info[1] !== 0) {\n        ierr[1] = 2;\n        return;\n      }\n      dposl(dmat, fddmat, n, dvec);\n      dpori(dmat, fddmat, n);\n    } else {\n      for (j = 1; j <= n; j = j + 1) {\n        sol[j] = 0;\n        for (i = 1; i <= j; i = i + 1) {\n          sol[j] = sol[j] + dmat[i][j] * dvec[i];\n        }\n      }\n      for (j = 1; j <= n; j = j + 1) {\n        dvec[j] = 0;\n        for (i = j; i <= n; i = i + 1) {\n          dvec[j] = dvec[j] + dmat[j][i] * sol[i];\n        }\n      }\n    }\n\n    crval[1] = 0;\n    for (j = 1; j <= n; j = j + 1) {\n      sol[j] = dvec[j];\n      crval[1] = crval[1] + work[j] * sol[j];\n      work[j] = 0;\n      for (i = j + 1; i <= n; i = i + 1) {\n        dmat[i][j] = 0;\n      }\n    }\n    crval[1] = -crval[1] / 2;\n    ierr[1] = 0;\n\n    iwzv = n;\n    iwrv = iwzv + n;\n    iwuv = iwrv + r;\n    iwrm = iwuv + r + 1;\n    iwsv = iwrm + (r * (r + 1)) / 2;\n    iwnbv = iwsv + q;\n\n    for (i = 1; i <= q; i = i + 1) {\n      sum = 0;\n      for (j = 1; j <= n; j = j + 1) {\n        sum = sum + amat[j][i] * amat[j][i];\n      }\n      work[iwnbv + i] = Math.sqrt(sum);\n    }\n    nact = 0;\n    iter[1] = 0;\n    iter[2] = 0;\n\n    function fn_goto_50() {\n      iter[1] = iter[1] + 1;\n\n      l = iwsv;\n      for (i = 1; i <= q; i = i + 1) {\n        l = l + 1;\n        sum = -bvec[i];\n        for (j = 1; j <= n; j = j + 1) {\n          sum = sum + amat[j][i] * sol[j];\n        }\n        if (Math.abs(sum) < vsmall) {\n          sum = 0;\n        }\n        if (i > meq) {\n          work[l] = sum;\n        } else {\n          work[l] = -Math.abs(sum);\n          if (sum > 0) {\n            for (j = 1; j <= n; j = j + 1) {\n              amat[j][i] = -amat[j][i];\n            }\n            bvec[i] = -bvec[i];\n          }\n        }\n      }\n\n      for (i = 1; i <= nact; i = i + 1) {\n        work[iwsv + iact[i]] = 0;\n      }\n\n      nvl = 0;\n      temp = 0;\n      for (i = 1; i <= q; i = i + 1) {\n        if (work[iwsv + i] < temp * work[iwnbv + i]) {\n          nvl = i;\n          temp = work[iwsv + i] / work[iwnbv + i];\n        }\n      }\n      if (nvl === 0) {\n        return 999;\n      }\n\n      return 0;\n    }\n\n    function fn_goto_55() {\n      for (i = 1; i <= n; i = i + 1) {\n        sum = 0;\n        for (j = 1; j <= n; j = j + 1) {\n          sum = sum + dmat[j][i] * amat[j][nvl];\n        }\n        work[i] = sum;\n      }\n\n      l1 = iwzv;\n      for (i = 1; i <= n; i = i + 1) {\n        work[l1 + i] = 0;\n      }\n      for (j = nact + 1; j <= n; j = j + 1) {\n        for (i = 1; i <= n; i = i + 1) {\n          work[l1 + i] = work[l1 + i] + dmat[i][j] * work[j];\n        }\n      }\n\n      t1inf = true;\n      for (i = nact; i >= 1; i = i - 1) {\n        sum = work[i];\n        l = iwrm + (i * (i + 3)) / 2;\n        l1 = l - i;\n        for (j = i + 1; j <= nact; j = j + 1) {\n          sum = sum - work[l] * work[iwrv + j];\n          l = l + j;\n        }\n        sum = sum / work[l1];\n        work[iwrv + i] = sum;\n        if (iact[i] < meq) {\n          // continue;\n          break;\n        }\n        if (sum < 0) {\n          // continue;\n          break;\n        }\n        t1inf = false;\n        it1 = i;\n      }\n\n      if (!t1inf) {\n        t1 = work[iwuv + it1] / work[iwrv + it1];\n        for (i = 1; i <= nact; i = i + 1) {\n          if (iact[i] < meq) {\n            // continue;\n            break;\n          }\n          if (work[iwrv + i] < 0) {\n            // continue;\n            break;\n          }\n          temp = work[iwuv + i] / work[iwrv + i];\n          if (temp < t1) {\n            t1 = temp;\n            it1 = i;\n          }\n        }\n      }\n\n      sum = 0;\n      for (i = iwzv + 1; i <= iwzv + n; i = i + 1) {\n        sum = sum + work[i] * work[i];\n      }\n      if (Math.abs(sum) <= vsmall) {\n        if (t1inf) {\n          ierr[1] = 1;\n          // GOTO 999\n          return 999;\n        } else {\n          for (i = 1; i <= nact; i = i + 1) {\n            work[iwuv + i] = work[iwuv + i] - t1 * work[iwrv + i];\n          }\n          work[iwuv + nact + 1] = work[iwuv + nact + 1] + t1;\n          // GOTO 700\n          return 700;\n        }\n      } else {\n        sum = 0;\n        for (i = 1; i <= n; i = i + 1) {\n          sum = sum + work[iwzv + i] * amat[i][nvl];\n        }\n        tt = -work[iwsv + nvl] / sum;\n        t2min = true;\n        if (!t1inf) {\n          if (t1 < tt) {\n            tt = t1;\n            t2min = false;\n          }\n        }\n\n        for (i = 1; i <= n; i = i + 1) {\n          sol[i] = sol[i] + tt * work[iwzv + i];\n          if (Math.abs(sol[i]) < vsmall) {\n            sol[i] = 0;\n          }\n        }\n\n        crval[1] = crval[1] + tt * sum * (tt / 2 + work[iwuv + nact + 1]);\n        for (i = 1; i <= nact; i = i + 1) {\n          work[iwuv + i] = work[iwuv + i] - tt * work[iwrv + i];\n        }\n        work[iwuv + nact + 1] = work[iwuv + nact + 1] + tt;\n\n        if (t2min) {\n          nact = nact + 1;\n          iact[nact] = nvl;\n\n          l = iwrm + ((nact - 1) * nact) / 2 + 1;\n          for (i = 1; i <= nact - 1; i = i + 1) {\n            work[l] = work[i];\n            l = l + 1;\n          }\n\n          if (nact === n) {\n            work[l] = work[n];\n          } else {\n            for (i = n; i >= nact + 1; i = i - 1) {\n              if (work[i] === 0) {\n                // continue;\n                break;\n              }\n              gc = Math.max(Math.abs(work[i - 1]), Math.abs(work[i]));\n              gs = Math.min(Math.abs(work[i - 1]), Math.abs(work[i]));\n              if (work[i - 1] >= 0) {\n                temp = Math.abs(gc * Math.sqrt(1 + (gs * gs) / (gc * gc)));\n              } else {\n                temp = -Math.abs(gc * Math.sqrt(1 + (gs * gs) / (gc * gc)));\n              }\n              gc = work[i - 1] / temp;\n              gs = work[i] / temp;\n\n              if (gc === 1) {\n                // continue;\n                break;\n              }\n              if (gc === 0) {\n                work[i - 1] = gs * temp;\n                for (j = 1; j <= n; j = j + 1) {\n                  temp = dmat[j][i - 1];\n                  dmat[j][i - 1] = dmat[j][i];\n                  dmat[j][i] = temp;\n                }\n              } else {\n                work[i - 1] = temp;\n                nu = gs / (1 + gc);\n                for (j = 1; j <= n; j = j + 1) {\n                  temp = gc * dmat[j][i - 1] + gs * dmat[j][i];\n                  dmat[j][i] = nu * (dmat[j][i - 1] + temp) - dmat[j][i];\n                  dmat[j][i - 1] = temp;\n                }\n              }\n            }\n            work[l] = work[nact];\n          }\n        } else {\n          sum = -bvec[nvl];\n          for (j = 1; j <= n; j = j + 1) {\n            sum = sum + sol[j] * amat[j][nvl];\n          }\n          if (nvl > meq) {\n            work[iwsv + nvl] = sum;\n          } else {\n            work[iwsv + nvl] = -Math.abs(sum);\n            if (sum > 0) {\n              for (j = 1; j <= n; j = j + 1) {\n                amat[j][nvl] = -amat[j][nvl];\n              }\n              bvec[nvl] = -bvec[nvl];\n            }\n          }\n          // GOTO 700\n          return 700;\n        }\n      }\n\n      return 0;\n    }\n\n    function fn_goto_797() {\n      l = iwrm + (it1 * (it1 + 1)) / 2 + 1;\n      l1 = l + it1;\n      if (work[l1] === 0) {\n        // GOTO 798\n        return 798;\n      }\n      gc = Math.max(Math.abs(work[l1 - 1]), Math.abs(work[l1]));\n      gs = Math.min(Math.abs(work[l1 - 1]), Math.abs(work[l1]));\n      if (work[l1 - 1] >= 0) {\n        temp = Math.abs(gc * Math.sqrt(1 + (gs * gs) / (gc * gc)));\n      } else {\n        temp = -Math.abs(gc * Math.sqrt(1 + (gs * gs) / (gc * gc)));\n      }\n      gc = work[l1 - 1] / temp;\n      gs = work[l1] / temp;\n\n      if (gc === 1) {\n        // GOTO 798\n        return 798;\n      }\n      if (gc === 0) {\n        for (i = it1 + 1; i <= nact; i = i + 1) {\n          temp = work[l1 - 1];\n          work[l1 - 1] = work[l1];\n          work[l1] = temp;\n          l1 = l1 + i;\n        }\n        for (i = 1; i <= n; i = i + 1) {\n          temp = dmat[i][it1];\n          dmat[i][it1] = dmat[i][it1 + 1];\n          dmat[i][it1 + 1] = temp;\n        }\n      } else {\n        nu = gs / (1 + gc);\n        for (i = it1 + 1; i <= nact; i = i + 1) {\n          temp = gc * work[l1 - 1] + gs * work[l1];\n          work[l1] = nu * (work[l1 - 1] + temp) - work[l1];\n          work[l1 - 1] = temp;\n          l1 = l1 + i;\n        }\n        for (i = 1; i <= n; i = i + 1) {\n          temp = gc * dmat[i][it1] + gs * dmat[i][it1 + 1];\n          dmat[i][it1 + 1] = nu * (dmat[i][it1] + temp) - dmat[i][it1 + 1];\n          dmat[i][it1] = temp;\n        }\n      }\n\n      return 0;\n    }\n\n    function fn_goto_798() {\n      l1 = l - it1;\n      for (i = 1; i <= it1; i = i + 1) {\n        work[l1] = work[l];\n        l = l + 1;\n        l1 = l1 + 1;\n      }\n\n      work[iwuv + it1] = work[iwuv + it1 + 1];\n      iact[it1] = iact[it1 + 1];\n      it1 = it1 + 1;\n      if (it1 < nact) {\n        // GOTO 797\n        return 797;\n      }\n\n      return 0;\n    }\n\n    function fn_goto_799() {\n      work[iwuv + nact] = work[iwuv + nact + 1];\n      work[iwuv + nact + 1] = 0;\n      iact[nact] = 0;\n      nact = nact - 1;\n      iter[2] = iter[2] + 1;\n\n      return 0;\n    }\n\n    go = 0;\n    while (true) {\n      go = fn_goto_50();\n      if (go === 999) {\n        return;\n      }\n      while (true) {\n        go = fn_goto_55();\n        if (go === 0) {\n          break;\n        }\n        if (go === 999) {\n          return;\n        }\n        if (go === 700) {\n          if (it1 === nact) {\n            fn_goto_799();\n          } else {\n            while (true) {\n              fn_goto_797();\n              go = fn_goto_798();\n              if (go !== 797) {\n                break;\n              }\n            }\n            fn_goto_799();\n          }\n        }\n      }\n    }\n  }\n\n  function solveQP(Dmat, dvec, Amat, bvec, meq, factorized) {\n    Dmat = base0to1(Dmat);\n    dvec = base0to1(dvec);\n    Amat = base0to1(Amat);\n    var i,\n      n,\n      q,\n      nact,\n      r,\n      crval = [],\n      iact = [],\n      sol = [],\n      work = [],\n      iter = [],\n      message;\n\n    meq = meq || 0;\n    factorized = factorized ? base0to1(factorized) : [undefined, 0];\n    bvec = bvec ? base0to1(bvec) : [];\n\n    // In Fortran the array index starts from 1\n    n = Dmat.length - 1;\n    q = Amat[1].length - 1;\n\n    if (!bvec) {\n      for (i = 1; i <= q; i = i + 1) {\n        bvec[i] = 0;\n      }\n    }\n    for (i = 1; i <= q; i = i + 1) {\n      iact[i] = 0;\n    }\n    nact = 0;\n    r = Math.min(n, q);\n    for (i = 1; i <= n; i = i + 1) {\n      sol[i] = 0;\n    }\n    crval[1] = 0;\n    for (i = 1; i <= 2 * n + (r * (r + 5)) / 2 + 2 * q + 1; i = i + 1) {\n      work[i] = 0;\n    }\n    for (i = 1; i <= 2; i = i + 1) {\n      iter[i] = 0;\n    }\n\n    qpgen2(Dmat, dvec, n, n, sol, crval, Amat, bvec, n, q, meq, iact, nact, iter, work, factorized);\n\n    message = '';\n    if (factorized[1] === 1) {\n      message = 'constraints are inconsistent, no solution!';\n    }\n    if (factorized[1] === 2) {\n      message = 'matrix D in quadratic function is not positive definite!';\n    }\n\n    return {\n      solution: base1to0(sol),\n      value: base1to0(crval),\n      unconstrained_solution: base1to0(dvec),\n      iterations: base1to0(iter),\n      iact: base1to0(iact),\n      message: message,\n    };\n  }\n  exports.solveQP = solveQP;\n})(_numeric);\n/*\nShanti Rao sent me this routine by private email. I had to modify it\nslightly to work on Arrays instead of using a Matrix object.\nIt is apparently translated from http://stitchpanorama.sourceforge.net/Python/svd.py\n*/\n\n_numeric.svd = function svd(A) {\n  var temp;\n  //Compute the thin SVD from G. H. Golub and C. Reinsch, Numer. Math. 14, 403-420 (1970)\n  var prec = _numeric.epsilon; //Math.pow(2,-52) // assumes double prec\n  var tolerance = 1e-64 / prec;\n  var itmax = 50;\n  var c = 0;\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  var l = 0;\n\n  var u = _numeric.clone(A);\n  var m = u.length;\n\n  var n = u[0].length;\n\n  if (m < n) throw 'Need more rows than columns';\n\n  var e = new Array(n);\n  var q = new Array(n);\n  for (i = 0; i < n; i++) e[i] = q[i] = 0.0;\n  var v = _numeric.rep([n, n], 0);\n  //\tv.zero();\n\n  function pythag(a, b) {\n    a = Math.abs(a);\n    b = Math.abs(b);\n    if (a > b) return a * Math.sqrt(1.0 + (b * b) / a / a);\n    else if (b == 0.0) return a;\n    return b * Math.sqrt(1.0 + (a * a) / b / b);\n  }\n\n  //Householder's reduction to bidiagonal form\n\n  var f = 0.0;\n  var g = 0.0;\n  var h = 0.0;\n  var x = 0.0;\n  var y = 0.0;\n  var z = 0.0;\n  var s = 0.0;\n\n  for (i = 0; i < n; i++) {\n    e[i] = g;\n    s = 0.0;\n    l = i + 1;\n    for (j = i; j < m; j++) s += u[j][i] * u[j][i];\n    if (s <= tolerance) g = 0.0;\n    else {\n      f = u[i][i];\n      g = Math.sqrt(s);\n      if (f >= 0.0) g = -g;\n      h = f * g - s;\n      u[i][i] = f - g;\n      for (j = l; j < n; j++) {\n        s = 0.0;\n        for (k = i; k < m; k++) s += u[k][i] * u[k][j];\n        f = s / h;\n        for (k = i; k < m; k++) u[k][j] += f * u[k][i];\n      }\n    }\n    q[i] = g;\n    s = 0.0;\n    for (j = l; j < n; j++) s = s + u[i][j] * u[i][j];\n    if (s <= tolerance) g = 0.0;\n    else {\n      f = u[i][i + 1];\n      g = Math.sqrt(s);\n      if (f >= 0.0) g = -g;\n      h = f * g - s;\n      u[i][i + 1] = f - g;\n      for (j = l; j < n; j++) e[j] = u[i][j] / h;\n      for (j = l; j < m; j++) {\n        s = 0.0;\n        for (k = l; k < n; k++) s += u[j][k] * u[i][k];\n        for (k = l; k < n; k++) u[j][k] += s * e[k];\n      }\n    }\n    y = Math.abs(q[i]) + Math.abs(e[i]);\n    if (y > x) x = y;\n  }\n\n  // accumulation of right hand gtransformations\n  for (i = n - 1; i != -1; i += -1) {\n    if (g != 0.0) {\n      h = g * u[i][i + 1];\n      for (j = l; j < n; j++) v[j][i] = u[i][j] / h;\n      for (j = l; j < n; j++) {\n        s = 0.0;\n        for (k = l; k < n; k++) s += u[i][k] * v[k][j];\n        for (k = l; k < n; k++) v[k][j] += s * v[k][i];\n      }\n    }\n    for (j = l; j < n; j++) {\n      v[i][j] = 0;\n      v[j][i] = 0;\n    }\n    v[i][i] = 1;\n    g = e[i];\n    l = i;\n  }\n\n  // accumulation of left hand transformations\n  for (i = n - 1; i != -1; i += -1) {\n    l = i + 1;\n    g = q[i];\n    for (j = l; j < n; j++) u[i][j] = 0;\n    if (g != 0.0) {\n      h = u[i][i] * g;\n      for (j = l; j < n; j++) {\n        s = 0.0;\n        for (k = l; k < m; k++) s += u[k][i] * u[k][j];\n        f = s / h;\n        for (k = i; k < m; k++) u[k][j] += f * u[k][i];\n      }\n      for (j = i; j < m; j++) u[j][i] = u[j][i] / g;\n    } else for (j = i; j < m; j++) u[j][i] = 0;\n    u[i][i] += 1;\n  }\n\n  // diagonalization of the bidiagonal form\n  prec = prec * x;\n  for (k = n - 1; k != -1; k += -1) {\n    for (var iteration = 0; iteration < itmax; iteration++) {\n      // test f splitting\n      var test_convergence = false;\n      for (l = k; l != -1; l += -1) {\n        if (Math.abs(e[l]) <= prec) {\n          test_convergence = true;\n          break;\n        }\n        if (Math.abs(q[l - 1]) <= prec) break;\n      }\n      if (!test_convergence) {\n        // cancellation of e[l] if l>0\n        c = 0.0;\n        s = 1.0;\n        var l1 = l - 1;\n        for (i = l; i < k + 1; i++) {\n          f = s * e[i];\n          e[i] = c * e[i];\n          if (Math.abs(f) <= prec) break;\n          g = q[i];\n          h = pythag(f, g);\n          q[i] = h;\n          c = g / h;\n          s = -f / h;\n          for (j = 0; j < m; j++) {\n            y = u[j][l1];\n            z = u[j][i];\n            u[j][l1] = y * c + z * s;\n            u[j][i] = -y * s + z * c;\n          }\n        }\n      }\n      // test f convergence\n      z = q[k];\n      if (l == k) {\n        //convergence\n        if (z < 0.0) {\n          //q[k] is made non-negative\n          q[k] = -z;\n          for (j = 0; j < n; j++) v[j][k] = -v[j][k];\n        }\n        break; //break out of iteration loop and move on to next k value\n      }\n      if (iteration >= itmax - 1) throw 'Error: no convergence.';\n      // shift from bottom 2x2 minor\n      x = q[l];\n      y = q[k - 1];\n      g = e[k - 1];\n      h = e[k];\n      f = ((y - z) * (y + z) + (g - h) * (g + h)) / (2.0 * h * y);\n      g = pythag(f, 1.0);\n      if (f < 0.0) f = ((x - z) * (x + z) + h * (y / (f - g) - h)) / x;\n      else f = ((x - z) * (x + z) + h * (y / (f + g) - h)) / x;\n      // next QR transformation\n      c = 1.0;\n      s = 1.0;\n      for (i = l + 1; i < k + 1; i++) {\n        g = e[i];\n        y = q[i];\n        h = s * g;\n        g = c * g;\n        z = pythag(f, h);\n        e[i - 1] = z;\n        c = f / z;\n        s = h / z;\n        f = x * c + g * s;\n        g = -x * s + g * c;\n        h = y * s;\n        y = y * c;\n        for (j = 0; j < n; j++) {\n          x = v[j][i - 1];\n          z = v[j][i];\n          v[j][i - 1] = x * c + z * s;\n          v[j][i] = -x * s + z * c;\n        }\n        z = pythag(f, h);\n        q[i - 1] = z;\n        c = f / z;\n        s = h / z;\n        f = c * g + s * y;\n        x = -s * g + c * y;\n        for (j = 0; j < m; j++) {\n          y = u[j][i - 1];\n          z = u[j][i];\n          u[j][i - 1] = y * c + z * s;\n          u[j][i] = -y * s + z * c;\n        }\n      }\n      e[l] = 0.0;\n      e[k] = f;\n      q[k] = x;\n    }\n  }\n\n  //vt= transpose(v)\n  //return (u,q,vt)\n  for (i = 0; i < q.length; i++) if (q[i] < prec) q[i] = 0;\n\n  //sort eigenvalues\n  for (i = 0; i < n; i++) {\n    //writeln(q)\n    for (j = i - 1; j >= 0; j--) {\n      if (q[j] < q[i]) {\n        //  writeln(i,'-',j)\n        c = q[j];\n        q[j] = q[i];\n        q[i] = c;\n        for (k = 0; k < u.length; k++) {\n          temp = u[k][i];\n          u[k][i] = u[k][j];\n          u[k][j] = temp;\n        }\n        for (k = 0; k < v.length; k++) {\n          temp = v[k][i];\n          v[k][i] = v[k][j];\n          v[k][j] = temp;\n        }\n        //\t   u.swapCols(i,j)\n        //\t   v.swapCols(i,j)\n        i = j;\n      }\n    }\n  }\n\n  return { U: u, S: q, V: v };\n};\n\nexport const numeric = _numeric;\n","/*!\nSunCalc is a JavaScript library for calculating sun/moon position and light phases.\nhttps://github.com/mourner/suncalc\n\nOriginal Copyright (c) 2011-2015, Vladimir Agafonkin\nES2019 Modifications Copyright (c) 2020, Theoodre Kruczek\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are\npermitted provided that the following conditions are met:\n\n   1. Redistributions of source code must retain the above copyright notice, this list of\n      conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright notice, this list\n      of conditions and the following disclaimer in the documentation and/or other materials\n      provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\nCOPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\nTORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nsun calculations are based on http://aa.quae.nl/en/reken/zonpositie.html formulas\n*/\n\nimport { DEG2RAD, TAU } from './constants';\n\nexport const SunCalc = {\n  MILLISECONDS_IN_A_DAY: 1000 * 60 * 60 * 24,\n  J1970: 2440588,\n  J2000: 2451545,\n  J0: 0.0009, // calculations for sun times\n  // Make some variables we can reusue a bunch\n  lw: null,\n  phi: null,\n  d: null,\n  H: null,\n  h: null,\n\n  // sun times configuration (angle, morning name, evening name)\n  times: [\n    [-0.833, 'sunrise', 'sunset'],\n    [-0.3, 'sunriseEnd', 'sunsetStart'],\n    [-6, 'dawn', 'dusk'],\n    [-12, 'nauticalDawn', 'nauticalDusk'],\n    [-18, 'nightEnd', 'night'],\n    [6, 'goldenHourEnd', 'goldenHour'],\n  ],\n  toJulian: (date) => date.valueOf() / SunCalc.MILLISECONDS_IN_A_DAY - 0.5 + SunCalc.J1970,\n  fromJulian: (j) => new Date((j + 0.5 - SunCalc.J1970) * SunCalc.MILLISECONDS_IN_A_DAY),\n  toDays(date) {\n    return SunCalc.toJulian(date) - SunCalc.J2000;\n  },\n  e: (TAU / 360) * 23.4397, // obliquity of the Earth\n  rightAscension: (l, b) => Math.atan2(Math.sin(l) * Math.cos(SunCalc.e) - Math.tan(b) * Math.sin(SunCalc.e), Math.cos(l)),\n  declination: (l, b) => Math.asin(Math.sin(b) * Math.cos(SunCalc.e) + Math.cos(b) * Math.sin(SunCalc.e) * Math.sin(l)),\n  azimuth: (H, phi, dec) => Math.atan2(Math.sin(H), Math.cos(H) * Math.sin(phi) - Math.tan(dec) * Math.cos(phi)),\n  altitude: (H, phi, dec) => Math.asin(Math.sin(phi) * Math.sin(dec) + Math.cos(phi) * Math.cos(dec) * Math.cos(H)),\n  siderealTime: (d, lw) => (TAU / 360) * (280.16 + 360.9856235 * d) - lw,\n  astroRefraction: (h) => {\n    if (h < 0)\n      // the following formula works for positive altitudes only.\n      h = 0; // if h = -0.08901179 a div/0 would occur.\n\n    // formula 16.4 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n    // 1.02 / Math.tan(h + 10.26 / (h + 5.10)) h in degrees, result in arc minutes -> converted to TAU / 360:\n    return 0.0002967 / Math.tan(h + 0.00312536 / (h + 0.08901179));\n  },\n  // general sun calculations\n  solarMeanAnomaly: (d) => (TAU / 360) * (357.5291 + 0.98560028 * d),\n  eclipticLongitude: (M) => {\n    var C = (TAU / 360) * (1.9148 * Math.sin(M) + 0.02 * Math.sin(2 * M) + 0.0003 * Math.sin(3 * M)), // equation of center\n      P = (TAU / 360) * 102.9372; // perihelion of the Earth\n\n    return M + C + P + TAU / 2;\n  },\n  sunCoords: (d) => {\n    var M = SunCalc.solarMeanAnomaly(d),\n      L = SunCalc.eclipticLongitude(M);\n\n    return {\n      dec: SunCalc.declination(L, 0),\n      ra: SunCalc.rightAscension(L, 0),\n    };\n  },\n  julianCycle: (d, lw) => Math.round(d - SunCalc.J0 - lw / ((2 * TAU) / 2)),\n  approxTransit: (Ht, lw, n) => SunCalc.J0 + (Ht + lw) / ((2 * TAU) / 2) + n,\n  solarTransitJ: (ds, M, L) => SunCalc.J2000 + ds + 0.0053 * Math.sin(M) - 0.0069 * Math.sin(2 * L),\n  hourAngle: (h, phi, d) => Math.acos((Math.sin(h) - Math.sin(phi) * Math.sin(d)) / (Math.cos(phi) * Math.cos(d))),\n  // returns set time for the given sun altitude\n  getSetJ: (h, lw, phi, dec, n, M, L) => {\n    var w = SunCalc.hourAngle(h, phi, dec),\n      a = SunCalc.approxTransit(w, lw, n);\n    return SunCalc.solarTransitJ(a, M, L);\n  },\n  moonCoords: (d) => {\n    // geocentric ecliptic coordinates of the moon\n\n    var L = (TAU / 360) * (218.316 + 13.176396 * d), // ecliptic longitude\n      M = (TAU / 360) * (134.963 + 13.064993 * d), // mean anomaly\n      F = (TAU / 360) * (93.272 + 13.22935 * d), // mean distance\n      l = L + (TAU / 360) * 6.289 * Math.sin(M), // longitude\n      b = (TAU / 360) * 5.128 * Math.sin(F), // latitude\n      dt = 385001 - 20905 * Math.cos(M); // distance to the moon in km\n\n    return {\n      ra: SunCalc.rightAscension(l, b),\n      dec: SunCalc.declination(l, b),\n      dist: dt,\n    };\n  },\n  hoursLater: (date, h) => new Date(date.valueOf() + (h * SunCalc.MILLISECONDS_IN_A_DAY) / 24),\n  getStarPosition: (date, lat, lng, c) => {\n    SunCalc.lw = DEG2RAD * -lng;\n    SunCalc.phi = DEG2RAD * lat;\n    SunCalc.d = SunCalc.toDays(date);\n    SunCalc.H = SunCalc.siderealTime(SunCalc.d, SunCalc.lw) - (c.ra / 12) * Math.PI;\n    SunCalc.h = SunCalc.altitude(SunCalc.H, SunCalc.phi, (c.dec / 180) * Math.PI);\n\n    SunCalc.h += SunCalc.astroRefraction(SunCalc.h); // altitude correction for refraction\n\n    return {\n      azimuth: SunCalc.azimuth(SunCalc.H, SunCalc.phi, (c.dec / 180) * Math.PI),\n      altitude: SunCalc.h,\n      vmag: c.vmag,\n      name: c.name,\n      pname: c.pname,\n      dist: c.dist,\n    };\n  },\n  // calculates sun position for a given date and latitude/longitude\n  getSunPosition: (date, lat, lng) => {\n    var lw = (TAU / 360) * -lng,\n      phi = (TAU / 360) * lat,\n      d = SunCalc.toDays(date),\n      c = SunCalc.sunCoords(d),\n      H = SunCalc.siderealTime(d, lw) - c.ra;\n\n    return {\n      azimuth: SunCalc.azimuth(H, phi, c.dec),\n      altitude: SunCalc.altitude(H, phi, c.dec),\n    };\n  },\n  // adds a custom time to the times config\n  addTime: (angle, riseName, setName) => {\n    SunCalc.times.push([angle, riseName, setName]);\n  },\n  // calculates sun times for a given date and latitude/longitude\n  getTimes: (date, lat, lng) => {\n    var lw = (TAU / 360) * -lng,\n      phi = (TAU / 360) * lat,\n      d = SunCalc.toDays(date),\n      n = SunCalc.julianCycle(d, lw),\n      ds = SunCalc.approxTransit(0, lw, n),\n      M = SunCalc.solarMeanAnomaly(ds),\n      L = SunCalc.eclipticLongitude(M),\n      dec = SunCalc.declination(L, 0),\n      Jnoon = SunCalc.solarTransitJ(ds, M, L),\n      i,\n      len,\n      time,\n      Jset,\n      Jrise;\n\n    var result = {\n      solarNoon: SunCalc.fromJulian(Jnoon),\n      nadir: SunCalc.fromJulian(Jnoon - 0.5),\n    };\n\n    for (i = 0, len = SunCalc.times.length; i < len; i += 1) {\n      time = SunCalc.times[i];\n\n      Jset = SunCalc.getSetJ((time[0] * TAU) / 360, lw, phi, dec, n, M, L);\n      Jrise = Jnoon - (Jset - Jnoon);\n\n      result[time[1]] = SunCalc.fromJulian(Jrise);\n      result[time[2]] = SunCalc.fromJulian(Jset);\n    }\n\n    return result;\n  },\n  // moon calculations, based on http://aa.quae.nl/en/reken/hemelpositie.html formulas\n  getMoonPosition: (date, lat, lng) => {\n    var lw = (TAU / 360) * -lng,\n      phi = (TAU / 360) * lat,\n      d = SunCalc.toDays(date),\n      c = SunCalc.moonCoords(d),\n      H = SunCalc.siderealTime(d, lw) - c.ra,\n      h = SunCalc.altitude(H, phi, c.dec),\n      // formula 14.1 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n      pa = Math.atan2(Math.sin(H), Math.tan(phi) * Math.cos(c.dec) - Math.sin(c.dec) * Math.cos(H));\n\n    h = h + SunCalc.astroRefraction(h); // altitude correction for refraction\n\n    return {\n      azimuth: SunCalc.azimuth(H, phi, c.dec),\n      altitude: h,\n      distance: c.dist,\n      parallacticAngle: pa,\n    };\n  },\n  // calculations for illumination parameters of the moon,\n  // based on http://idlastro.gsfc.nasa.gov/ftp/pro/astro/mphase.pro formulas and\n  // Chapter 48 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n  getMoonIllumination: (date) => {\n    var d = SunCalc.toDays(date || new Date()),\n      s = SunCalc.sunCoords(d),\n      m = SunCalc.moonCoords(d),\n      sdist = 149598000, // distance from Earth to Sun in km\n      phi = Math.acos(Math.sin(s.dec) * Math.sin(m.dec) + Math.cos(s.dec) * Math.cos(m.dec) * Math.cos(s.ra - m.ra)),\n      inc = Math.atan2(sdist * Math.sin(phi), m.dist - sdist * Math.cos(phi)),\n      angle = Math.atan2(Math.cos(s.dec) * Math.sin(s.ra - m.ra), Math.sin(s.dec) * Math.cos(m.dec) - Math.cos(s.dec) * Math.sin(m.dec) * Math.cos(s.ra - m.ra));\n\n    return {\n      fraction: (1 + Math.cos(inc)) / 2,\n      phase: 0.5 + (0.5 * inc * (angle < 0 ? -1 : 1)) / TAU / 2,\n      angle: angle,\n    };\n  },\n  // calculations for moon rise/set times are based on http://www.stargazing.net/kepler/moonrise.html article\n  getMoonTimes: (date, lat, lng, inUTC) => {\n    var t = new Date(date);\n    if (inUTC) t.setUTCHours(0, 0, 0, 0);\n    else t.setHours(0, 0, 0, 0);\n\n    var hc = (0.133 * TAU) / 360,\n      h0 = SunCalc.getMoonPosition(t, lat, lng).altitude - hc,\n      h1,\n      h2,\n      rise,\n      set,\n      a,\n      b,\n      xe,\n      ye,\n      d,\n      roots,\n      x1,\n      x2,\n      dx;\n\n    // go in 2-hour chunks, each time seeing if a 3-point quadratic curve crosses zero (which means rise or set)\n    for (var i = 1; i <= 24; i += 2) {\n      h1 = SunCalc.getMoonPosition(SunCalc.hoursLater(t, i), lat, lng).altitude - hc;\n      h2 = SunCalc.getMoonPosition(SunCalc.hoursLater(t, i + 1), lat, lng).altitude - hc;\n\n      a = (h0 + h2) / 2 - h1;\n      b = (h2 - h0) / 2;\n      xe = -b / (2 * a);\n      ye = (a * xe + b) * xe + h1;\n      d = b * b - 4 * a * h1;\n      roots = 0;\n\n      if (d >= 0) {\n        dx = Math.sqrt(d) / (Math.abs(a) * 2);\n        x1 = xe - dx;\n        x2 = xe + dx;\n        if (Math.abs(x1) <= 1) roots++;\n        if (Math.abs(x2) <= 1) roots++;\n        if (x1 < -1) x1 = x2;\n      }\n\n      if (roots === 1) {\n        if (h0 < 0) rise = i + x1;\n        else set = i + x1;\n      } else if (roots === 2) {\n        rise = i + (ye < 0 ? x2 : x1);\n        set = i + (ye < 0 ? x1 : x2);\n      }\n\n      if (rise && set) break;\n\n      h0 = h2;\n    }\n\n    var result = {};\n\n    if (rise) result.rise = SunCalc.hoursLater(t, rise);\n    if (set) result.set = SunCalc.hoursLater(t, set);\n\n    if (!rise && !set) result[ye > 0 ? 'alwaysUp' : 'alwaysDown'] = true;\n\n    return result;\n  },\n};\n","/*!\n * satellite-js v4.1.3\n * (c) 2013 Shashwat Kandadai and UCSC\n * https://github.com/shashwatak/satellite-js\n * License: MIT\n */\n\nvar pi = Math.PI;\nvar twoPi = pi * 2;\nvar deg2rad = pi / 180.0;\nvar rad2deg = 180 / pi;\nvar minutesPerDay = 1440.0;\nvar mu = 398600.5; // in km3 / s2\n\nvar earthRadius = 6378.137; // in km\n\nvar xke = 60.0 / Math.sqrt(earthRadius * earthRadius * earthRadius / mu);\nvar vkmpersec = earthRadius * xke / 60.0;\nvar tumin = 1.0 / xke;\nvar j2 = 0.00108262998905;\nvar j3 = -0.00000253215306;\nvar j4 = -0.00000161098761;\nvar j3oj2 = j3 / j2;\nvar x2o3 = 2.0 / 3.0;\n\nvar constants = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  pi: pi,\n  twoPi: twoPi,\n  deg2rad: deg2rad,\n  rad2deg: rad2deg,\n  minutesPerDay: minutesPerDay,\n  mu: mu,\n  earthRadius: earthRadius,\n  xke: xke,\n  vkmpersec: vkmpersec,\n  tumin: tumin,\n  j2: j2,\n  j3: j3,\n  j4: j4,\n  j3oj2: j3oj2,\n  x2o3: x2o3\n});\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure days2mdhms\n *\n *  this procedure converts the day of the year, days, to the equivalent month\n *    day, hour, minute and second.\n *\n *  algorithm     : set up array for the number of days per month\n *                  find leap year - use 1900 because 2000 is a leap year\n *                  loop through a temp value while the value is < the days\n *                  perform int conversions to the correct day and month\n *                  convert remainder into h m s using type conversions\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    year        - year                           1900 .. 2100\n *    days        - julian day of the year         0.0  .. 366.0\n *\n *  outputs       :\n *    mon         - month                          1 .. 12\n *    day         - day                            1 .. 28,29,30,31\n *    hr          - hour                           0 .. 23\n *    min         - minute                         0 .. 59\n *    sec         - second                         0.0 .. 59.999\n *\n *  locals        :\n *    dayofyr     - day of year\n *    temp        - temporary extended values\n *    inttemp     - temporary int value\n *    i           - index\n *    lmonth[12]  - int array containing the number of days per month\n *\n *  coupling      :\n *    none.\n * --------------------------------------------------------------------------- */\nfunction days2mdhms(year, days) {\n  var lmonth = [31, year % 4 === 0 ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  var dayofyr = Math.floor(days); //  ----------------- find month and day of month ----------------\n\n  var i = 1;\n  var inttemp = 0;\n\n  while (dayofyr > inttemp + lmonth[i - 1] && i < 12) {\n    inttemp += lmonth[i - 1];\n    i += 1;\n  }\n\n  var mon = i;\n  var day = dayofyr - inttemp; //  ----------------- find hours minutes and seconds -------------\n\n  var temp = (days - dayofyr) * 24.0;\n  var hr = Math.floor(temp);\n  temp = (temp - hr) * 60.0;\n  var minute = Math.floor(temp);\n  var sec = (temp - minute) * 60.0;\n  return {\n    mon: mon,\n    day: day,\n    hr: hr,\n    minute: minute,\n    sec: sec\n  };\n}\n/* -----------------------------------------------------------------------------\n *\n *                           procedure jday\n *\n *  this procedure finds the julian date given the year, month, day, and time.\n *    the julian date is defined by each elapsed day since noon, jan 1, 4713 bc.\n *\n *  algorithm     : calculate the answer in one step for efficiency\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    year        - year                           1900 .. 2100\n *    mon         - month                          1 .. 12\n *    day         - day                            1 .. 28,29,30,31\n *    hr          - universal time hour            0 .. 23\n *    min         - universal time min             0 .. 59\n *    sec         - universal time sec             0.0 .. 59.999\n *\n *  outputs       :\n *    jd          - julian date                    days from 4713 bc\n *\n *  locals        :\n *    none.\n *\n *  coupling      :\n *    none.\n *\n *  references    :\n *    vallado       2007, 189, alg 14, ex 3-14\n *\n * --------------------------------------------------------------------------- */\n\nfunction jdayInternal(year, mon, day, hr, minute, sec) {\n  var msec = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  return 367.0 * year - Math.floor(7 * (year + Math.floor((mon + 9) / 12.0)) * 0.25) + Math.floor(275 * mon / 9.0) + day + 1721013.5 + ((msec / 60000 + sec / 60.0 + minute) / 60.0 + hr) / 24.0 // ut in days\n  // # - 0.5*sgn(100.0*year + mon - 190002.5) + 0.5;\n  ;\n}\n\nfunction jday(year, mon, day, hr, minute, sec, msec) {\n  if (year instanceof Date) {\n    var date = year;\n    return jdayInternal(date.getUTCFullYear(), date.getUTCMonth() + 1, // Note, this function requires months in range 1-12.\n    date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  }\n\n  return jdayInternal(year, mon, day, hr, minute, sec, msec);\n}\n/* -----------------------------------------------------------------------------\n *\n *                           procedure invjday\n *\n *  this procedure finds the year, month, day, hour, minute and second\n *  given the julian date. tu can be ut1, tdt, tdb, etc.\n *\n *  algorithm     : set up starting values\n *                  find leap year - use 1900 because 2000 is a leap year\n *                  find the elapsed days through the year in a loop\n *                  call routine to find each individual value\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    jd          - julian date                    days from 4713 bc\n *\n *  outputs       :\n *    year        - year                           1900 .. 2100\n *    mon         - month                          1 .. 12\n *    day         - day                            1 .. 28,29,30,31\n *    hr          - hour                           0 .. 23\n *    min         - minute                         0 .. 59\n *    sec         - second                         0.0 .. 59.999\n *\n *  locals        :\n *    days        - day of year plus fractional\n *                  portion of a day               days\n *    tu          - julian centuries from 0 h\n *                  jan 0, 1900\n *    temp        - temporary double values\n *    leapyrs     - number of leap years from 1900\n *\n *  coupling      :\n *    days2mdhms  - finds month, day, hour, minute and second given days and year\n *\n *  references    :\n *    vallado       2007, 208, alg 22, ex 3-13\n * --------------------------------------------------------------------------- */\n\nfunction invjday(jd, asArray) {\n  // --------------- find year and days of the year -\n  var temp = jd - 2415019.5;\n  var tu = temp / 365.25;\n  var year = 1900 + Math.floor(tu);\n  var leapyrs = Math.floor((year - 1901) * 0.25); // optional nudge by 8.64x10-7 sec to get even outputs\n\n  var days = temp - ((year - 1900) * 365.0 + leapyrs) + 0.00000000001; // ------------ check for case of beginning of a year -----------\n\n  if (days < 1.0) {\n    year -= 1;\n    leapyrs = Math.floor((year - 1901) * 0.25);\n    days = temp - ((year - 1900) * 365.0 + leapyrs);\n  } // ----------------- find remaing data  -------------------------\n\n\n  var mdhms = days2mdhms(year, days);\n  var mon = mdhms.mon,\n      day = mdhms.day,\n      hr = mdhms.hr,\n      minute = mdhms.minute;\n  var sec = mdhms.sec - 0.00000086400;\n\n  if (asArray) {\n    return [year, mon, day, hr, minute, Math.floor(sec)];\n  }\n\n  return new Date(Date.UTC(year, mon - 1, day, hr, minute, Math.floor(sec)));\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure dpper\n *\n *  this procedure provides deep space long period periodic contributions\n *    to the mean elements.  by design, these periodics are zero at epoch.\n *    this used to be dscom which included initialization, but it's really a\n *    recurring function.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    e3          -\n *    ee2         -\n *    peo         -\n *    pgho        -\n *    pho         -\n *    pinco       -\n *    plo         -\n *    se2 , se3 , sgh2, sgh3, sgh4, sh2, sh3, si2, si3, sl2, sl3, sl4 -\n *    t           -\n *    xh2, xh3, xi2, xi3, xl2, xl3, xl4 -\n *    zmol        -\n *    zmos        -\n *    ep          - eccentricity                           0.0 - 1.0\n *    inclo       - inclination - needed for lyddane modification\n *    nodep       - right ascension of ascending node\n *    argpp       - argument of perigee\n *    mp          - mean anomaly\n *\n *  outputs       :\n *    ep          - eccentricity                           0.0 - 1.0\n *    inclp       - inclination\n *    nodep        - right ascension of ascending node\n *    argpp       - argument of perigee\n *    mp          - mean anomaly\n *\n *  locals        :\n *    alfdp       -\n *    betdp       -\n *    cosip  , sinip  , cosop  , sinop  ,\n *    dalf        -\n *    dbet        -\n *    dls         -\n *    f2, f3      -\n *    pe          -\n *    pgh         -\n *    ph          -\n *    pinc        -\n *    pl          -\n *    sel   , ses   , sghl  , sghs  , shl   , shs   , sil   , sinzf , sis   ,\n *    sll   , sls\n *    xls         -\n *    xnoh        -\n *    zf          -\n *    zm          -\n *\n *  coupling      :\n *    none.\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\n\nfunction dpper(satrec, options) {\n  var e3 = satrec.e3,\n      ee2 = satrec.ee2,\n      peo = satrec.peo,\n      pgho = satrec.pgho,\n      pho = satrec.pho,\n      pinco = satrec.pinco,\n      plo = satrec.plo,\n      se2 = satrec.se2,\n      se3 = satrec.se3,\n      sgh2 = satrec.sgh2,\n      sgh3 = satrec.sgh3,\n      sgh4 = satrec.sgh4,\n      sh2 = satrec.sh2,\n      sh3 = satrec.sh3,\n      si2 = satrec.si2,\n      si3 = satrec.si3,\n      sl2 = satrec.sl2,\n      sl3 = satrec.sl3,\n      sl4 = satrec.sl4,\n      t = satrec.t,\n      xgh2 = satrec.xgh2,\n      xgh3 = satrec.xgh3,\n      xgh4 = satrec.xgh4,\n      xh2 = satrec.xh2,\n      xh3 = satrec.xh3,\n      xi2 = satrec.xi2,\n      xi3 = satrec.xi3,\n      xl2 = satrec.xl2,\n      xl3 = satrec.xl3,\n      xl4 = satrec.xl4,\n      zmol = satrec.zmol,\n      zmos = satrec.zmos;\n  var init = options.init,\n      opsmode = options.opsmode;\n  var ep = options.ep,\n      inclp = options.inclp,\n      nodep = options.nodep,\n      argpp = options.argpp,\n      mp = options.mp; // Copy satellite attributes into local variables for convenience\n  // and symmetry in writing formulae.\n\n  var alfdp;\n  var betdp;\n  var cosip;\n  var sinip;\n  var cosop;\n  var sinop;\n  var dalf;\n  var dbet;\n  var dls;\n  var f2;\n  var f3;\n  var pe;\n  var pgh;\n  var ph;\n  var pinc;\n  var pl;\n  var sinzf;\n  var xls;\n  var xnoh;\n  var zf;\n  var zm; //  ---------------------- constants -----------------------------\n\n  var zns = 1.19459e-5;\n  var zes = 0.01675;\n  var znl = 1.5835218e-4;\n  var zel = 0.05490; //  --------------- calculate time varying periodics -----------\n\n  zm = zmos + zns * t; // be sure that the initial call has time set to zero\n\n  if (init === 'y') {\n    zm = zmos;\n  }\n\n  zf = zm + 2.0 * zes * Math.sin(zm);\n  sinzf = Math.sin(zf);\n  f2 = 0.5 * sinzf * sinzf - 0.25;\n  f3 = -0.5 * sinzf * Math.cos(zf);\n  var ses = se2 * f2 + se3 * f3;\n  var sis = si2 * f2 + si3 * f3;\n  var sls = sl2 * f2 + sl3 * f3 + sl4 * sinzf;\n  var sghs = sgh2 * f2 + sgh3 * f3 + sgh4 * sinzf;\n  var shs = sh2 * f2 + sh3 * f3;\n  zm = zmol + znl * t;\n\n  if (init === 'y') {\n    zm = zmol;\n  }\n\n  zf = zm + 2.0 * zel * Math.sin(zm);\n  sinzf = Math.sin(zf);\n  f2 = 0.5 * sinzf * sinzf - 0.25;\n  f3 = -0.5 * sinzf * Math.cos(zf);\n  var sel = ee2 * f2 + e3 * f3;\n  var sil = xi2 * f2 + xi3 * f3;\n  var sll = xl2 * f2 + xl3 * f3 + xl4 * sinzf;\n  var sghl = xgh2 * f2 + xgh3 * f3 + xgh4 * sinzf;\n  var shll = xh2 * f2 + xh3 * f3;\n  pe = ses + sel;\n  pinc = sis + sil;\n  pl = sls + sll;\n  pgh = sghs + sghl;\n  ph = shs + shll;\n\n  if (init === 'n') {\n    pe -= peo;\n    pinc -= pinco;\n    pl -= plo;\n    pgh -= pgho;\n    ph -= pho;\n    inclp += pinc;\n    ep += pe;\n    sinip = Math.sin(inclp);\n    cosip = Math.cos(inclp);\n    /* ----------------- apply periodics directly ------------ */\n    // sgp4fix for lyddane choice\n    // strn3 used original inclination - this is technically feasible\n    // gsfc used perturbed inclination - also technically feasible\n    // probably best to readjust the 0.2 limit value and limit discontinuity\n    // 0.2 rad = 11.45916 deg\n    // use next line for original strn3 approach and original inclination\n    // if (inclo >= 0.2)\n    // use next line for gsfc version and perturbed inclination\n\n    if (inclp >= 0.2) {\n      ph /= sinip;\n      pgh -= cosip * ph;\n      argpp += pgh;\n      nodep += ph;\n      mp += pl;\n    } else {\n      //  ---- apply periodics with lyddane modification ----\n      sinop = Math.sin(nodep);\n      cosop = Math.cos(nodep);\n      alfdp = sinip * sinop;\n      betdp = sinip * cosop;\n      dalf = ph * cosop + pinc * cosip * sinop;\n      dbet = -ph * sinop + pinc * cosip * cosop;\n      alfdp += dalf;\n      betdp += dbet;\n      nodep %= twoPi; //  sgp4fix for afspc written intrinsic functions\n      //  nodep used without a trigonometric function ahead\n\n      if (nodep < 0.0 && opsmode === 'a') {\n        nodep += twoPi;\n      }\n\n      xls = mp + argpp + cosip * nodep;\n      dls = pl + pgh - pinc * nodep * sinip;\n      xls += dls;\n      xnoh = nodep;\n      nodep = Math.atan2(alfdp, betdp); //  sgp4fix for afspc written intrinsic functions\n      //  nodep used without a trigonometric function ahead\n\n      if (nodep < 0.0 && opsmode === 'a') {\n        nodep += twoPi;\n      }\n\n      if (Math.abs(xnoh - nodep) > pi) {\n        if (nodep < xnoh) {\n          nodep += twoPi;\n        } else {\n          nodep -= twoPi;\n        }\n      }\n\n      mp += pl;\n      argpp = xls - mp - cosip * nodep;\n    }\n  }\n\n  return {\n    ep: ep,\n    inclp: inclp,\n    nodep: nodep,\n    argpp: argpp,\n    mp: mp\n  };\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure dscom\n *\n *  this procedure provides deep space common items used by both the secular\n *    and periodics subroutines.  input is provided as shown. this routine\n *    used to be called dpper, but the functions inside weren't well organized.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    epoch       -\n *    ep          - eccentricity\n *    argpp       - argument of perigee\n *    tc          -\n *    inclp       - inclination\n *    nodep       - right ascension of ascending node\n *    np          - mean motion\n *\n *  outputs       :\n *    sinim  , cosim  , sinomm , cosomm , snodm  , cnodm\n *    day         -\n *    e3          -\n *    ee2         -\n *    em          - eccentricity\n *    emsq        - eccentricity squared\n *    gam         -\n *    peo         -\n *    pgho        -\n *    pho         -\n *    pinco       -\n *    plo         -\n *    rtemsq      -\n *    se2, se3         -\n *    sgh2, sgh3, sgh4        -\n *    sh2, sh3, si2, si3, sl2, sl3, sl4         -\n *    s1, s2, s3, s4, s5, s6, s7          -\n *    ss1, ss2, ss3, ss4, ss5, ss6, ss7, sz1, sz2, sz3         -\n *    sz11, sz12, sz13, sz21, sz22, sz23, sz31, sz32, sz33        -\n *    xgh2, xgh3, xgh4, xh2, xh3, xi2, xi3, xl2, xl3, xl4         -\n *    nm          - mean motion\n *    z1, z2, z3, z11, z12, z13, z21, z22, z23, z31, z32, z33         -\n *    zmol        -\n *    zmos        -\n *\n *  locals        :\n *    a1, a2, a3, a4, a5, a6, a7, a8, a9, a10         -\n *    betasq      -\n *    cc          -\n *    ctem, stem        -\n *    x1, x2, x3, x4, x5, x6, x7, x8          -\n *    xnodce      -\n *    xnoi        -\n *    zcosg  , zsing  , zcosgl , zsingl , zcosh  , zsinh  , zcoshl , zsinhl ,\n *    zcosi  , zsini  , zcosil , zsinil ,\n *    zx          -\n *    zy          -\n *\n *  coupling      :\n *    none.\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\n\nfunction dscom(options) {\n  var epoch = options.epoch,\n      ep = options.ep,\n      argpp = options.argpp,\n      tc = options.tc,\n      inclp = options.inclp,\n      nodep = options.nodep,\n      np = options.np;\n  var a1;\n  var a2;\n  var a3;\n  var a4;\n  var a5;\n  var a6;\n  var a7;\n  var a8;\n  var a9;\n  var a10;\n  var cc;\n  var x1;\n  var x2;\n  var x3;\n  var x4;\n  var x5;\n  var x6;\n  var x7;\n  var x8;\n  var zcosg;\n  var zsing;\n  var zcosh;\n  var zsinh;\n  var zcosi;\n  var zsini;\n  var ss1;\n  var ss2;\n  var ss3;\n  var ss4;\n  var ss5;\n  var ss6;\n  var ss7;\n  var sz1;\n  var sz2;\n  var sz3;\n  var sz11;\n  var sz12;\n  var sz13;\n  var sz21;\n  var sz22;\n  var sz23;\n  var sz31;\n  var sz32;\n  var sz33;\n  var s1;\n  var s2;\n  var s3;\n  var s4;\n  var s5;\n  var s6;\n  var s7;\n  var z1;\n  var z2;\n  var z3;\n  var z11;\n  var z12;\n  var z13;\n  var z21;\n  var z22;\n  var z23;\n  var z31;\n  var z32;\n  var z33; // -------------------------- constants -------------------------\n\n  var zes = 0.01675;\n  var zel = 0.05490;\n  var c1ss = 2.9864797e-6;\n  var c1l = 4.7968065e-7;\n  var zsinis = 0.39785416;\n  var zcosis = 0.91744867;\n  var zcosgs = 0.1945905;\n  var zsings = -0.98088458; //  --------------------- local variables ------------------------\n\n  var nm = np;\n  var em = ep;\n  var snodm = Math.sin(nodep);\n  var cnodm = Math.cos(nodep);\n  var sinomm = Math.sin(argpp);\n  var cosomm = Math.cos(argpp);\n  var sinim = Math.sin(inclp);\n  var cosim = Math.cos(inclp);\n  var emsq = em * em;\n  var betasq = 1.0 - emsq;\n  var rtemsq = Math.sqrt(betasq); //  ----------------- initialize lunar solar terms ---------------\n\n  var peo = 0.0;\n  var pinco = 0.0;\n  var plo = 0.0;\n  var pgho = 0.0;\n  var pho = 0.0;\n  var day = epoch + 18261.5 + tc / 1440.0;\n  var xnodce = (4.5236020 - 9.2422029e-4 * day) % twoPi;\n  var stem = Math.sin(xnodce);\n  var ctem = Math.cos(xnodce);\n  var zcosil = 0.91375164 - 0.03568096 * ctem;\n  var zsinil = Math.sqrt(1.0 - zcosil * zcosil);\n  var zsinhl = 0.089683511 * stem / zsinil;\n  var zcoshl = Math.sqrt(1.0 - zsinhl * zsinhl);\n  var gam = 5.8351514 + 0.0019443680 * day;\n  var zx = 0.39785416 * stem / zsinil;\n  var zy = zcoshl * ctem + 0.91744867 * zsinhl * stem;\n  zx = Math.atan2(zx, zy);\n  zx += gam - xnodce;\n  var zcosgl = Math.cos(zx);\n  var zsingl = Math.sin(zx); //  ------------------------- do solar terms ---------------------\n\n  zcosg = zcosgs;\n  zsing = zsings;\n  zcosi = zcosis;\n  zsini = zsinis;\n  zcosh = cnodm;\n  zsinh = snodm;\n  cc = c1ss;\n  var xnoi = 1.0 / nm;\n  var lsflg = 0;\n\n  while (lsflg < 2) {\n    lsflg += 1;\n    a1 = zcosg * zcosh + zsing * zcosi * zsinh;\n    a3 = -zsing * zcosh + zcosg * zcosi * zsinh;\n    a7 = -zcosg * zsinh + zsing * zcosi * zcosh;\n    a8 = zsing * zsini;\n    a9 = zsing * zsinh + zcosg * zcosi * zcosh;\n    a10 = zcosg * zsini;\n    a2 = cosim * a7 + sinim * a8;\n    a4 = cosim * a9 + sinim * a10;\n    a5 = -sinim * a7 + cosim * a8;\n    a6 = -sinim * a9 + cosim * a10;\n    x1 = a1 * cosomm + a2 * sinomm;\n    x2 = a3 * cosomm + a4 * sinomm;\n    x3 = -a1 * sinomm + a2 * cosomm;\n    x4 = -a3 * sinomm + a4 * cosomm;\n    x5 = a5 * sinomm;\n    x6 = a6 * sinomm;\n    x7 = a5 * cosomm;\n    x8 = a6 * cosomm;\n    z31 = 12.0 * x1 * x1 - 3.0 * x3 * x3;\n    z32 = 24.0 * x1 * x2 - 6.0 * x3 * x4;\n    z33 = 12.0 * x2 * x2 - 3.0 * x4 * x4;\n    z1 = 3.0 * (a1 * a1 + a2 * a2) + z31 * emsq;\n    z2 = 6.0 * (a1 * a3 + a2 * a4) + z32 * emsq;\n    z3 = 3.0 * (a3 * a3 + a4 * a4) + z33 * emsq;\n    z11 = -6.0 * a1 * a5 + emsq * (-24.0 * x1 * x7 - 6.0 * x3 * x5);\n    z12 = -6.0 * (a1 * a6 + a3 * a5) + emsq * (-24.0 * (x2 * x7 + x1 * x8) + -6.0 * (x3 * x6 + x4 * x5));\n    z13 = -6.0 * a3 * a6 + emsq * (-24.0 * x2 * x8 - 6.0 * x4 * x6);\n    z21 = 6.0 * a2 * a5 + emsq * (24.0 * x1 * x5 - 6.0 * x3 * x7);\n    z22 = 6.0 * (a4 * a5 + a2 * a6) + emsq * (24.0 * (x2 * x5 + x1 * x6) - 6.0 * (x4 * x7 + x3 * x8));\n    z23 = 6.0 * a4 * a6 + emsq * (24.0 * x2 * x6 - 6.0 * x4 * x8);\n    z1 = z1 + z1 + betasq * z31;\n    z2 = z2 + z2 + betasq * z32;\n    z3 = z3 + z3 + betasq * z33;\n    s3 = cc * xnoi;\n    s2 = -0.5 * s3 / rtemsq;\n    s4 = s3 * rtemsq;\n    s1 = -15.0 * em * s4;\n    s5 = x1 * x3 + x2 * x4;\n    s6 = x2 * x3 + x1 * x4;\n    s7 = x2 * x4 - x1 * x3; //  ----------------------- do lunar terms -------------------\n\n    if (lsflg === 1) {\n      ss1 = s1;\n      ss2 = s2;\n      ss3 = s3;\n      ss4 = s4;\n      ss5 = s5;\n      ss6 = s6;\n      ss7 = s7;\n      sz1 = z1;\n      sz2 = z2;\n      sz3 = z3;\n      sz11 = z11;\n      sz12 = z12;\n      sz13 = z13;\n      sz21 = z21;\n      sz22 = z22;\n      sz23 = z23;\n      sz31 = z31;\n      sz32 = z32;\n      sz33 = z33;\n      zcosg = zcosgl;\n      zsing = zsingl;\n      zcosi = zcosil;\n      zsini = zsinil;\n      zcosh = zcoshl * cnodm + zsinhl * snodm;\n      zsinh = snodm * zcoshl - cnodm * zsinhl;\n      cc = c1l;\n    }\n  }\n\n  var zmol = (4.7199672 + (0.22997150 * day - gam)) % twoPi;\n  var zmos = (6.2565837 + 0.017201977 * day) % twoPi; //  ------------------------ do solar terms ----------------------\n\n  var se2 = 2.0 * ss1 * ss6;\n  var se3 = 2.0 * ss1 * ss7;\n  var si2 = 2.0 * ss2 * sz12;\n  var si3 = 2.0 * ss2 * (sz13 - sz11);\n  var sl2 = -2.0 * ss3 * sz2;\n  var sl3 = -2.0 * ss3 * (sz3 - sz1);\n  var sl4 = -2.0 * ss3 * (-21.0 - 9.0 * emsq) * zes;\n  var sgh2 = 2.0 * ss4 * sz32;\n  var sgh3 = 2.0 * ss4 * (sz33 - sz31);\n  var sgh4 = -18.0 * ss4 * zes;\n  var sh2 = -2.0 * ss2 * sz22;\n  var sh3 = -2.0 * ss2 * (sz23 - sz21); //  ------------------------ do lunar terms ----------------------\n\n  var ee2 = 2.0 * s1 * s6;\n  var e3 = 2.0 * s1 * s7;\n  var xi2 = 2.0 * s2 * z12;\n  var xi3 = 2.0 * s2 * (z13 - z11);\n  var xl2 = -2.0 * s3 * z2;\n  var xl3 = -2.0 * s3 * (z3 - z1);\n  var xl4 = -2.0 * s3 * (-21.0 - 9.0 * emsq) * zel;\n  var xgh2 = 2.0 * s4 * z32;\n  var xgh3 = 2.0 * s4 * (z33 - z31);\n  var xgh4 = -18.0 * s4 * zel;\n  var xh2 = -2.0 * s2 * z22;\n  var xh3 = -2.0 * s2 * (z23 - z21);\n  return {\n    snodm: snodm,\n    cnodm: cnodm,\n    sinim: sinim,\n    cosim: cosim,\n    sinomm: sinomm,\n    cosomm: cosomm,\n    day: day,\n    e3: e3,\n    ee2: ee2,\n    em: em,\n    emsq: emsq,\n    gam: gam,\n    peo: peo,\n    pgho: pgho,\n    pho: pho,\n    pinco: pinco,\n    plo: plo,\n    rtemsq: rtemsq,\n    se2: se2,\n    se3: se3,\n    sgh2: sgh2,\n    sgh3: sgh3,\n    sgh4: sgh4,\n    sh2: sh2,\n    sh3: sh3,\n    si2: si2,\n    si3: si3,\n    sl2: sl2,\n    sl3: sl3,\n    sl4: sl4,\n    s1: s1,\n    s2: s2,\n    s3: s3,\n    s4: s4,\n    s5: s5,\n    s6: s6,\n    s7: s7,\n    ss1: ss1,\n    ss2: ss2,\n    ss3: ss3,\n    ss4: ss4,\n    ss5: ss5,\n    ss6: ss6,\n    ss7: ss7,\n    sz1: sz1,\n    sz2: sz2,\n    sz3: sz3,\n    sz11: sz11,\n    sz12: sz12,\n    sz13: sz13,\n    sz21: sz21,\n    sz22: sz22,\n    sz23: sz23,\n    sz31: sz31,\n    sz32: sz32,\n    sz33: sz33,\n    xgh2: xgh2,\n    xgh3: xgh3,\n    xgh4: xgh4,\n    xh2: xh2,\n    xh3: xh3,\n    xi2: xi2,\n    xi3: xi3,\n    xl2: xl2,\n    xl3: xl3,\n    xl4: xl4,\n    nm: nm,\n    z1: z1,\n    z2: z2,\n    z3: z3,\n    z11: z11,\n    z12: z12,\n    z13: z13,\n    z21: z21,\n    z22: z22,\n    z23: z23,\n    z31: z31,\n    z32: z32,\n    z33: z33,\n    zmol: zmol,\n    zmos: zmos\n  };\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure dsinit\n *\n *  this procedure provides deep space contributions to mean motion dot due\n *    to geopotential resonance with half day and one day orbits.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    cosim, sinim-\n *    emsq        - eccentricity squared\n *    argpo       - argument of perigee\n *    s1, s2, s3, s4, s5      -\n *    ss1, ss2, ss3, ss4, ss5 -\n *    sz1, sz3, sz11, sz13, sz21, sz23, sz31, sz33 -\n *    t           - time\n *    tc          -\n *    gsto        - greenwich sidereal time                   rad\n *    mo          - mean anomaly\n *    mdot        - mean anomaly dot (rate)\n *    no          - mean motion\n *    nodeo       - right ascension of ascending node\n *    nodedot     - right ascension of ascending node dot (rate)\n *    xpidot      -\n *    z1, z3, z11, z13, z21, z23, z31, z33 -\n *    eccm        - eccentricity\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    xn          - mean motion\n *    nodem       - right ascension of ascending node\n *\n *  outputs       :\n *    em          - eccentricity\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    nm          - mean motion\n *    nodem       - right ascension of ascending node\n *    irez        - flag for resonance           0-none, 1-one day, 2-half day\n *    atime       -\n *    d2201, d2211, d3210, d3222, d4410, d4422, d5220, d5232, d5421, d5433    -\n *    dedt        -\n *    didt        -\n *    dmdt        -\n *    dndt        -\n *    dnodt       -\n *    domdt       -\n *    del1, del2, del3        -\n *    ses  , sghl , sghs , sgs  , shl  , shs  , sis  , sls\n *    theta       -\n *    xfact       -\n *    xlamo       -\n *    xli         -\n *    xni\n *\n *  locals        :\n *    ainv2       -\n *    aonv        -\n *    cosisq      -\n *    eoc         -\n *    f220, f221, f311, f321, f322, f330, f441, f442, f522, f523, f542, f543  -\n *    g200, g201, g211, g300, g310, g322, g410, g422, g520, g521, g532, g533  -\n *    sini2       -\n *    temp        -\n *    temp1       -\n *    theta       -\n *    xno2        -\n *\n *  coupling      :\n *    getgravconst\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\n\nfunction dsinit(options) {\n  var cosim = options.cosim,\n      argpo = options.argpo,\n      s1 = options.s1,\n      s2 = options.s2,\n      s3 = options.s3,\n      s4 = options.s4,\n      s5 = options.s5,\n      sinim = options.sinim,\n      ss1 = options.ss1,\n      ss2 = options.ss2,\n      ss3 = options.ss3,\n      ss4 = options.ss4,\n      ss5 = options.ss5,\n      sz1 = options.sz1,\n      sz3 = options.sz3,\n      sz11 = options.sz11,\n      sz13 = options.sz13,\n      sz21 = options.sz21,\n      sz23 = options.sz23,\n      sz31 = options.sz31,\n      sz33 = options.sz33,\n      t = options.t,\n      tc = options.tc,\n      gsto = options.gsto,\n      mo = options.mo,\n      mdot = options.mdot,\n      no = options.no,\n      nodeo = options.nodeo,\n      nodedot = options.nodedot,\n      xpidot = options.xpidot,\n      z1 = options.z1,\n      z3 = options.z3,\n      z11 = options.z11,\n      z13 = options.z13,\n      z21 = options.z21,\n      z23 = options.z23,\n      z31 = options.z31,\n      z33 = options.z33,\n      ecco = options.ecco,\n      eccsq = options.eccsq;\n  var emsq = options.emsq,\n      em = options.em,\n      argpm = options.argpm,\n      inclm = options.inclm,\n      mm = options.mm,\n      nm = options.nm,\n      nodem = options.nodem,\n      irez = options.irez,\n      atime = options.atime,\n      d2201 = options.d2201,\n      d2211 = options.d2211,\n      d3210 = options.d3210,\n      d3222 = options.d3222,\n      d4410 = options.d4410,\n      d4422 = options.d4422,\n      d5220 = options.d5220,\n      d5232 = options.d5232,\n      d5421 = options.d5421,\n      d5433 = options.d5433,\n      dedt = options.dedt,\n      didt = options.didt,\n      dmdt = options.dmdt,\n      dnodt = options.dnodt,\n      domdt = options.domdt,\n      del1 = options.del1,\n      del2 = options.del2,\n      del3 = options.del3,\n      xfact = options.xfact,\n      xlamo = options.xlamo,\n      xli = options.xli,\n      xni = options.xni;\n  var f220;\n  var f221;\n  var f311;\n  var f321;\n  var f322;\n  var f330;\n  var f441;\n  var f442;\n  var f522;\n  var f523;\n  var f542;\n  var f543;\n  var g200;\n  var g201;\n  var g211;\n  var g300;\n  var g310;\n  var g322;\n  var g410;\n  var g422;\n  var g520;\n  var g521;\n  var g532;\n  var g533;\n  var sini2;\n  var temp;\n  var temp1;\n  var xno2;\n  var ainv2;\n  var aonv;\n  var cosisq;\n  var eoc;\n  var q22 = 1.7891679e-6;\n  var q31 = 2.1460748e-6;\n  var q33 = 2.2123015e-7;\n  var root22 = 1.7891679e-6;\n  var root44 = 7.3636953e-9;\n  var root54 = 2.1765803e-9;\n  var rptim = 4.37526908801129966e-3; // equates to 7.29211514668855e-5 rad/sec\n\n  var root32 = 3.7393792e-7;\n  var root52 = 1.1428639e-7;\n  var znl = 1.5835218e-4;\n  var zns = 1.19459e-5; // -------------------- deep space initialization ------------\n\n  irez = 0;\n\n  if (nm < 0.0052359877 && nm > 0.0034906585) {\n    irez = 1;\n  }\n\n  if (nm >= 8.26e-3 && nm <= 9.24e-3 && em >= 0.5) {\n    irez = 2;\n  } // ------------------------ do solar terms -------------------\n\n\n  var ses = ss1 * zns * ss5;\n  var sis = ss2 * zns * (sz11 + sz13);\n  var sls = -zns * ss3 * (sz1 + sz3 - 14.0 - 6.0 * emsq);\n  var sghs = ss4 * zns * (sz31 + sz33 - 6.0);\n  var shs = -zns * ss2 * (sz21 + sz23); // sgp4fix for 180 deg incl\n\n  if (inclm < 5.2359877e-2 || inclm > pi - 5.2359877e-2) {\n    shs = 0.0;\n  }\n\n  if (sinim !== 0.0) {\n    shs /= sinim;\n  }\n\n  var sgs = sghs - cosim * shs; // ------------------------- do lunar terms ------------------\n\n  dedt = ses + s1 * znl * s5;\n  didt = sis + s2 * znl * (z11 + z13);\n  dmdt = sls - znl * s3 * (z1 + z3 - 14.0 - 6.0 * emsq);\n  var sghl = s4 * znl * (z31 + z33 - 6.0);\n  var shll = -znl * s2 * (z21 + z23); // sgp4fix for 180 deg incl\n\n  if (inclm < 5.2359877e-2 || inclm > pi - 5.2359877e-2) {\n    shll = 0.0;\n  }\n\n  domdt = sgs + sghl;\n  dnodt = shs;\n\n  if (sinim !== 0.0) {\n    domdt -= cosim / sinim * shll;\n    dnodt += shll / sinim;\n  } // ----------- calculate deep space resonance effects --------\n\n\n  var dndt = 0.0;\n  var theta = (gsto + tc * rptim) % twoPi;\n  em += dedt * t;\n  inclm += didt * t;\n  argpm += domdt * t;\n  nodem += dnodt * t;\n  mm += dmdt * t; // sgp4fix for negative inclinations\n  // the following if statement should be commented out\n  // if (inclm < 0.0)\n  // {\n  //   inclm  = -inclm;\n  //   argpm  = argpm - pi;\n  //   nodem = nodem + pi;\n  // }\n  // -------------- initialize the resonance terms -------------\n\n  if (irez !== 0) {\n    aonv = Math.pow(nm / xke, x2o3); // ---------- geopotential resonance for 12 hour orbits ------\n\n    if (irez === 2) {\n      cosisq = cosim * cosim;\n      var emo = em;\n      em = ecco;\n      var emsqo = emsq;\n      emsq = eccsq;\n      eoc = em * emsq;\n      g201 = -0.306 - (em - 0.64) * 0.440;\n\n      if (em <= 0.65) {\n        g211 = 3.616 - 13.2470 * em + 16.2900 * emsq;\n        g310 = -19.302 + 117.3900 * em - 228.4190 * emsq + 156.5910 * eoc;\n        g322 = -18.9068 + 109.7927 * em - 214.6334 * emsq + 146.5816 * eoc;\n        g410 = -41.122 + 242.6940 * em - 471.0940 * emsq + 313.9530 * eoc;\n        g422 = -146.407 + 841.8800 * em - 1629.014 * emsq + 1083.4350 * eoc;\n        g520 = -532.114 + 3017.977 * em - 5740.032 * emsq + 3708.2760 * eoc;\n      } else {\n        g211 = -72.099 + 331.819 * em - 508.738 * emsq + 266.724 * eoc;\n        g310 = -346.844 + 1582.851 * em - 2415.925 * emsq + 1246.113 * eoc;\n        g322 = -342.585 + 1554.908 * em - 2366.899 * emsq + 1215.972 * eoc;\n        g410 = -1052.797 + 4758.686 * em - 7193.992 * emsq + 3651.957 * eoc;\n        g422 = -3581.690 + 16178.110 * em - 24462.770 * emsq + 12422.520 * eoc;\n\n        if (em > 0.715) {\n          g520 = -5149.66 + 29936.92 * em - 54087.36 * emsq + 31324.56 * eoc;\n        } else {\n          g520 = 1464.74 - 4664.75 * em + 3763.64 * emsq;\n        }\n      }\n\n      if (em < 0.7) {\n        g533 = -919.22770 + 4988.6100 * em - 9064.7700 * emsq + 5542.21 * eoc;\n        g521 = -822.71072 + 4568.6173 * em - 8491.4146 * emsq + 5337.524 * eoc;\n        g532 = -853.66600 + 4690.2500 * em - 8624.7700 * emsq + 5341.4 * eoc;\n      } else {\n        g533 = -37995.780 + 161616.52 * em - 229838.20 * emsq + 109377.94 * eoc;\n        g521 = -51752.104 + 218913.95 * em - 309468.16 * emsq + 146349.42 * eoc;\n        g532 = -40023.880 + 170470.89 * em - 242699.48 * emsq + 115605.82 * eoc;\n      }\n\n      sini2 = sinim * sinim;\n      f220 = 0.75 * (1.0 + 2.0 * cosim + cosisq);\n      f221 = 1.5 * sini2;\n      f321 = 1.875 * sinim * (1.0 - 2.0 * cosim - 3.0 * cosisq);\n      f322 = -1.875 * sinim * (1.0 + 2.0 * cosim - 3.0 * cosisq);\n      f441 = 35.0 * sini2 * f220;\n      f442 = 39.3750 * sini2 * sini2;\n      f522 = 9.84375 * sinim * (sini2 * (1.0 - 2.0 * cosim - 5.0 * cosisq) + 0.33333333 * (-2.0 + 4.0 * cosim + 6.0 * cosisq));\n      f523 = sinim * (4.92187512 * sini2 * (-2.0 - 4.0 * cosim + 10.0 * cosisq) + 6.56250012 * (1.0 + 2.0 * cosim - 3.0 * cosisq));\n      f542 = 29.53125 * sinim * (2.0 - 8.0 * cosim + cosisq * (-12.0 + 8.0 * cosim + 10.0 * cosisq));\n      f543 = 29.53125 * sinim * (-2.0 - 8.0 * cosim + cosisq * (12.0 + 8.0 * cosim - 10.0 * cosisq));\n      xno2 = nm * nm;\n      ainv2 = aonv * aonv;\n      temp1 = 3.0 * xno2 * ainv2;\n      temp = temp1 * root22;\n      d2201 = temp * f220 * g201;\n      d2211 = temp * f221 * g211;\n      temp1 *= aonv;\n      temp = temp1 * root32;\n      d3210 = temp * f321 * g310;\n      d3222 = temp * f322 * g322;\n      temp1 *= aonv;\n      temp = 2.0 * temp1 * root44;\n      d4410 = temp * f441 * g410;\n      d4422 = temp * f442 * g422;\n      temp1 *= aonv;\n      temp = temp1 * root52;\n      d5220 = temp * f522 * g520;\n      d5232 = temp * f523 * g532;\n      temp = 2.0 * temp1 * root54;\n      d5421 = temp * f542 * g521;\n      d5433 = temp * f543 * g533;\n      xlamo = (mo + nodeo + nodeo - (theta + theta)) % twoPi;\n      xfact = mdot + dmdt + 2.0 * (nodedot + dnodt - rptim) - no;\n      em = emo;\n      emsq = emsqo;\n    } //  ---------------- synchronous resonance terms --------------\n\n\n    if (irez === 1) {\n      g200 = 1.0 + emsq * (-2.5 + 0.8125 * emsq);\n      g310 = 1.0 + 2.0 * emsq;\n      g300 = 1.0 + emsq * (-6.0 + 6.60937 * emsq);\n      f220 = 0.75 * (1.0 + cosim) * (1.0 + cosim);\n      f311 = 0.9375 * sinim * sinim * (1.0 + 3.0 * cosim) - 0.75 * (1.0 + cosim);\n      f330 = 1.0 + cosim;\n      f330 *= 1.875 * f330 * f330;\n      del1 = 3.0 * nm * nm * aonv * aonv;\n      del2 = 2.0 * del1 * f220 * g200 * q22;\n      del3 = 3.0 * del1 * f330 * g300 * q33 * aonv;\n      del1 = del1 * f311 * g310 * q31 * aonv;\n      xlamo = (mo + nodeo + argpo - theta) % twoPi;\n      xfact = mdot + xpidot + dmdt + domdt + dnodt - (no + rptim);\n    } //  ------------ for sgp4, initialize the integrator ----------\n\n\n    xli = xlamo;\n    xni = no;\n    atime = 0.0;\n    nm = no + dndt;\n  }\n\n  return {\n    em: em,\n    argpm: argpm,\n    inclm: inclm,\n    mm: mm,\n    nm: nm,\n    nodem: nodem,\n    irez: irez,\n    atime: atime,\n    d2201: d2201,\n    d2211: d2211,\n    d3210: d3210,\n    d3222: d3222,\n    d4410: d4410,\n    d4422: d4422,\n    d5220: d5220,\n    d5232: d5232,\n    d5421: d5421,\n    d5433: d5433,\n    dedt: dedt,\n    didt: didt,\n    dmdt: dmdt,\n    dndt: dndt,\n    dnodt: dnodt,\n    domdt: domdt,\n    del1: del1,\n    del2: del2,\n    del3: del3,\n    xfact: xfact,\n    xlamo: xlamo,\n    xli: xli,\n    xni: xni\n  };\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           function gstime\n *\n *  this function finds the greenwich sidereal time.\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    jdut1       - julian date in ut1             days from 4713 bc\n *\n *  outputs       :\n *    gstime      - greenwich sidereal time        0 to 2pi rad\n *\n *  locals        :\n *    temp        - temporary variable for doubles   rad\n *    tut1        - julian centuries from the\n *                  jan 1, 2000 12 h epoch (ut1)\n *\n *  coupling      :\n *    none\n *\n *  references    :\n *    vallado       2004, 191, eq 3-45\n * --------------------------------------------------------------------------- */\n\nfunction gstimeInternal(jdut1) {\n  var tut1 = (jdut1 - 2451545.0) / 36525.0;\n  var temp = -6.2e-6 * tut1 * tut1 * tut1 + 0.093104 * tut1 * tut1 + (876600.0 * 3600 + 8640184.812866) * tut1 + 67310.54841; // # sec\n\n  temp = temp * deg2rad / 240.0 % twoPi; // 360/86400 = 1/240, to deg, to rad\n  //  ------------------------ check quadrants ---------------------\n\n  if (temp < 0.0) {\n    temp += twoPi;\n  }\n\n  return temp;\n}\n\nfunction gstime() {\n  if ((arguments.length <= 0 ? undefined : arguments[0]) instanceof Date || arguments.length > 1) {\n    return gstimeInternal(jday.apply(void 0, arguments));\n  }\n\n  return gstimeInternal.apply(void 0, arguments);\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure initl\n *\n *  this procedure initializes the sgp4 propagator. all the initialization is\n *    consolidated here instead of having multiple loops inside other routines.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    ecco        - eccentricity                           0.0 - 1.0\n *    epoch       - epoch time in days from jan 0, 1950. 0 hr\n *    inclo       - inclination of satellite\n *    no          - mean motion of satellite\n *    satn        - satellite number\n *\n *  outputs       :\n *    ainv        - 1.0 / a\n *    ao          - semi major axis\n *    con41       -\n *    con42       - 1.0 - 5.0 cos(i)\n *    cosio       - cosine of inclination\n *    cosio2      - cosio squared\n *    eccsq       - eccentricity squared\n *    method      - flag for deep space                    'd', 'n'\n *    omeosq      - 1.0 - ecco * ecco\n *    posq        - semi-parameter squared\n *    rp          - radius of perigee\n *    rteosq      - square root of (1.0 - ecco*ecco)\n *    sinio       - sine of inclination\n *    gsto        - gst at time of observation               rad\n *    no          - mean motion of satellite\n *\n *  locals        :\n *    ak          -\n *    d1          -\n *    del         -\n *    adel        -\n *    po          -\n *\n *  coupling      :\n *    getgravconst\n *    gstime      - find greenwich sidereal time from the julian date\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\n\nfunction initl(options) {\n  var ecco = options.ecco,\n      epoch = options.epoch,\n      inclo = options.inclo,\n      opsmode = options.opsmode;\n  var no = options.no; // sgp4fix use old way of finding gst\n  // ----------------------- earth constants ---------------------\n  // sgp4fix identify constants and allow alternate values\n  // ------------- calculate auxillary epoch quantities ----------\n\n  var eccsq = ecco * ecco;\n  var omeosq = 1.0 - eccsq;\n  var rteosq = Math.sqrt(omeosq);\n  var cosio = Math.cos(inclo);\n  var cosio2 = cosio * cosio; // ------------------ un-kozai the mean motion -----------------\n\n  var ak = Math.pow(xke / no, x2o3);\n  var d1 = 0.75 * j2 * (3.0 * cosio2 - 1.0) / (rteosq * omeosq);\n  var delPrime = d1 / (ak * ak);\n  var adel = ak * (1.0 - delPrime * delPrime - delPrime * (1.0 / 3.0 + 134.0 * delPrime * delPrime / 81.0));\n  delPrime = d1 / (adel * adel);\n  no /= 1.0 + delPrime;\n  var ao = Math.pow(xke / no, x2o3);\n  var sinio = Math.sin(inclo);\n  var po = ao * omeosq;\n  var con42 = 1.0 - 5.0 * cosio2;\n  var con41 = -con42 - cosio2 - cosio2;\n  var ainv = 1.0 / ao;\n  var posq = po * po;\n  var rp = ao * (1.0 - ecco);\n  var method = 'n'; //  sgp4fix modern approach to finding sidereal time\n\n  var gsto;\n\n  if (opsmode === 'a') {\n    //  sgp4fix use old way of finding gst\n    //  count integer number of days from 0 jan 1970\n    var ts70 = epoch - 7305.0;\n    var ds70 = Math.floor(ts70 + 1.0e-8);\n    var tfrac = ts70 - ds70; //  find greenwich location at epoch\n\n    var c1 = 1.72027916940703639e-2;\n    var thgr70 = 1.7321343856509374;\n    var fk5r = 5.07551419432269442e-15;\n    var c1p2p = c1 + twoPi;\n    gsto = (thgr70 + c1 * ds70 + c1p2p * tfrac + ts70 * ts70 * fk5r) % twoPi;\n\n    if (gsto < 0.0) {\n      gsto += twoPi;\n    }\n  } else {\n    gsto = gstime(epoch + 2433281.5);\n  }\n\n  return {\n    no: no,\n    method: method,\n    ainv: ainv,\n    ao: ao,\n    con41: con41,\n    con42: con42,\n    cosio: cosio,\n    cosio2: cosio2,\n    eccsq: eccsq,\n    omeosq: omeosq,\n    posq: posq,\n    rp: rp,\n    rteosq: rteosq,\n    sinio: sinio,\n    gsto: gsto\n  };\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure dspace\n *\n *  this procedure provides deep space contributions to mean elements for\n *    perturbing third body.  these effects have been averaged over one\n *    revolution of the sun and moon.  for earth resonance effects, the\n *    effects have been averaged over no revolutions of the satellite.\n *    (mean motion)\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    d2201, d2211, d3210, d3222, d4410, d4422, d5220, d5232, d5421, d5433 -\n *    dedt        -\n *    del1, del2, del3  -\n *    didt        -\n *    dmdt        -\n *    dnodt       -\n *    domdt       -\n *    irez        - flag for resonance           0-none, 1-one day, 2-half day\n *    argpo       - argument of perigee\n *    argpdot     - argument of perigee dot (rate)\n *    t           - time\n *    tc          -\n *    gsto        - gst\n *    xfact       -\n *    xlamo       -\n *    no          - mean motion\n *    atime       -\n *    em          - eccentricity\n *    ft          -\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    xli         -\n *    mm          - mean anomaly\n *    xni         - mean motion\n *    nodem       - right ascension of ascending node\n *\n *  outputs       :\n *    atime       -\n *    em          - eccentricity\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    xli         -\n *    mm          - mean anomaly\n *    xni         -\n *    nodem       - right ascension of ascending node\n *    dndt        -\n *    nm          - mean motion\n *\n *  locals        :\n *    delt        -\n *    ft          -\n *    theta       -\n *    x2li        -\n *    x2omi       -\n *    xl          -\n *    xldot       -\n *    xnddt       -\n *    xndt        -\n *    xomi        -\n *\n *  coupling      :\n *    none        -\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\n\nfunction dspace(options) {\n  var irez = options.irez,\n      d2201 = options.d2201,\n      d2211 = options.d2211,\n      d3210 = options.d3210,\n      d3222 = options.d3222,\n      d4410 = options.d4410,\n      d4422 = options.d4422,\n      d5220 = options.d5220,\n      d5232 = options.d5232,\n      d5421 = options.d5421,\n      d5433 = options.d5433,\n      dedt = options.dedt,\n      del1 = options.del1,\n      del2 = options.del2,\n      del3 = options.del3,\n      didt = options.didt,\n      dmdt = options.dmdt,\n      dnodt = options.dnodt,\n      domdt = options.domdt,\n      argpo = options.argpo,\n      argpdot = options.argpdot,\n      t = options.t,\n      tc = options.tc,\n      gsto = options.gsto,\n      xfact = options.xfact,\n      xlamo = options.xlamo,\n      no = options.no;\n  var atime = options.atime,\n      em = options.em,\n      argpm = options.argpm,\n      inclm = options.inclm,\n      xli = options.xli,\n      mm = options.mm,\n      xni = options.xni,\n      nodem = options.nodem,\n      nm = options.nm;\n  var fasx2 = 0.13130908;\n  var fasx4 = 2.8843198;\n  var fasx6 = 0.37448087;\n  var g22 = 5.7686396;\n  var g32 = 0.95240898;\n  var g44 = 1.8014998;\n  var g52 = 1.0508330;\n  var g54 = 4.4108898;\n  var rptim = 4.37526908801129966e-3; // equates to 7.29211514668855e-5 rad/sec\n\n  var stepp = 720.0;\n  var stepn = -720.0;\n  var step2 = 259200.0;\n  var delt;\n  var x2li;\n  var x2omi;\n  var xl;\n  var xldot;\n  var xnddt;\n  var xndt;\n  var xomi;\n  var dndt = 0.0;\n  var ft = 0.0; //  ----------- calculate deep space resonance effects -----------\n\n  var theta = (gsto + tc * rptim) % twoPi;\n  em += dedt * t;\n  inclm += didt * t;\n  argpm += domdt * t;\n  nodem += dnodt * t;\n  mm += dmdt * t; // sgp4fix for negative inclinations\n  // the following if statement should be commented out\n  // if (inclm < 0.0)\n  // {\n  //   inclm = -inclm;\n  //   argpm = argpm - pi;\n  //   nodem = nodem + pi;\n  // }\n\n  /* - update resonances : numerical (euler-maclaurin) integration - */\n\n  /* ------------------------- epoch restart ----------------------  */\n  //   sgp4fix for propagator problems\n  //   the following integration works for negative time steps and periods\n  //   the specific changes are unknown because the original code was so convoluted\n  // sgp4fix take out atime = 0.0 and fix for faster operation\n\n  if (irez !== 0) {\n    //  sgp4fix streamline check\n    if (atime === 0.0 || t * atime <= 0.0 || Math.abs(t) < Math.abs(atime)) {\n      atime = 0.0;\n      xni = no;\n      xli = xlamo;\n    } // sgp4fix move check outside loop\n\n\n    if (t > 0.0) {\n      delt = stepp;\n    } else {\n      delt = stepn;\n    }\n\n    var iretn = 381; // added for do loop\n\n    while (iretn === 381) {\n      //  ------------------- dot terms calculated -------------\n      //  ----------- near - synchronous resonance terms -------\n      if (irez !== 2) {\n        xndt = del1 * Math.sin(xli - fasx2) + del2 * Math.sin(2.0 * (xli - fasx4)) + del3 * Math.sin(3.0 * (xli - fasx6));\n        xldot = xni + xfact;\n        xnddt = del1 * Math.cos(xli - fasx2) + 2.0 * del2 * Math.cos(2.0 * (xli - fasx4)) + 3.0 * del3 * Math.cos(3.0 * (xli - fasx6));\n        xnddt *= xldot;\n      } else {\n        // --------- near - half-day resonance terms --------\n        xomi = argpo + argpdot * atime;\n        x2omi = xomi + xomi;\n        x2li = xli + xli;\n        xndt = d2201 * Math.sin(x2omi + xli - g22) + d2211 * Math.sin(xli - g22) + d3210 * Math.sin(xomi + xli - g32) + d3222 * Math.sin(-xomi + xli - g32) + d4410 * Math.sin(x2omi + x2li - g44) + d4422 * Math.sin(x2li - g44) + d5220 * Math.sin(xomi + xli - g52) + d5232 * Math.sin(-xomi + xli - g52) + d5421 * Math.sin(xomi + x2li - g54) + d5433 * Math.sin(-xomi + x2li - g54);\n        xldot = xni + xfact;\n        xnddt = d2201 * Math.cos(x2omi + xli - g22) + d2211 * Math.cos(xli - g22) + d3210 * Math.cos(xomi + xli - g32) + d3222 * Math.cos(-xomi + xli - g32) + d5220 * Math.cos(xomi + xli - g52) + d5232 * Math.cos(-xomi + xli - g52) + 2.0 * d4410 * Math.cos(x2omi + x2li - g44) + d4422 * Math.cos(x2li - g44) + d5421 * Math.cos(xomi + x2li - g54) + d5433 * Math.cos(-xomi + x2li - g54);\n        xnddt *= xldot;\n      } //  ----------------------- integrator -------------------\n      //  sgp4fix move end checks to end of routine\n\n\n      if (Math.abs(t - atime) >= stepp) {\n        iretn = 381;\n      } else {\n        ft = t - atime;\n        iretn = 0;\n      }\n\n      if (iretn === 381) {\n        xli += xldot * delt + xndt * step2;\n        xni += xndt * delt + xnddt * step2;\n        atime += delt;\n      }\n    }\n\n    nm = xni + xndt * ft + xnddt * ft * ft * 0.5;\n    xl = xli + xldot * ft + xndt * ft * ft * 0.5;\n\n    if (irez !== 1) {\n      mm = xl - 2.0 * nodem + 2.0 * theta;\n      dndt = nm - no;\n    } else {\n      mm = xl - nodem - argpm + theta;\n      dndt = nm - no;\n    }\n\n    nm = no + dndt;\n  }\n\n  return {\n    atime: atime,\n    em: em,\n    argpm: argpm,\n    inclm: inclm,\n    xli: xli,\n    mm: mm,\n    xni: xni,\n    nodem: nodem,\n    dndt: dndt,\n    nm: nm\n  };\n}\n\n/*----------------------------------------------------------------------------\n *\n *                             procedure sgp4\n *\n *  this procedure is the sgp4 prediction model from space command. this is an\n *    updated and combined version of sgp4 and sdp4, which were originally\n *    published separately in spacetrack report //3. this version follows the\n *    methodology from the aiaa paper (2006) describing the history and\n *    development of the code.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    satrec  - initialised structure from sgp4init() call.\n *    tsince  - time since epoch (minutes)\n *\n *  outputs       :\n *    r           - position vector                     km\n *    v           - velocity                            km/sec\n *  return code - non-zero on error.\n *                   1 - mean elements, ecc >= 1.0 or ecc < -0.001 or a < 0.95 er\n *                   2 - mean motion less than 0.0\n *                   3 - pert elements, ecc < 0.0  or  ecc > 1.0\n *                   4 - semi-latus rectum < 0.0\n *                   5 - epoch elements are sub-orbital\n *                   6 - satellite has decayed\n *\n *  locals        :\n *    am          -\n *    axnl, aynl        -\n *    betal       -\n *    cosim   , sinim   , cosomm  , sinomm  , cnod    , snod    , cos2u   ,\n *    sin2u   , coseo1  , sineo1  , cosi    , sini    , cosip   , sinip   ,\n *    cosisq  , cossu   , sinsu   , cosu    , sinu\n *    delm        -\n *    delomg      -\n *    dndt        -\n *    eccm        -\n *    emsq        -\n *    ecose       -\n *    el2         -\n *    eo1         -\n *    eccp        -\n *    esine       -\n *    argpm       -\n *    argpp       -\n *    omgadf      -\n *    pl          -\n *    r           -\n *    rtemsq      -\n *    rdotl       -\n *    rl          -\n *    rvdot       -\n *    rvdotl      -\n *    su          -\n *    t2  , t3   , t4    , tc\n *    tem5, temp , temp1 , temp2  , tempa  , tempe  , templ\n *    u   , ux   , uy    , uz     , vx     , vy     , vz\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    nm          - mean motion\n *    nodem       - right asc of ascending node\n *    xinc        -\n *    xincp       -\n *    xl          -\n *    xlm         -\n *    mp          -\n *    xmdf        -\n *    xmx         -\n *    xmy         -\n *    nodedf      -\n *    xnode       -\n *    nodep       -\n *    np          -\n *\n *  coupling      :\n *    getgravconst-\n *    dpper\n *    dspace\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report //3 1980\n *    hoots, norad spacetrack report //6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\n\nfunction sgp4(satrec, tsince) {\n  /* eslint-disable no-param-reassign */\n  var coseo1;\n  var sineo1;\n  var cosip;\n  var sinip;\n  var cosisq;\n  var delm;\n  var delomg;\n  var eo1;\n  var argpm;\n  var argpp;\n  var su;\n  var t3;\n  var t4;\n  var tc;\n  var tem5;\n  var temp;\n  var tempa;\n  var tempe;\n  var templ;\n  var inclm;\n  var mm;\n  var nm;\n  var nodem;\n  var xincp;\n  var xlm;\n  var mp;\n  var nodep;\n  /* ------------------ set mathematical constants --------------- */\n  // sgp4fix divisor for divide by zero check on inclination\n  // the old check used 1.0 + cos(pi-1.0e-9), but then compared it to\n  // 1.5 e-12, so the threshold was changed to 1.5e-12 for consistency\n\n  var temp4 = 1.5e-12; // --------------------- clear sgp4 error flag -----------------\n\n  satrec.t = tsince;\n  satrec.error = 0; //  ------- update for secular gravity and atmospheric drag -----\n\n  var xmdf = satrec.mo + satrec.mdot * satrec.t;\n  var argpdf = satrec.argpo + satrec.argpdot * satrec.t;\n  var nodedf = satrec.nodeo + satrec.nodedot * satrec.t;\n  argpm = argpdf;\n  mm = xmdf;\n  var t2 = satrec.t * satrec.t;\n  nodem = nodedf + satrec.nodecf * t2;\n  tempa = 1.0 - satrec.cc1 * satrec.t;\n  tempe = satrec.bstar * satrec.cc4 * satrec.t;\n  templ = satrec.t2cof * t2;\n\n  if (satrec.isimp !== 1) {\n    delomg = satrec.omgcof * satrec.t; //  sgp4fix use mutliply for speed instead of pow\n\n    var delmtemp = 1.0 + satrec.eta * Math.cos(xmdf);\n    delm = satrec.xmcof * (delmtemp * delmtemp * delmtemp - satrec.delmo);\n    temp = delomg + delm;\n    mm = xmdf + temp;\n    argpm = argpdf - temp;\n    t3 = t2 * satrec.t;\n    t4 = t3 * satrec.t;\n    tempa = tempa - satrec.d2 * t2 - satrec.d3 * t3 - satrec.d4 * t4;\n    tempe += satrec.bstar * satrec.cc5 * (Math.sin(mm) - satrec.sinmao);\n    templ = templ + satrec.t3cof * t3 + t4 * (satrec.t4cof + satrec.t * satrec.t5cof);\n  }\n\n  nm = satrec.no;\n  var em = satrec.ecco;\n  inclm = satrec.inclo;\n\n  if (satrec.method === 'd') {\n    tc = satrec.t;\n    var dspaceOptions = {\n      irez: satrec.irez,\n      d2201: satrec.d2201,\n      d2211: satrec.d2211,\n      d3210: satrec.d3210,\n      d3222: satrec.d3222,\n      d4410: satrec.d4410,\n      d4422: satrec.d4422,\n      d5220: satrec.d5220,\n      d5232: satrec.d5232,\n      d5421: satrec.d5421,\n      d5433: satrec.d5433,\n      dedt: satrec.dedt,\n      del1: satrec.del1,\n      del2: satrec.del2,\n      del3: satrec.del3,\n      didt: satrec.didt,\n      dmdt: satrec.dmdt,\n      dnodt: satrec.dnodt,\n      domdt: satrec.domdt,\n      argpo: satrec.argpo,\n      argpdot: satrec.argpdot,\n      t: satrec.t,\n      tc: tc,\n      gsto: satrec.gsto,\n      xfact: satrec.xfact,\n      xlamo: satrec.xlamo,\n      no: satrec.no,\n      atime: satrec.atime,\n      em: em,\n      argpm: argpm,\n      inclm: inclm,\n      xli: satrec.xli,\n      mm: mm,\n      xni: satrec.xni,\n      nodem: nodem,\n      nm: nm\n    };\n    var dspaceResult = dspace(dspaceOptions);\n    em = dspaceResult.em;\n    argpm = dspaceResult.argpm;\n    inclm = dspaceResult.inclm;\n    mm = dspaceResult.mm;\n    nodem = dspaceResult.nodem;\n    nm = dspaceResult.nm;\n  }\n\n  if (nm <= 0.0) {\n    // printf(\"// error nm %f\\n\", nm);\n    satrec.error = 2; // sgp4fix add return\n\n    return [false, false];\n  }\n\n  var am = Math.pow(xke / nm, x2o3) * tempa * tempa;\n  nm = xke / Math.pow(am, 1.5);\n  em -= tempe; // fix tolerance for error recognition\n  // sgp4fix am is fixed from the previous nm check\n\n  if (em >= 1.0 || em < -0.001) {\n    // || (am < 0.95)\n    // printf(\"// error em %f\\n\", em);\n    satrec.error = 1; // sgp4fix to return if there is an error in eccentricity\n\n    return [false, false];\n  } //  sgp4fix fix tolerance to avoid a divide by zero\n\n\n  if (em < 1.0e-6) {\n    em = 1.0e-6;\n  }\n\n  mm += satrec.no * templ;\n  xlm = mm + argpm + nodem;\n  nodem %= twoPi;\n  argpm %= twoPi;\n  xlm %= twoPi;\n  mm = (xlm - argpm - nodem) % twoPi; // ----------------- compute extra mean quantities -------------\n\n  var sinim = Math.sin(inclm);\n  var cosim = Math.cos(inclm); // -------------------- add lunar-solar periodics --------------\n\n  var ep = em;\n  xincp = inclm;\n  argpp = argpm;\n  nodep = nodem;\n  mp = mm;\n  sinip = sinim;\n  cosip = cosim;\n\n  if (satrec.method === 'd') {\n    var dpperParameters = {\n      inclo: satrec.inclo,\n      init: 'n',\n      ep: ep,\n      inclp: xincp,\n      nodep: nodep,\n      argpp: argpp,\n      mp: mp,\n      opsmode: satrec.operationmode\n    };\n    var dpperResult = dpper(satrec, dpperParameters);\n    ep = dpperResult.ep;\n    nodep = dpperResult.nodep;\n    argpp = dpperResult.argpp;\n    mp = dpperResult.mp;\n    xincp = dpperResult.inclp;\n\n    if (xincp < 0.0) {\n      xincp = -xincp;\n      nodep += pi;\n      argpp -= pi;\n    }\n\n    if (ep < 0.0 || ep > 1.0) {\n      //  printf(\"// error ep %f\\n\", ep);\n      satrec.error = 3; //  sgp4fix add return\n\n      return [false, false];\n    }\n  } //  -------------------- long period periodics ------------------\n\n\n  if (satrec.method === 'd') {\n    sinip = Math.sin(xincp);\n    cosip = Math.cos(xincp);\n    satrec.aycof = -0.5 * j3oj2 * sinip; //  sgp4fix for divide by zero for xincp = 180 deg\n\n    if (Math.abs(cosip + 1.0) > 1.5e-12) {\n      satrec.xlcof = -0.25 * j3oj2 * sinip * (3.0 + 5.0 * cosip) / (1.0 + cosip);\n    } else {\n      satrec.xlcof = -0.25 * j3oj2 * sinip * (3.0 + 5.0 * cosip) / temp4;\n    }\n  }\n\n  var axnl = ep * Math.cos(argpp);\n  temp = 1.0 / (am * (1.0 - ep * ep));\n  var aynl = ep * Math.sin(argpp) + temp * satrec.aycof;\n  var xl = mp + argpp + nodep + temp * satrec.xlcof * axnl; // --------------------- solve kepler's equation ---------------\n\n  var u = (xl - nodep) % twoPi;\n  eo1 = u;\n  tem5 = 9999.9;\n  var ktr = 1; //    sgp4fix for kepler iteration\n  //    the following iteration needs better limits on corrections\n\n  while (Math.abs(tem5) >= 1.0e-12 && ktr <= 10) {\n    sineo1 = Math.sin(eo1);\n    coseo1 = Math.cos(eo1);\n    tem5 = 1.0 - coseo1 * axnl - sineo1 * aynl;\n    tem5 = (u - aynl * coseo1 + axnl * sineo1 - eo1) / tem5;\n\n    if (Math.abs(tem5) >= 0.95) {\n      if (tem5 > 0.0) {\n        tem5 = 0.95;\n      } else {\n        tem5 = -0.95;\n      }\n    }\n\n    eo1 += tem5;\n    ktr += 1;\n  } //  ------------- short period preliminary quantities -----------\n\n\n  var ecose = axnl * coseo1 + aynl * sineo1;\n  var esine = axnl * sineo1 - aynl * coseo1;\n  var el2 = axnl * axnl + aynl * aynl;\n  var pl = am * (1.0 - el2);\n\n  if (pl < 0.0) {\n    //  printf(\"// error pl %f\\n\", pl);\n    satrec.error = 4; //  sgp4fix add return\n\n    return [false, false];\n  }\n\n  var rl = am * (1.0 - ecose);\n  var rdotl = Math.sqrt(am) * esine / rl;\n  var rvdotl = Math.sqrt(pl) / rl;\n  var betal = Math.sqrt(1.0 - el2);\n  temp = esine / (1.0 + betal);\n  var sinu = am / rl * (sineo1 - aynl - axnl * temp);\n  var cosu = am / rl * (coseo1 - axnl + aynl * temp);\n  su = Math.atan2(sinu, cosu);\n  var sin2u = (cosu + cosu) * sinu;\n  var cos2u = 1.0 - 2.0 * sinu * sinu;\n  temp = 1.0 / pl;\n  var temp1 = 0.5 * j2 * temp;\n  var temp2 = temp1 * temp; // -------------- update for short period periodics ------------\n\n  if (satrec.method === 'd') {\n    cosisq = cosip * cosip;\n    satrec.con41 = 3.0 * cosisq - 1.0;\n    satrec.x1mth2 = 1.0 - cosisq;\n    satrec.x7thm1 = 7.0 * cosisq - 1.0;\n  }\n\n  var mrt = rl * (1.0 - 1.5 * temp2 * betal * satrec.con41) + 0.5 * temp1 * satrec.x1mth2 * cos2u; // sgp4fix for decaying satellites\n\n  if (mrt < 1.0) {\n    // printf(\"// decay condition %11.6f \\n\",mrt);\n    satrec.error = 6;\n    return {\n      position: false,\n      velocity: false\n    };\n  }\n\n  su -= 0.25 * temp2 * satrec.x7thm1 * sin2u;\n  var xnode = nodep + 1.5 * temp2 * cosip * sin2u;\n  var xinc = xincp + 1.5 * temp2 * cosip * sinip * cos2u;\n  var mvt = rdotl - nm * temp1 * satrec.x1mth2 * sin2u / xke;\n  var rvdot = rvdotl + nm * temp1 * (satrec.x1mth2 * cos2u + 1.5 * satrec.con41) / xke; // --------------------- orientation vectors -------------------\n\n  var sinsu = Math.sin(su);\n  var cossu = Math.cos(su);\n  var snod = Math.sin(xnode);\n  var cnod = Math.cos(xnode);\n  var sini = Math.sin(xinc);\n  var cosi = Math.cos(xinc);\n  var xmx = -snod * cosi;\n  var xmy = cnod * cosi;\n  var ux = xmx * sinsu + cnod * cossu;\n  var uy = xmy * sinsu + snod * cossu;\n  var uz = sini * sinsu;\n  var vx = xmx * cossu - cnod * sinsu;\n  var vy = xmy * cossu - snod * sinsu;\n  var vz = sini * cossu; // --------- position and velocity (in km and km/sec) ----------\n\n  var r = {\n    x: mrt * ux * earthRadius,\n    y: mrt * uy * earthRadius,\n    z: mrt * uz * earthRadius\n  };\n  var v = {\n    x: (mvt * ux + rvdot * vx) * vkmpersec,\n    y: (mvt * uy + rvdot * vy) * vkmpersec,\n    z: (mvt * uz + rvdot * vz) * vkmpersec\n  };\n  return {\n    position: r,\n    velocity: v\n  };\n  /* eslint-enable no-param-reassign */\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                             procedure sgp4init\n *\n *  this procedure initializes variables for sgp4.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    opsmode     - mode of operation afspc or improved 'a', 'i'\n *    satn        - satellite number\n *    bstar       - sgp4 type drag coefficient              kg/m2er\n *    ecco        - eccentricity\n *    epoch       - epoch time in days from jan 0, 1950. 0 hr\n *    argpo       - argument of perigee (output if ds)\n *    inclo       - inclination\n *    mo          - mean anomaly (output if ds)\n *    no          - mean motion\n *    nodeo       - right ascension of ascending node\n *\n *  outputs       :\n *    rec      - common values for subsequent calls\n *    return code - non-zero on error.\n *                   1 - mean elements, ecc >= 1.0 or ecc < -0.001 or a < 0.95 er\n *                   2 - mean motion less than 0.0\n *                   3 - pert elements, ecc < 0.0  or  ecc > 1.0\n *                   4 - semi-latus rectum < 0.0\n *                   5 - epoch elements are sub-orbital\n *                   6 - satellite has decayed\n *\n *  locals        :\n *    cnodm  , snodm  , cosim  , sinim  , cosomm , sinomm\n *    cc1sq  , cc2    , cc3\n *    coef   , coef1\n *    cosio4      -\n *    day         -\n *    dndt        -\n *    em          - eccentricity\n *    emsq        - eccentricity squared\n *    eeta        -\n *    etasq       -\n *    gam         -\n *    argpm       - argument of perigee\n *    nodem       -\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    nm          - mean motion\n *    perige      - perigee\n *    pinvsq      -\n *    psisq       -\n *    qzms24      -\n *    rtemsq      -\n *    s1, s2, s3, s4, s5, s6, s7          -\n *    sfour       -\n *    ss1, ss2, ss3, ss4, ss5, ss6, ss7         -\n *    sz1, sz2, sz3\n *    sz11, sz12, sz13, sz21, sz22, sz23, sz31, sz32, sz33        -\n *    tc          -\n *    temp        -\n *    temp1, temp2, temp3       -\n *    tsi         -\n *    xpidot      -\n *    xhdot1      -\n *    z1, z2, z3          -\n *    z11, z12, z13, z21, z22, z23, z31, z32, z33         -\n *\n *  coupling      :\n *    getgravconst-\n *    initl       -\n *    dscom       -\n *    dpper       -\n *    dsinit      -\n *    sgp4        -\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\n\nfunction sgp4init(satrec, options) {\n  /* eslint-disable no-param-reassign */\n  var opsmode = options.opsmode,\n      satn = options.satn,\n      epoch = options.epoch,\n      xbstar = options.xbstar,\n      xecco = options.xecco,\n      xargpo = options.xargpo,\n      xinclo = options.xinclo,\n      xmo = options.xmo,\n      xno = options.xno,\n      xnodeo = options.xnodeo;\n  var cosim;\n  var sinim;\n  var cc1sq;\n  var cc2;\n  var cc3;\n  var coef;\n  var coef1;\n  var cosio4;\n  var em;\n  var emsq;\n  var eeta;\n  var etasq;\n  var argpm;\n  var nodem;\n  var inclm;\n  var mm;\n  var nm;\n  var perige;\n  var pinvsq;\n  var psisq;\n  var qzms24;\n  var s1;\n  var s2;\n  var s3;\n  var s4;\n  var s5;\n  var sfour;\n  var ss1;\n  var ss2;\n  var ss3;\n  var ss4;\n  var ss5;\n  var sz1;\n  var sz3;\n  var sz11;\n  var sz13;\n  var sz21;\n  var sz23;\n  var sz31;\n  var sz33;\n  var tc;\n  var temp;\n  var temp1;\n  var temp2;\n  var temp3;\n  var tsi;\n  var xpidot;\n  var xhdot1;\n  var z1;\n  var z3;\n  var z11;\n  var z13;\n  var z21;\n  var z23;\n  var z31;\n  var z33;\n  /* ------------------------ initialization --------------------- */\n  // sgp4fix divisor for divide by zero check on inclination\n  // the old check used 1.0 + Math.cos(pi-1.0e-9), but then compared it to\n  // 1.5 e-12, so the threshold was changed to 1.5e-12 for consistency\n\n  var temp4 = 1.5e-12; // ----------- set all near earth variables to zero ------------\n\n  satrec.isimp = 0;\n  satrec.method = 'n';\n  satrec.aycof = 0.0;\n  satrec.con41 = 0.0;\n  satrec.cc1 = 0.0;\n  satrec.cc4 = 0.0;\n  satrec.cc5 = 0.0;\n  satrec.d2 = 0.0;\n  satrec.d3 = 0.0;\n  satrec.d4 = 0.0;\n  satrec.delmo = 0.0;\n  satrec.eta = 0.0;\n  satrec.argpdot = 0.0;\n  satrec.omgcof = 0.0;\n  satrec.sinmao = 0.0;\n  satrec.t = 0.0;\n  satrec.t2cof = 0.0;\n  satrec.t3cof = 0.0;\n  satrec.t4cof = 0.0;\n  satrec.t5cof = 0.0;\n  satrec.x1mth2 = 0.0;\n  satrec.x7thm1 = 0.0;\n  satrec.mdot = 0.0;\n  satrec.nodedot = 0.0;\n  satrec.xlcof = 0.0;\n  satrec.xmcof = 0.0;\n  satrec.nodecf = 0.0; // ----------- set all deep space variables to zero ------------\n\n  satrec.irez = 0;\n  satrec.d2201 = 0.0;\n  satrec.d2211 = 0.0;\n  satrec.d3210 = 0.0;\n  satrec.d3222 = 0.0;\n  satrec.d4410 = 0.0;\n  satrec.d4422 = 0.0;\n  satrec.d5220 = 0.0;\n  satrec.d5232 = 0.0;\n  satrec.d5421 = 0.0;\n  satrec.d5433 = 0.0;\n  satrec.dedt = 0.0;\n  satrec.del1 = 0.0;\n  satrec.del2 = 0.0;\n  satrec.del3 = 0.0;\n  satrec.didt = 0.0;\n  satrec.dmdt = 0.0;\n  satrec.dnodt = 0.0;\n  satrec.domdt = 0.0;\n  satrec.e3 = 0.0;\n  satrec.ee2 = 0.0;\n  satrec.peo = 0.0;\n  satrec.pgho = 0.0;\n  satrec.pho = 0.0;\n  satrec.pinco = 0.0;\n  satrec.plo = 0.0;\n  satrec.se2 = 0.0;\n  satrec.se3 = 0.0;\n  satrec.sgh2 = 0.0;\n  satrec.sgh3 = 0.0;\n  satrec.sgh4 = 0.0;\n  satrec.sh2 = 0.0;\n  satrec.sh3 = 0.0;\n  satrec.si2 = 0.0;\n  satrec.si3 = 0.0;\n  satrec.sl2 = 0.0;\n  satrec.sl3 = 0.0;\n  satrec.sl4 = 0.0;\n  satrec.gsto = 0.0;\n  satrec.xfact = 0.0;\n  satrec.xgh2 = 0.0;\n  satrec.xgh3 = 0.0;\n  satrec.xgh4 = 0.0;\n  satrec.xh2 = 0.0;\n  satrec.xh3 = 0.0;\n  satrec.xi2 = 0.0;\n  satrec.xi3 = 0.0;\n  satrec.xl2 = 0.0;\n  satrec.xl3 = 0.0;\n  satrec.xl4 = 0.0;\n  satrec.xlamo = 0.0;\n  satrec.zmol = 0.0;\n  satrec.zmos = 0.0;\n  satrec.atime = 0.0;\n  satrec.xli = 0.0;\n  satrec.xni = 0.0; // sgp4fix - note the following variables are also passed directly via satrec.\n  // it is possible to streamline the sgp4init call by deleting the \"x\"\n  // variables, but the user would need to set the satrec.* values first. we\n  // include the additional assignments in case twoline2rv is not used.\n\n  satrec.bstar = xbstar;\n  satrec.ecco = xecco;\n  satrec.argpo = xargpo;\n  satrec.inclo = xinclo;\n  satrec.mo = xmo;\n  satrec.no = xno;\n  satrec.nodeo = xnodeo; //  sgp4fix add opsmode\n\n  satrec.operationmode = opsmode; // ------------------------ earth constants -----------------------\n  // sgp4fix identify constants and allow alternate values\n\n  var ss = 78.0 / earthRadius + 1.0; // sgp4fix use multiply for speed instead of pow\n\n  var qzms2ttemp = (120.0 - 78.0) / earthRadius;\n  var qzms2t = qzms2ttemp * qzms2ttemp * qzms2ttemp * qzms2ttemp;\n  satrec.init = 'y';\n  satrec.t = 0.0;\n  var initlOptions = {\n    satn: satn,\n    ecco: satrec.ecco,\n    epoch: epoch,\n    inclo: satrec.inclo,\n    no: satrec.no,\n    method: satrec.method,\n    opsmode: satrec.operationmode\n  };\n  var initlResult = initl(initlOptions);\n  var ao = initlResult.ao,\n      con42 = initlResult.con42,\n      cosio = initlResult.cosio,\n      cosio2 = initlResult.cosio2,\n      eccsq = initlResult.eccsq,\n      omeosq = initlResult.omeosq,\n      posq = initlResult.posq,\n      rp = initlResult.rp,\n      rteosq = initlResult.rteosq,\n      sinio = initlResult.sinio;\n  satrec.no = initlResult.no;\n  satrec.con41 = initlResult.con41;\n  satrec.gsto = initlResult.gsto;\n  satrec.error = 0; // sgp4fix remove this check as it is unnecessary\n  // the mrt check in sgp4 handles decaying satellite cases even if the starting\n  // condition is below the surface of te earth\n  // if (rp < 1.0)\n  // {\n  //   printf(\"// *** satn%d epoch elts sub-orbital ***\\n\", satn);\n  //   satrec.error = 5;\n  // }\n\n  if (omeosq >= 0.0 || satrec.no >= 0.0) {\n    satrec.isimp = 0;\n\n    if (rp < 220.0 / earthRadius + 1.0) {\n      satrec.isimp = 1;\n    }\n\n    sfour = ss;\n    qzms24 = qzms2t;\n    perige = (rp - 1.0) * earthRadius; // - for perigees below 156 km, s and qoms2t are altered -\n\n    if (perige < 156.0) {\n      sfour = perige - 78.0;\n\n      if (perige < 98.0) {\n        sfour = 20.0;\n      } // sgp4fix use multiply for speed instead of pow\n\n\n      var qzms24temp = (120.0 - sfour) / earthRadius;\n      qzms24 = qzms24temp * qzms24temp * qzms24temp * qzms24temp;\n      sfour = sfour / earthRadius + 1.0;\n    }\n\n    pinvsq = 1.0 / posq;\n    tsi = 1.0 / (ao - sfour);\n    satrec.eta = ao * satrec.ecco * tsi;\n    etasq = satrec.eta * satrec.eta;\n    eeta = satrec.ecco * satrec.eta;\n    psisq = Math.abs(1.0 - etasq);\n    coef = qzms24 * Math.pow(tsi, 4.0);\n    coef1 = coef / Math.pow(psisq, 3.5);\n    cc2 = coef1 * satrec.no * (ao * (1.0 + 1.5 * etasq + eeta * (4.0 + etasq)) + 0.375 * j2 * tsi / psisq * satrec.con41 * (8.0 + 3.0 * etasq * (8.0 + etasq)));\n    satrec.cc1 = satrec.bstar * cc2;\n    cc3 = 0.0;\n\n    if (satrec.ecco > 1.0e-4) {\n      cc3 = -2.0 * coef * tsi * j3oj2 * satrec.no * sinio / satrec.ecco;\n    }\n\n    satrec.x1mth2 = 1.0 - cosio2;\n    satrec.cc4 = 2.0 * satrec.no * coef1 * ao * omeosq * (satrec.eta * (2.0 + 0.5 * etasq) + satrec.ecco * (0.5 + 2.0 * etasq) - j2 * tsi / (ao * psisq) * (-3.0 * satrec.con41 * (1.0 - 2.0 * eeta + etasq * (1.5 - 0.5 * eeta)) + 0.75 * satrec.x1mth2 * (2.0 * etasq - eeta * (1.0 + etasq)) * Math.cos(2.0 * satrec.argpo)));\n    satrec.cc5 = 2.0 * coef1 * ao * omeosq * (1.0 + 2.75 * (etasq + eeta) + eeta * etasq);\n    cosio4 = cosio2 * cosio2;\n    temp1 = 1.5 * j2 * pinvsq * satrec.no;\n    temp2 = 0.5 * temp1 * j2 * pinvsq;\n    temp3 = -0.46875 * j4 * pinvsq * pinvsq * satrec.no;\n    satrec.mdot = satrec.no + 0.5 * temp1 * rteosq * satrec.con41 + 0.0625 * temp2 * rteosq * (13.0 - 78.0 * cosio2 + 137.0 * cosio4);\n    satrec.argpdot = -0.5 * temp1 * con42 + 0.0625 * temp2 * (7.0 - 114.0 * cosio2 + 395.0 * cosio4) + temp3 * (3.0 - 36.0 * cosio2 + 49.0 * cosio4);\n    xhdot1 = -temp1 * cosio;\n    satrec.nodedot = xhdot1 + (0.5 * temp2 * (4.0 - 19.0 * cosio2) + 2.0 * temp3 * (3.0 - 7.0 * cosio2)) * cosio;\n    xpidot = satrec.argpdot + satrec.nodedot;\n    satrec.omgcof = satrec.bstar * cc3 * Math.cos(satrec.argpo);\n    satrec.xmcof = 0.0;\n\n    if (satrec.ecco > 1.0e-4) {\n      satrec.xmcof = -x2o3 * coef * satrec.bstar / eeta;\n    }\n\n    satrec.nodecf = 3.5 * omeosq * xhdot1 * satrec.cc1;\n    satrec.t2cof = 1.5 * satrec.cc1; // sgp4fix for divide by zero with xinco = 180 deg\n\n    if (Math.abs(cosio + 1.0) > 1.5e-12) {\n      satrec.xlcof = -0.25 * j3oj2 * sinio * (3.0 + 5.0 * cosio) / (1.0 + cosio);\n    } else {\n      satrec.xlcof = -0.25 * j3oj2 * sinio * (3.0 + 5.0 * cosio) / temp4;\n    }\n\n    satrec.aycof = -0.5 * j3oj2 * sinio; // sgp4fix use multiply for speed instead of pow\n\n    var delmotemp = 1.0 + satrec.eta * Math.cos(satrec.mo);\n    satrec.delmo = delmotemp * delmotemp * delmotemp;\n    satrec.sinmao = Math.sin(satrec.mo);\n    satrec.x7thm1 = 7.0 * cosio2 - 1.0; // --------------- deep space initialization -------------\n\n    if (2 * pi / satrec.no >= 225.0) {\n      satrec.method = 'd';\n      satrec.isimp = 1;\n      tc = 0.0;\n      inclm = satrec.inclo;\n      var dscomOptions = {\n        epoch: epoch,\n        ep: satrec.ecco,\n        argpp: satrec.argpo,\n        tc: tc,\n        inclp: satrec.inclo,\n        nodep: satrec.nodeo,\n        np: satrec.no,\n        e3: satrec.e3,\n        ee2: satrec.ee2,\n        peo: satrec.peo,\n        pgho: satrec.pgho,\n        pho: satrec.pho,\n        pinco: satrec.pinco,\n        plo: satrec.plo,\n        se2: satrec.se2,\n        se3: satrec.se3,\n        sgh2: satrec.sgh2,\n        sgh3: satrec.sgh3,\n        sgh4: satrec.sgh4,\n        sh2: satrec.sh2,\n        sh3: satrec.sh3,\n        si2: satrec.si2,\n        si3: satrec.si3,\n        sl2: satrec.sl2,\n        sl3: satrec.sl3,\n        sl4: satrec.sl4,\n        xgh2: satrec.xgh2,\n        xgh3: satrec.xgh3,\n        xgh4: satrec.xgh4,\n        xh2: satrec.xh2,\n        xh3: satrec.xh3,\n        xi2: satrec.xi2,\n        xi3: satrec.xi3,\n        xl2: satrec.xl2,\n        xl3: satrec.xl3,\n        xl4: satrec.xl4,\n        zmol: satrec.zmol,\n        zmos: satrec.zmos\n      };\n      var dscomResult = dscom(dscomOptions);\n      satrec.e3 = dscomResult.e3;\n      satrec.ee2 = dscomResult.ee2;\n      satrec.peo = dscomResult.peo;\n      satrec.pgho = dscomResult.pgho;\n      satrec.pho = dscomResult.pho;\n      satrec.pinco = dscomResult.pinco;\n      satrec.plo = dscomResult.plo;\n      satrec.se2 = dscomResult.se2;\n      satrec.se3 = dscomResult.se3;\n      satrec.sgh2 = dscomResult.sgh2;\n      satrec.sgh3 = dscomResult.sgh3;\n      satrec.sgh4 = dscomResult.sgh4;\n      satrec.sh2 = dscomResult.sh2;\n      satrec.sh3 = dscomResult.sh3;\n      satrec.si2 = dscomResult.si2;\n      satrec.si3 = dscomResult.si3;\n      satrec.sl2 = dscomResult.sl2;\n      satrec.sl3 = dscomResult.sl3;\n      satrec.sl4 = dscomResult.sl4;\n      sinim = dscomResult.sinim;\n      cosim = dscomResult.cosim;\n      em = dscomResult.em;\n      emsq = dscomResult.emsq;\n      s1 = dscomResult.s1;\n      s2 = dscomResult.s2;\n      s3 = dscomResult.s3;\n      s4 = dscomResult.s4;\n      s5 = dscomResult.s5;\n      ss1 = dscomResult.ss1;\n      ss2 = dscomResult.ss2;\n      ss3 = dscomResult.ss3;\n      ss4 = dscomResult.ss4;\n      ss5 = dscomResult.ss5;\n      sz1 = dscomResult.sz1;\n      sz3 = dscomResult.sz3;\n      sz11 = dscomResult.sz11;\n      sz13 = dscomResult.sz13;\n      sz21 = dscomResult.sz21;\n      sz23 = dscomResult.sz23;\n      sz31 = dscomResult.sz31;\n      sz33 = dscomResult.sz33;\n      satrec.xgh2 = dscomResult.xgh2;\n      satrec.xgh3 = dscomResult.xgh3;\n      satrec.xgh4 = dscomResult.xgh4;\n      satrec.xh2 = dscomResult.xh2;\n      satrec.xh3 = dscomResult.xh3;\n      satrec.xi2 = dscomResult.xi2;\n      satrec.xi3 = dscomResult.xi3;\n      satrec.xl2 = dscomResult.xl2;\n      satrec.xl3 = dscomResult.xl3;\n      satrec.xl4 = dscomResult.xl4;\n      satrec.zmol = dscomResult.zmol;\n      satrec.zmos = dscomResult.zmos;\n      nm = dscomResult.nm;\n      z1 = dscomResult.z1;\n      z3 = dscomResult.z3;\n      z11 = dscomResult.z11;\n      z13 = dscomResult.z13;\n      z21 = dscomResult.z21;\n      z23 = dscomResult.z23;\n      z31 = dscomResult.z31;\n      z33 = dscomResult.z33;\n      var dpperOptions = {\n        inclo: inclm,\n        init: satrec.init,\n        ep: satrec.ecco,\n        inclp: satrec.inclo,\n        nodep: satrec.nodeo,\n        argpp: satrec.argpo,\n        mp: satrec.mo,\n        opsmode: satrec.operationmode\n      };\n      var dpperResult = dpper(satrec, dpperOptions);\n      satrec.ecco = dpperResult.ep;\n      satrec.inclo = dpperResult.inclp;\n      satrec.nodeo = dpperResult.nodep;\n      satrec.argpo = dpperResult.argpp;\n      satrec.mo = dpperResult.mp;\n      argpm = 0.0;\n      nodem = 0.0;\n      mm = 0.0;\n      var dsinitOptions = {\n        cosim: cosim,\n        emsq: emsq,\n        argpo: satrec.argpo,\n        s1: s1,\n        s2: s2,\n        s3: s3,\n        s4: s4,\n        s5: s5,\n        sinim: sinim,\n        ss1: ss1,\n        ss2: ss2,\n        ss3: ss3,\n        ss4: ss4,\n        ss5: ss5,\n        sz1: sz1,\n        sz3: sz3,\n        sz11: sz11,\n        sz13: sz13,\n        sz21: sz21,\n        sz23: sz23,\n        sz31: sz31,\n        sz33: sz33,\n        t: satrec.t,\n        tc: tc,\n        gsto: satrec.gsto,\n        mo: satrec.mo,\n        mdot: satrec.mdot,\n        no: satrec.no,\n        nodeo: satrec.nodeo,\n        nodedot: satrec.nodedot,\n        xpidot: xpidot,\n        z1: z1,\n        z3: z3,\n        z11: z11,\n        z13: z13,\n        z21: z21,\n        z23: z23,\n        z31: z31,\n        z33: z33,\n        ecco: satrec.ecco,\n        eccsq: eccsq,\n        em: em,\n        argpm: argpm,\n        inclm: inclm,\n        mm: mm,\n        nm: nm,\n        nodem: nodem,\n        irez: satrec.irez,\n        atime: satrec.atime,\n        d2201: satrec.d2201,\n        d2211: satrec.d2211,\n        d3210: satrec.d3210,\n        d3222: satrec.d3222,\n        d4410: satrec.d4410,\n        d4422: satrec.d4422,\n        d5220: satrec.d5220,\n        d5232: satrec.d5232,\n        d5421: satrec.d5421,\n        d5433: satrec.d5433,\n        dedt: satrec.dedt,\n        didt: satrec.didt,\n        dmdt: satrec.dmdt,\n        dnodt: satrec.dnodt,\n        domdt: satrec.domdt,\n        del1: satrec.del1,\n        del2: satrec.del2,\n        del3: satrec.del3,\n        xfact: satrec.xfact,\n        xlamo: satrec.xlamo,\n        xli: satrec.xli,\n        xni: satrec.xni\n      };\n      var dsinitResult = dsinit(dsinitOptions);\n      satrec.irez = dsinitResult.irez;\n      satrec.atime = dsinitResult.atime;\n      satrec.d2201 = dsinitResult.d2201;\n      satrec.d2211 = dsinitResult.d2211;\n      satrec.d3210 = dsinitResult.d3210;\n      satrec.d3222 = dsinitResult.d3222;\n      satrec.d4410 = dsinitResult.d4410;\n      satrec.d4422 = dsinitResult.d4422;\n      satrec.d5220 = dsinitResult.d5220;\n      satrec.d5232 = dsinitResult.d5232;\n      satrec.d5421 = dsinitResult.d5421;\n      satrec.d5433 = dsinitResult.d5433;\n      satrec.dedt = dsinitResult.dedt;\n      satrec.didt = dsinitResult.didt;\n      satrec.dmdt = dsinitResult.dmdt;\n      satrec.dnodt = dsinitResult.dnodt;\n      satrec.domdt = dsinitResult.domdt;\n      satrec.del1 = dsinitResult.del1;\n      satrec.del2 = dsinitResult.del2;\n      satrec.del3 = dsinitResult.del3;\n      satrec.xfact = dsinitResult.xfact;\n      satrec.xlamo = dsinitResult.xlamo;\n      satrec.xli = dsinitResult.xli;\n      satrec.xni = dsinitResult.xni;\n    } // ----------- set variables if not deep space -----------\n\n\n    if (satrec.isimp !== 1) {\n      cc1sq = satrec.cc1 * satrec.cc1;\n      satrec.d2 = 4.0 * ao * tsi * cc1sq;\n      temp = satrec.d2 * tsi * satrec.cc1 / 3.0;\n      satrec.d3 = (17.0 * ao + sfour) * temp;\n      satrec.d4 = 0.5 * temp * ao * tsi * (221.0 * ao + 31.0 * sfour) * satrec.cc1;\n      satrec.t3cof = satrec.d2 + 2.0 * cc1sq;\n      satrec.t4cof = 0.25 * (3.0 * satrec.d3 + satrec.cc1 * (12.0 * satrec.d2 + 10.0 * cc1sq));\n      satrec.t5cof = 0.2 * (3.0 * satrec.d4 + 12.0 * satrec.cc1 * satrec.d3 + 6.0 * satrec.d2 * satrec.d2 + 15.0 * cc1sq * (2.0 * satrec.d2 + cc1sq));\n    }\n    /* finally propogate to zero epoch to initialize all others. */\n    // sgp4fix take out check to let satellites process until they are actually below earth surface\n    // if(satrec.error == 0)\n\n  }\n\n  sgp4(satrec, 0);\n  satrec.init = 'n';\n  /* eslint-enable no-param-reassign */\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           function twoline2rv\n *\n *  this function converts the two line element set character string data to\n *    variables and initializes the sgp4 variables. several intermediate varaibles\n *    and quantities are determined. note that the result is a structure so multiple\n *    satellites can be processed simultaneously without having to reinitialize. the\n *    verification mode is an important option that permits quick checks of any\n *    changes to the underlying technical theory. this option works using a\n *    modified tle file in which the start, stop, and delta time values are\n *    included at the end of the second line of data. this only works with the\n *    verification mode. the catalog mode simply propagates from -1440 to 1440 min\n *    from epoch and is useful when performing entire catalog runs.\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs        :\n *    longstr1    - first line of the tle\n *    longstr2    - second line of the tle\n *    typerun     - type of run                    verification 'v', catalog 'c',\n *                                                 manual 'm'\n *    typeinput   - type of manual input           mfe 'm', epoch 'e', dayofyr 'd'\n *    opsmode     - mode of operation afspc or improved 'a', 'i'\n *    whichconst  - which set of constants to use  72, 84\n *\n *  outputs       :\n *    satrec      - structure containing all the sgp4 satellite information\n *\n *  coupling      :\n *    getgravconst-\n *    days2mdhms  - conversion of days to month, day, hour, minute, second\n *    jday        - convert day month year hour minute second into julian date\n *    sgp4init    - initialize the sgp4 variables\n *\n *  references    :\n *    norad spacetrack report #3\n *    vallado, crawford, hujsak, kelso  2006\n --------------------------------------------------------------------------- */\n\n/**\n * Return a Satellite imported from two lines of TLE data.\n *\n * Provide the two TLE lines as strings `longstr1` and `longstr2`,\n * and select which standard set of gravitational constants you want\n * by providing `gravity_constants`:\n *\n * `sgp4.propagation.wgs72` - Standard WGS 72 model\n * `sgp4.propagation.wgs84` - More recent WGS 84 model\n * `sgp4.propagation.wgs72old` - Legacy support for old SGP4 behavior\n *\n * Normally, computations are made using letious recent improvements\n * to the algorithm.  If you want to turn some of these off and go\n * back into \"afspc\" mode, then set `afspc_mode` to `True`.\n */\n\nfunction twoline2satrec(longstr1, longstr2) {\n  var opsmode = 'i';\n  var xpdotp = 1440.0 / (2.0 * pi); // 229.1831180523293;\n\n  var year = 0;\n  var satrec = {};\n  satrec.error = 0;\n  satrec.satnum = longstr1.substring(2, 7);\n  satrec.epochyr = parseInt(longstr1.substring(18, 20), 10);\n  satrec.epochdays = parseFloat(longstr1.substring(20, 32));\n  satrec.ndot = parseFloat(longstr1.substring(33, 43));\n  satrec.nddot = parseFloat(\".\".concat(parseInt(longstr1.substring(44, 50), 10), \"E\").concat(longstr1.substring(50, 52)));\n  satrec.bstar = parseFloat(\"\".concat(longstr1.substring(53, 54), \".\").concat(parseInt(longstr1.substring(54, 59), 10), \"E\").concat(longstr1.substring(59, 61))); // satrec.satnum = longstr2.substring(2, 7);\n\n  satrec.inclo = parseFloat(longstr2.substring(8, 16));\n  satrec.nodeo = parseFloat(longstr2.substring(17, 25));\n  satrec.ecco = parseFloat(\".\".concat(longstr2.substring(26, 33)));\n  satrec.argpo = parseFloat(longstr2.substring(34, 42));\n  satrec.mo = parseFloat(longstr2.substring(43, 51));\n  satrec.no = parseFloat(longstr2.substring(52, 63)); // ---- find no, ndot, nddot ----\n\n  satrec.no /= xpdotp; //   rad/min\n  // satrec.nddot= satrec.nddot * Math.pow(10.0, nexp);\n  // satrec.bstar= satrec.bstar * Math.pow(10.0, ibexp);\n  // ---- convert to sgp4 units ----\n\n  satrec.a = Math.pow(satrec.no * tumin, -2.0 / 3.0);\n  satrec.ndot /= xpdotp * 1440.0; // ? * minperday\n\n  satrec.nddot /= xpdotp * 1440.0 * 1440; // ---- find standard orbital elements ----\n\n  satrec.inclo *= deg2rad;\n  satrec.nodeo *= deg2rad;\n  satrec.argpo *= deg2rad;\n  satrec.mo *= deg2rad;\n  satrec.alta = satrec.a * (1.0 + satrec.ecco) - 1.0;\n  satrec.altp = satrec.a * (1.0 - satrec.ecco) - 1.0; // ----------------------------------------------------------------\n  // find sgp4epoch time of element set\n  // remember that sgp4 uses units of days from 0 jan 1950 (sgp4epoch)\n  // and minutes from the epoch (time)\n  // ----------------------------------------------------------------\n  // ---------------- temp fix for years from 1957-2056 -------------------\n  // --------- correct fix will occur when year is 4-digit in tle ---------\n\n  if (satrec.epochyr < 57) {\n    year = satrec.epochyr + 2000;\n  } else {\n    year = satrec.epochyr + 1900;\n  }\n\n  var mdhmsResult = days2mdhms(year, satrec.epochdays);\n  var mon = mdhmsResult.mon,\n      day = mdhmsResult.day,\n      hr = mdhmsResult.hr,\n      minute = mdhmsResult.minute,\n      sec = mdhmsResult.sec;\n  satrec.jdsatepoch = jday(year, mon, day, hr, minute, sec); //  ---------------- initialize the orbit at sgp4epoch -------------------\n\n  sgp4init(satrec, {\n    opsmode: opsmode,\n    satn: satrec.satnum,\n    epoch: satrec.jdsatepoch - 2433281.5,\n    xbstar: satrec.bstar,\n    xecco: satrec.ecco,\n    xargpo: satrec.argpo,\n    xinclo: satrec.inclo,\n    xmo: satrec.mo,\n    xno: satrec.no,\n    xnodeo: satrec.nodeo\n  });\n  return satrec;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction propagate() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  // Return a position and velocity vector for a given date and time.\n  var satrec = args[0];\n  var date = Array.prototype.slice.call(args, 1);\n  var j = jday.apply(void 0, _toConsumableArray(date));\n  var m = (j - satrec.jdsatepoch) * minutesPerDay;\n  return sgp4(satrec, m);\n}\n\nfunction dopplerFactor(location, position, velocity) {\n  var mfactor = 7.292115E-5;\n  var c = 299792.458; // Speed of light in km/s\n\n  var range = {\n    x: position.x - location.x,\n    y: position.y - location.y,\n    z: position.z - location.z\n  };\n  range.w = Math.sqrt(Math.pow(range.x, 2) + Math.pow(range.y, 2) + Math.pow(range.z, 2));\n  var rangeVel = {\n    x: velocity.x + mfactor * location.y,\n    y: velocity.y - mfactor * location.x,\n    z: velocity.z\n  };\n\n  function sign(value) {\n    return value >= 0 ? 1 : -1;\n  }\n\n  var rangeRate = (range.x * rangeVel.x + range.y * rangeVel.y + range.z * rangeVel.z) / range.w;\n  return 1 + rangeRate / c * sign(rangeRate);\n}\n\nfunction radiansToDegrees(radians) {\n  return radians * rad2deg;\n}\nfunction degreesToRadians(degrees) {\n  return degrees * deg2rad;\n}\nfunction degreesLat(radians) {\n  if (radians < -pi / 2 || radians > pi / 2) {\n    throw new RangeError('Latitude radians must be in range [-pi/2; pi/2].');\n  }\n\n  return radiansToDegrees(radians);\n}\nfunction degreesLong(radians) {\n  if (radians < -pi || radians > pi) {\n    throw new RangeError('Longitude radians must be in range [-pi; pi].');\n  }\n\n  return radiansToDegrees(radians);\n}\nfunction radiansLat(degrees) {\n  if (degrees < -90 || degrees > 90) {\n    throw new RangeError('Latitude degrees must be in range [-90; 90].');\n  }\n\n  return degreesToRadians(degrees);\n}\nfunction radiansLong(degrees) {\n  if (degrees < -180 || degrees > 180) {\n    throw new RangeError('Longitude degrees must be in range [-180; 180].');\n  }\n\n  return degreesToRadians(degrees);\n}\nfunction geodeticToEcf(geodetic) {\n  var longitude = geodetic.longitude,\n      latitude = geodetic.latitude,\n      height = geodetic.height;\n  var a = 6378.137;\n  var b = 6356.7523142;\n  var f = (a - b) / a;\n  var e2 = 2 * f - f * f;\n  var normal = a / Math.sqrt(1 - e2 * (Math.sin(latitude) * Math.sin(latitude)));\n  var x = (normal + height) * Math.cos(latitude) * Math.cos(longitude);\n  var y = (normal + height) * Math.cos(latitude) * Math.sin(longitude);\n  var z = (normal * (1 - e2) + height) * Math.sin(latitude);\n  return {\n    x: x,\n    y: y,\n    z: z\n  };\n}\nfunction eciToGeodetic(eci, gmst) {\n  // http://www.celestrak.com/columns/v02n03/\n  var a = 6378.137;\n  var b = 6356.7523142;\n  var R = Math.sqrt(eci.x * eci.x + eci.y * eci.y);\n  var f = (a - b) / a;\n  var e2 = 2 * f - f * f;\n  var longitude = Math.atan2(eci.y, eci.x) - gmst;\n\n  while (longitude < -pi) {\n    longitude += twoPi;\n  }\n\n  while (longitude > pi) {\n    longitude -= twoPi;\n  }\n\n  var kmax = 20;\n  var k = 0;\n  var latitude = Math.atan2(eci.z, Math.sqrt(eci.x * eci.x + eci.y * eci.y));\n  var C;\n\n  while (k < kmax) {\n    C = 1 / Math.sqrt(1 - e2 * (Math.sin(latitude) * Math.sin(latitude)));\n    latitude = Math.atan2(eci.z + a * C * e2 * Math.sin(latitude), R);\n    k += 1;\n  }\n\n  var height = R / Math.cos(latitude) - a * C;\n  return {\n    longitude: longitude,\n    latitude: latitude,\n    height: height\n  };\n}\nfunction ecfToEci(ecf, gmst) {\n  // ccar.colorado.edu/ASEN5070/handouts/coordsys.doc\n  //\n  // [X]     [C -S  0][X]\n  // [Y]  =  [S  C  0][Y]\n  // [Z]eci  [0  0  1][Z]ecf\n  //\n  var X = ecf.x * Math.cos(gmst) - ecf.y * Math.sin(gmst);\n  var Y = ecf.x * Math.sin(gmst) + ecf.y * Math.cos(gmst);\n  var Z = ecf.z;\n  return {\n    x: X,\n    y: Y,\n    z: Z\n  };\n}\nfunction eciToEcf(eci, gmst) {\n  // ccar.colorado.edu/ASEN5070/handouts/coordsys.doc\n  //\n  // [X]     [C -S  0][X]\n  // [Y]  =  [S  C  0][Y]\n  // [Z]eci  [0  0  1][Z]ecf\n  //\n  //\n  // Inverse:\n  // [X]     [C  S  0][X]\n  // [Y]  =  [-S C  0][Y]\n  // [Z]ecf  [0  0  1][Z]eci\n  var x = eci.x * Math.cos(gmst) + eci.y * Math.sin(gmst);\n  var y = eci.x * -Math.sin(gmst) + eci.y * Math.cos(gmst);\n  var z = eci.z;\n  return {\n    x: x,\n    y: y,\n    z: z\n  };\n}\n\nfunction topocentric(observerGeodetic, satelliteEcf) {\n  // http://www.celestrak.com/columns/v02n02/\n  // TS Kelso's method, except I'm using ECF frame\n  // and he uses ECI.\n  var longitude = observerGeodetic.longitude,\n      latitude = observerGeodetic.latitude;\n  var observerEcf = geodeticToEcf(observerGeodetic);\n  var rx = satelliteEcf.x - observerEcf.x;\n  var ry = satelliteEcf.y - observerEcf.y;\n  var rz = satelliteEcf.z - observerEcf.z;\n  var topS = Math.sin(latitude) * Math.cos(longitude) * rx + Math.sin(latitude) * Math.sin(longitude) * ry - Math.cos(latitude) * rz;\n  var topE = -Math.sin(longitude) * rx + Math.cos(longitude) * ry;\n  var topZ = Math.cos(latitude) * Math.cos(longitude) * rx + Math.cos(latitude) * Math.sin(longitude) * ry + Math.sin(latitude) * rz;\n  return {\n    topS: topS,\n    topE: topE,\n    topZ: topZ\n  };\n}\n/**\n * @param {Object} tc\n * @param {Number} tc.topS Positive horizontal vector S due south.\n * @param {Number} tc.topE Positive horizontal vector E due east.\n * @param {Number} tc.topZ Vector Z normal to the surface of the earth (up).\n * @returns {Object}\n */\n\n\nfunction topocentricToLookAngles(tc) {\n  var topS = tc.topS,\n      topE = tc.topE,\n      topZ = tc.topZ;\n  var rangeSat = Math.sqrt(topS * topS + topE * topE + topZ * topZ);\n  var El = Math.asin(topZ / rangeSat);\n  var Az = Math.atan2(-topE, topS) + pi;\n  return {\n    azimuth: Az,\n    elevation: El,\n    rangeSat: rangeSat // Range in km\n\n  };\n}\n\nfunction ecfToLookAngles(observerGeodetic, satelliteEcf) {\n  var topocentricCoords = topocentric(observerGeodetic, satelliteEcf);\n  return topocentricToLookAngles(topocentricCoords);\n}\n\nexport { constants, degreesLat, degreesLong, degreesToRadians, dopplerFactor, ecfToEci, ecfToLookAngles, eciToEcf, eciToGeodetic, geodeticToEcf, gstime, invjday, jday, propagate, radiansLat, radiansLong, radiansToDegrees, sgp4, twoline2satrec };\n","export var SpaceObjectType;\n(function (SpaceObjectType) {\n    SpaceObjectType[SpaceObjectType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    SpaceObjectType[SpaceObjectType[\"PAYLOAD\"] = 1] = \"PAYLOAD\";\n    SpaceObjectType[SpaceObjectType[\"ROCKET_BODY\"] = 2] = \"ROCKET_BODY\";\n    SpaceObjectType[SpaceObjectType[\"DEBRIS\"] = 3] = \"DEBRIS\";\n    SpaceObjectType[SpaceObjectType[\"SPECIAL\"] = 4] = \"SPECIAL\";\n    SpaceObjectType[SpaceObjectType[\"RADAR_MEASUREMENT\"] = 5] = \"RADAR_MEASUREMENT\";\n    SpaceObjectType[SpaceObjectType[\"RADAR_TRACK\"] = 6] = \"RADAR_TRACK\";\n    SpaceObjectType[SpaceObjectType[\"RADAR_OBJECT\"] = 7] = \"RADAR_OBJECT\";\n    SpaceObjectType[SpaceObjectType[\"BALLISTIC_MISSILE\"] = 8] = \"BALLISTIC_MISSILE\";\n    SpaceObjectType[SpaceObjectType[\"STAR\"] = 9] = \"STAR\";\n    SpaceObjectType[SpaceObjectType[\"INTERGOVERNMENTAL_ORGANIZATION\"] = 10] = \"INTERGOVERNMENTAL_ORGANIZATION\";\n    SpaceObjectType[SpaceObjectType[\"SUBORBITAL_PAYLOAD_OPERATOR\"] = 11] = \"SUBORBITAL_PAYLOAD_OPERATOR\";\n    SpaceObjectType[SpaceObjectType[\"PAYLOAD_OWNER\"] = 12] = \"PAYLOAD_OWNER\";\n    SpaceObjectType[SpaceObjectType[\"METEOROLOGICAL_ROCKET_LAUNCH_AGENCY_OR_MANUFACTURER\"] = 13] = \"METEOROLOGICAL_ROCKET_LAUNCH_AGENCY_OR_MANUFACTURER\";\n    SpaceObjectType[SpaceObjectType[\"PAYLOAD_MANUFACTURER\"] = 14] = \"PAYLOAD_MANUFACTURER\";\n    SpaceObjectType[SpaceObjectType[\"LAUNCH_AGENCY\"] = 15] = \"LAUNCH_AGENCY\";\n    SpaceObjectType[SpaceObjectType[\"LAUNCH_SITE\"] = 16] = \"LAUNCH_SITE\";\n    SpaceObjectType[SpaceObjectType[\"LAUNCH_POSITION\"] = 17] = \"LAUNCH_POSITION\";\n    SpaceObjectType[SpaceObjectType[\"LAUNCH_FACILITY\"] = 18] = \"LAUNCH_FACILITY\";\n    SpaceObjectType[SpaceObjectType[\"CONTORL_FACILITY\"] = 19] = \"CONTORL_FACILITY\";\n    SpaceObjectType[SpaceObjectType[\"GROUND_SENSOR_STATION\"] = 20] = \"GROUND_SENSOR_STATION\";\n    SpaceObjectType[SpaceObjectType[\"OPTICAL\"] = 21] = \"OPTICAL\";\n    SpaceObjectType[SpaceObjectType[\"MECHANICAL\"] = 22] = \"MECHANICAL\";\n    SpaceObjectType[SpaceObjectType[\"PHASED_ARRAY_RADAR\"] = 23] = \"PHASED_ARRAY_RADAR\";\n    SpaceObjectType[SpaceObjectType[\"OBSERVER\"] = 24] = \"OBSERVER\";\n    SpaceObjectType[SpaceObjectType[\"BISTATIC_RADIO_TELESCOPE\"] = 25] = \"BISTATIC_RADIO_TELESCOPE\";\n    SpaceObjectType[SpaceObjectType[\"COUNTRY\"] = 26] = \"COUNTRY\";\n    SpaceObjectType[SpaceObjectType[\"LAUNCH_VEHICLE_MANUFACTURER\"] = 27] = \"LAUNCH_VEHICLE_MANUFACTURER\";\n    SpaceObjectType[SpaceObjectType[\"ENGINE_MANUFACTURER\"] = 28] = \"ENGINE_MANUFACTURER\";\n})(SpaceObjectType || (SpaceObjectType = {}));\n","export const ZOOM_EXP = 3;\nexport const PI = Math.PI;\nexport const TAU = 2 * Math.PI;\nexport const DEG2RAD = TAU / 360;\nexport const RAD2DEG = 360 / TAU;\n// export const MILLISECONDS_PER_DAY = 1000 * 60 * 60 * 24;\n// TODO: this is really MILLISECONDS_TO_DAYS\nexport const MILLISECONDS_PER_DAY = 1.15741e-8;\nexport const MINUTES_PER_DAY = 1440;\nexport const PLANETARIUM_DIST = 3;\nexport const RADIUS_OF_DRAW_SUN = 9000;\nexport const SUN_SCALAR_DISTANCE = 250000;\nexport const RADIUS_OF_DRAW_MOON = 4000;\nexport const MOON_SCALAR_DISTANCE = 200000;\nexport const cMPerSec = 299792458;\nexport const cKmPerSec = 299792458 / 1000;\nexport const cKmPerMs = 299792458 / 1000 / 1000;\nexport const RADIUS_OF_EARTH = 6371; // Radius of Earth in kilometers\nexport const GROUND_BUFFER_DISTANCE = 1; // Distance objects are placed above earth to avoid z-buffer fighting\nexport const RADIUS_OF_SUN = 695700; // Radius of the Sun in kilometers\nexport const STAR_DISTANCE = 250000; // Artificial Star Distance - Lower numberrReduces webgl depth buffer\nexport const DISTANCE_TO_SUN = 149597870; // Distance from Earth to the Sun in kilometers\n","// @ts-nocheck\nconst A = { JMod: 2400000.5, J2000: 2451545, J1900: 2415020, B1900: 2415020.3135, B1950: 2433282.4235, JulianYear: 365.25, JulianCentury: 36525, BesselianYear: 365.2421988, AU: 149597870 };\nA.EclCoord = function (a, b, c) {\n    if (isNaN(a) || isNaN(b))\n        throw Error('Invalid EclCoord object: (' + a + ', ' + b + ')');\n    this.lat = a;\n    this.lng = b;\n    void 0 !== c && (this.h = c);\n};\nA.EclCoord.prototype = {\n    toWgs84String: function () {\n        return A.Math.formatNum((180 * this.lat) / Math.PI) + ', ' + A.Math.formatNum((180 * -this.lng) / Math.PI);\n    },\n};\nA.EclCoordfromWgs84 = function (a, b, c) {\n    return new A.EclCoord((a * Math.PI) / 180, (-b * Math.PI) / 180, c);\n};\nA.EqCoord = function (a, b) {\n    if (isNaN(a) || isNaN(b))\n        throw Error('Invalid EqCoord object: (' + a + ', ' + b + ')');\n    this.ra = a;\n    this.dec = b;\n};\nA.EqCoord.prototype = {\n    toString: function () {\n        return 'ra:' + A.Math.formatNum((180 * this.ra) / Math.PI) + ', dec:' + A.Math.formatNum((180 * this.dec) / Math.PI);\n    },\n};\nA.HzCoord = function (a, b) {\n    if (isNaN(a) || isNaN(b))\n        throw Error('Invalid HzCoord object: (' + a + ', ' + b + ')');\n    this.az = a;\n    this.alt = b;\n};\nA.HzCoord.prototype = {\n    toString: function () {\n        return 'azi:' + A.Math.formatNum((180 * this.az) / Math.PI) + ', alt:' + A.Math.formatNum((180 * this.alt) / Math.PI);\n    },\n};\nA.Coord = {\n    dmsToDeg: function (a, b, c, d) {\n        d = (60 * (60 * b + c) + d) / 3600;\n        return a ? -d : d;\n    },\n    calcAngle: function (a, b, c, d) {\n        return (A.Coord.dmsToDeg(a, b, c, d) * Math.PI) / 180;\n    },\n    calcRA: function (a, b, c) {\n        return ((A.Coord.dmsToDeg(!1, a, b, c) % 24) * 15 * Math.PI) / 180;\n    },\n    secondsToHMSStr: function (a) {\n        var b = Math.floor(a / 86400);\n        a = A.Math.pMod(a, 86400);\n        var c = Math.floor(a / 3600) % 24, d = Math.floor(a / 60) % 60;\n        a = Math.floor(a % 60);\n        return (0 !== b ? b + 'd ' : '') + (10 > c ? '0' : '') + c + ':' + (10 > d ? '0' : '') + d + ':' + (10 > a ? '0' : '') + a;\n    },\n    secondsToHMStr: function (a) {\n        var b = Math.floor(a / 86400);\n        a = A.Math.pMod(a, 86400);\n        var c = Math.floor(a / 3600) % 24;\n        a = Math.floor(a / 60) % 60;\n        return (0 !== b ? b + 'd ' : '') + (10 > c ? '0' : '') + c + ':' + (10 > a ? '0' : '') + a;\n    },\n    eqToEcl: function (a, b) {\n        var c = Math.sin(a.ra), d = Math.sin(a.dec), e = Math.cos(a.dec), f = Math.sin(b);\n        b = Math.cos(b);\n        return new A.EclCoord(Math.atan2(c * b + (d / e) * f, Math.cos(a.ra)), Math.asin(d * b - e * f * c));\n    },\n    eclToEq: function (a, b) {\n        var c = Math.sin(a.lat), d = Math.sin(a.lng), e = Math.cos(a.lng), f = Math.sin(b);\n        b = Math.cos(b);\n        let a2 = Math.atan2(c * b - (d / e) * f, Math.cos(a.lat));\n        0 > a2 && (a2 += 2 * Math.PI);\n        return new A.EqCoord(a2, Math.asin(d * b + e * f * c));\n    },\n    eqToHz: function (a, b, c) {\n        c = c - b.lng - a.ra;\n        var d = Math.cos(c), e = Math.sin(b.lat);\n        b = Math.cos(b.lat);\n        var f = Math.sin(a.dec);\n        a = Math.cos(a.dec);\n        return new A.HzCoord(Math.atan2(Math.sin(c), d * e - (f / a) * b), Math.asin(e * f + b * a * d));\n    },\n};\nA.DeltaT = {\n    jdToJde: function (a, b) {\n        b || (b = A.DeltaT.estimate(a));\n        return a + b / 86400;\n    },\n    jdeToJd: function (a, b) {\n        b || (b = A.DeltaT.estimate(a));\n        return a - b / 86400;\n    },\n    decimalYear: function (a) {\n        a = A.JulianDay.jdToCalendar(a);\n        return a.y + (a.m - 0.5) / 12;\n    },\n    estimate: function (a) {\n        var b = A.DeltaT.decimalYear(a);\n        a = Math.pow;\n        return -500 > b\n            ? -20 + 32 * a((b - 1820) / 100, 2)\n            : 500 > b\n                ? ((b /= 100), 10583.6 - 1014.41 * b + 33.78311 * a(b, 2) - 5.952053 * a(b, 3) - 0.1798452 * a(b, 4) + 0.022174192 * a(b, 5) + 0.0090316521 * a(b, 6))\n                : 1600 > b\n                    ? ((b = (b - 1e3) / 100), 1574.2 - 556.01 * b + 71.23472 * a(b, 2) + 0.319781 * a(b, 3) - 0.8503463 * a(b, 4) - 0.005050998 * a(b, 5) + 0.0083572073 * a(b, 6))\n                    : 1700 > b\n                        ? ((b -= 1600), 120 - 0.9808 * b - 0.01532 * a(b, 2) + a(b, 3) / 7129)\n                        : 1800 > b\n                            ? ((b -= 1700), 8.83 + 0.1603 * b - 0.0059285 * a(b, 2) + 1.3336e-4 * a(b, 3) - a(b, 4) / 1174e3)\n                            : 1860 > b\n                                ? ((b -= 1800), 13.72 - 0.332447 * b + 0.0068612 * a(b, 2) + 0.0041116 * a(b, 3) - 3.7436e-4 * a(b, 4) + 1.21272e-5 * a(b, 5) - 1.699e-7 * a(b, 6) + 8.75e-10 * a(b, 7))\n                                : 1900 > b\n                                    ? ((b -= 1860), 7.62 + 0.5737 * b - 0.251754 * a(b, 2) + 0.01680668 * a(b, 3) - 4.473624e-4 * a(b, 4) + a(b, 5) / 233174)\n                                    : 1920 > b\n                                        ? ((b -= 1900), -2.79 + 1.494119 * b - 0.0598939 * a(b, 2) + 0.0061966 * a(b, 3) - 1.97e-4 * a(b, 4))\n                                        : 1941 > b\n                                            ? ((b -= 1920), 21.2 + 0.84493 * b - 0.0761 * a(b, 2) + 0.0020936 * a(b, 3))\n                                            : 1961 > b\n                                                ? ((b -= 1950), 29.07 + 0.407 * b - a(b, 2) / 233 + a(b, 3) / 2547)\n                                                : 1986 > b\n                                                    ? ((b -= 1975), 45.45 + 1.067 * b - a(b, 2) / 260 - a(b, 3) / 718)\n                                                    : 2005 > b\n                                                        ? ((b -= 2e3), 63.86 + 0.3345 * b - 0.060374 * a(b, 2) + 0.0017275 * a(b, 3) + 6.51814e-4 * a(b, 4) + 2.373599e-5 * a(b, 5))\n                                                        : 2050 > b\n                                                            ? ((b -= 2e3), 62.92 + 0.32217 * b + 0.005589 * a(b, 2))\n                                                            : 2150 > b\n                                                                ? -20 + 32 * a((b - 1820) / 100, 2) - 0.5628 * (2150 - b)\n                                                                : -20 + 32 * a((b - 1820) / 100, 2);\n    },\n};\nA.Globe = {\n    Er: 6378.14,\n    Fl: 1 / 298.257,\n    parallaxConstants: function (a, b) {\n        b || (b = 0);\n        var c = 1 - A.Globe.Fl;\n        b = (0.001 * b) / A.Globe.Er;\n        return { rhoslat: Math.sin(Math.atan(c * Math.tan(a))) * c + b * Math.sin(a), rhoclat: Math.cos(Math.atan(c * Math.tan(a))) + b * Math.cos(a) };\n    },\n};\nA.Interp = {\n    newLen3: function (a, b, c) {\n        if (3 != c.length)\n            throw 'Error not 3';\n        if (b == a)\n            throw 'Error no x range';\n        var d = c[1] - c[0], e = c[2] - c[1];\n        return { x1: a, x3: b, y: c, a: d, b: e, c: e - d, abSum: d + e, xSum: b + a, xDiff: b - a };\n    },\n    interpolateX: function (a, b) {\n        return A.Interp.interpolateN(a, (2 * b - a.xSum) / a.xDiff);\n    },\n    interpolateN: function (a, b) {\n        return a.y[1] + 0.5 * b * (a.abSum + b * a.c);\n    },\n};\nA.JulianDay = function (a, b) {\n    a instanceof Date && (a = A.JulianDay.dateToJD(a));\n    this.jd = a;\n    this.deltaT = b ? b : A.DeltaT.estimate(this.jd);\n    this.jde = A.DeltaT.jdToJde(this.jd, this.deltaT);\n};\nA.JulianDay.prototype = {\n    toCalendar: function () {\n        return A.JulianDay.jdToCalendar(this.jd);\n    },\n    toDate: function () {\n        return A.JulianDay.jdToDate(this.jd);\n    },\n    jdJ2000Century: function () {\n        return (this.jd - A.J2000) / A.JulianCentury;\n    },\n    jdeJ2000Century: function () {\n        return (this.jde - A.J2000) / A.JulianCentury;\n    },\n    startOfDay: function () {\n        return new A.JulianDay(Math.floor(this.jde - 0.5) + 0.5, this.deltaT);\n    },\n};\nA.JulianDay.gregorianTimeStart = Date.UTC(1582, 9, 4);\nA.JulianDay.jdFromGregorian = function (a, b, c) {\n    return new A.JulianDay(A.JulianDay.jdFromGregorian(a, b, c));\n};\nA.JulianDay.jdFromJulian = function (a, b, c) {\n    return new A.JulianDay(A.JulianDay.calendarJulianToJD(a, b, c));\n};\nA.JulianDay.jdFromJDE = function (a) {\n    var b = A.DeltaT.estimate(a);\n    a = A.DeltaT.jdeToJd(a, b);\n    return new A.JulianDay(a, b);\n};\nA.JulianDay.dateToJD = function (a) {\n    var b = a.getUTCDate() + A.JulianDay.secondsFromHMS(a.getUTCHours(), a.getUTCMinutes(), a.getUTCSeconds()) / 86400;\n    return a.getTime() < A.JulianDay.gregorianTimeStart ? A.JulianDay.calendarJulianToJD(a.getUTCFullYear(), a.getUTCMonth() + 1, b) : A.JulianDay.calendarGregorianToJD(a.getUTCFullYear(), a.getUTCMonth() + 1, b);\n};\nA.JulianDay.calendarGregorianToJD = function (a, b, c) {\n    if (1 == b || 2 == b)\n        a--, (b += 12);\n    var d = Math.floor(a / 100);\n    return Math.floor((36525 * (a + 4716)) / 100) + Math.floor((306 * (b + 1)) / 10) + (2 - d + Math.floor(d / 4)) + c - 1524.5;\n};\nA.JulianDay.calendarJulianToJD = function (a, b, c) {\n    if (1 == b || 2 == b)\n        a--, (b += 12);\n    return Math.floor((36525 * (a + 4716)) / 100) + Math.floor((306 * (b + 1)) / 10) + c - 1524.5;\n};\nA.JulianDay.secondsFromHMS = function (a, b, c) {\n    return 3600 * a + 60 * b + c;\n};\nA.JulianDay.jdToDate = function (a) {\n    var b = A.JulianDay.jdToCalendar(a);\n    a = A.Math.modF(a + 0.5)[1];\n    a = Math.round(86400 * a);\n    return new Date(Date.UTC(b.y, b.m - 1, Math.floor(b.d), Math.floor(a / 3600) % 24, Math.floor(a / 60) % 60, Math.floor(a % 60)));\n};\nA.JulianDay.jdToCalendar = function (a) {\n    a = A.Math.modF(a + 0.5);\n    var b = a[0], c = b;\n    2299151 <= b && ((c = Math.floor((100 * b - 186721625) / 3652425)), (c = b + 1 + c - Math.floor(c / 4)));\n    var d = c + 1524;\n    b = Math.floor((100 * d - 12210) / 36525);\n    var e = Math.floor((36525 * b) / 100);\n    c = Math.floor((1e4 * (d - e)) / 306001);\n    a = d - e - Math.floor((306001 * c) / 1e4) + a[1];\n    c = 14 == c || 15 == c ? c - 13 : c - 1;\n    return { y: 1 == c || 2 == c ? Math.floor(b) - 4715 : Math.floor(b) - 4716, m: c, d: a };\n};\nA.JulianDay.leapYearGregorian = function (a) {\n    return (0 === a % 4 && 0 !== a % 100) || 0 === a % 400;\n};\nA.JulianDay.dayOfYear = function (a, b, c, d) {\n    a = 2;\n    d && a--;\n    return A.JulianDay._wholeMonths(b, a) + c;\n};\nA.JulianDay._wholeMonths = function (a, b) {\n    return Math.round((275 * a) / 9 - ((a + 9) / 12) * b - 30);\n};\nA.Math = {\n    pMod: function (a, b) {\n        a %= b;\n        0 > a && (a += b);\n        return a;\n    },\n    modF: function (a) {\n        return 0 > a ? ((a = -a), [-Math.floor(a), -(a % 1)]) : [Math.floor(a), a % 1];\n    },\n    horner: function (a, b) {\n        var c = b.length - 1;\n        if (0 >= c)\n            throw 'empty array not supported';\n        for (var d = b[c]; 0 < c;)\n            c--, (d = d * a + b[c]);\n        return d;\n    },\n    formatNum: function (a, b) {\n        b = Math.pow(10, b | 4);\n        return Math.round(a * b) / b;\n    },\n};\nA.Moon = {\n    parallax: function (a) {\n        return Math.asin(6378.14 / a);\n    },\n    apparentEquatorial: function (a) {\n        var b = A.Moon.geocentricPosition(a), c = A.Nutation.nutation(a);\n        a = A.Nutation.meanObliquityLaskar(a) + c.deltaobliquity;\n        return { eq: A.Coord.eclToEq(new A.EclCoord(b.lng + c.deltalng, b.lat), a), delta: b.delta };\n    },\n    apparentTopocentric: function (a, b, c) {\n        var d = A.Moon.apparentEquatorial(a), e = A.Globe.parallaxConstants(b.lat, b.h), f = A.Moon.parallax(d.delta);\n        c || (c = A.Sidereal.apparentInRa(a));\n        return { eq: A.Parallax.topocentric(d.eq, f, e.rhoslat, e.rhoclat, b.lng, c), delta: d.delta };\n    },\n    topocentricPosition: function (a, b, c) {\n        var d = A.Sidereal.apparentInRa(a);\n        a = A.Moon.apparentTopocentric(a, b, d);\n        var e = A.Coord.eqToHz(a.eq, b, d);\n        !0 === c && (e.alt += A.Refraction.bennett2(e.alt));\n        b = A.Moon.parallacticAngle(b.lat, d - (b.lng + a.eq.ra), a.eq.dec);\n        return { hz: e, eq: a.eq, delta: a.delta, q: b };\n    },\n    approxTransit: function (a, b) {\n        a = a.startOfDay();\n        return A.Rise.approxTransit(b, A.Sidereal.apparent0UT(a), A.Moon.apparentTopocentric(a, b).eq);\n    },\n    approxTimes: function (a, b) {\n        a = a.startOfDay();\n        var c = A.Moon.apparentTopocentric(a, b), d = A.Moon.parallax(c.delta);\n        d = A.Rise.stdh0Lunar(d);\n        a = A.Sidereal.apparent0UT(a);\n        return A.Rise.approxTimes(b, d, a, c.eq);\n    },\n    times: function (a, b) {\n        a = a.startOfDay();\n        var c = A.Moon.apparentTopocentric(new A.JulianDay(a.jd - 1, a.deltaT), b), d = A.Moon.apparentTopocentric(a, b), e = A.Moon.apparentTopocentric(new A.JulianDay(a.jd + 1, a.deltaT), b), f = A.Moon.parallax(d.delta);\n        f = A.Rise.stdh0Lunar(f);\n        var g = A.Sidereal.apparent0UT(a);\n        return A.Rise.times(b, a.deltaT, f, g, [c.eq, d.eq, e.eq]);\n    },\n    parallacticAngle: function (a, b, c) {\n        return Math.atan2(Math.sin(b), Math.tan(a) * Math.cos(c) - Math.sin(c) * Math.cos(b));\n    },\n    geocentricPosition: function (a) {\n        var b = Math.PI / 180, c = a.jdeJ2000Century();\n        a = A.Math.pMod(A.Math.horner(c, [218.3164477 * b, 481267.88123421 * b, -0.0015786 * b, b / 538841, -b / 65194e3]), 2 * Math.PI);\n        var d = A.Math.pMod(A.Math.horner(c, [297.8501921 * b, 445267.1114034 * b, -0.0018819 * b, b / 545868, -b / 113065e3]), 2 * Math.PI), e = A.Math.pMod(A.Math.horner(c, [357.5291092 * b, 35999.0502909 * b, -1.535e-4 * b, b / 2449e4]), 2 * Math.PI), f = A.Math.pMod(A.Math.horner(c, [134.9633964 * b, 477198.8675055 * b, 0.0087414 * b, b / 69699, -b / 14712e3]), 2 * Math.PI), g = A.Math.pMod(A.Math.horner(c, [93.272095 * b, 483202.0175233 * b, -0.0036539 * b, -b / 3526e3, b / 86331e4]), 2 * Math.PI), l = 119.75 * b + 131.849 * b * c, m = 53.09 * b + 479264.29 * b * c, h = 313.45 * b + 481266.484 * b * c;\n        c = A.Math.horner(c, [1, -0.002516, -7.4e-6]);\n        var p = c * c;\n        m = 3958 * Math.sin(l) + 1962 * Math.sin(a - g) + 318 * Math.sin(m);\n        var n = 0;\n        l = -2235 * Math.sin(a) + 382 * Math.sin(h) + 175 * Math.sin(l - g) + 175 * Math.sin(l + g) + 127 * Math.sin(a - f) - 115 * Math.sin(a + f);\n        for (h = 0; h < A.Moon.ta.length; h++) {\n            var k = A.Moon.ta[h];\n            var r = d * k[0] + e * k[1] + f * k[2] + g * k[3], q = Math.sin(r);\n            r = Math.cos(r);\n            switch (k[1]) {\n                case 0:\n                    m += k[4] * q;\n                    n += k[5] * r;\n                    break;\n                case 1:\n                case -1:\n                    m += k[4] * q * c;\n                    n += k[5] * r * c;\n                    break;\n                case 2:\n                case -2:\n                    m += k[4] * q * p;\n                    n += k[5] * r * p;\n                    break;\n                default:\n                    throw 'error';\n            }\n        }\n        for (h = 0; h < A.Moon.tb.length; h++)\n            switch (((k = A.Moon.tb[h]), (q = Math.sin(d * k[0] + e * k[1] + f * k[2] + g * k[3])), k[1])) {\n                case 0:\n                    l += k[4] * q;\n                    break;\n                case 1:\n                case -1:\n                    l += k[4] * q * c;\n                    break;\n                case 2:\n                case -2:\n                    l += k[4] * q * p;\n                    break;\n                default:\n                    throw 'error';\n            }\n        return { lng: A.Math.pMod(a, 2 * Math.PI) + 1e-6 * m * b, lat: 1e-6 * l * b, delta: 385000.56 + 0.001 * n };\n    },\n    ta: [\n        [0, 0, 1, 0, 6288774, -20905355],\n        [2, 0, -1, 0, 1274027, -3699111],\n        [2, 0, 0, 0, 658314, -2955968],\n        [0, 0, 2, 0, 213618, -569925],\n        [0, 1, 0, 0, -185116, 48888],\n        [0, 0, 0, 2, -114332, -3149],\n        [2, 0, -2, 0, 58793, 246158],\n        [2, -1, -1, 0, 57066, -152138],\n        [2, 0, 1, 0, 53322, -170733],\n        [2, -1, 0, 0, 45758, -204586],\n        [0, 1, -1, 0, -40923, -129620],\n        [1, 0, 0, 0, -34720, 108743],\n        [0, 1, 1, 0, -30383, 104755],\n        [2, 0, 0, -2, 15327, 10321],\n        [0, 0, 1, 2, -12528, 0],\n        [0, 0, 1, -2, 10980, 79661],\n        [4, 0, -1, 0, 10675, -34782],\n        [0, 0, 3, 0, 10034, -23210],\n        [4, 0, -2, 0, 8548, -21636],\n        [2, 1, -1, 0, -7888, 24208],\n        [2, 1, 0, 0, -6766, 30824],\n        [1, 0, -1, 0, -5163, -8379],\n        [1, 1, 0, 0, 4987, -16675],\n        [2, -1, 1, 0, 4036, -12831],\n        [2, 0, 2, 0, 3994, -10445],\n        [4, 0, 0, 0, 3861, -11650],\n        [2, 0, -3, 0, 3665, 14403],\n        [0, 1, -2, 0, -2689, -7003],\n        [2, 0, -1, 2, -2602, 0],\n        [2, -1, -2, 0, 2390, 10056],\n        [1, 0, 1, 0, -2348, 6322],\n        [2, -2, 0, 0, 2236, -9884],\n        [0, 1, 2, 0, -2120, 5751],\n        [0, 2, 0, 0, -2069, 0],\n        [2, -2, -1, 0, 2048, -4950],\n        [2, 0, 1, -2, -1773, 4130],\n        [2, 0, 0, 2, -1595, 0],\n        [4, -1, -1, 0, 1215, -3958],\n        [0, 0, 2, 2, -1110, 0],\n        [3, 0, -1, 0, -892, 3258],\n        [2, 1, 1, 0, -810, 2616],\n        [4, -1, -2, 0, 759, -1897],\n        [0, 2, -1, 0, -713, -2117],\n        [2, 2, -1, 0, -700, 2354],\n        [2, 1, -2, 0, 691, 0],\n        [2, -1, 0, -2, 596, 0],\n        [4, 0, 1, 0, 549, -1423],\n        [0, 0, 4, 0, 537, -1117],\n        [4, -1, 0, 0, 520, -1571],\n        [1, 0, -2, 0, -487, -1739],\n        [2, 1, 0, -2, -399, 0],\n        [0, 0, 2, -2, -381, -4421],\n        [1, 1, 1, 0, 351, 0],\n        [3, 0, -2, 0, -340, 0],\n        [4, 0, -3, 0, 330, 0],\n        [2, -1, 2, 0, 327, 0],\n        [0, 2, 1, 0, -323, 1165],\n        [1, 1, -1, 0, 299, 0],\n        [2, 0, 3, 0, 294, 0],\n        [2, 0, -1, -2, 0, 8752],\n    ],\n    tb: [\n        [0, 0, 0, 1, 5128122],\n        [0, 0, 1, 1, 280602],\n        [0, 0, 1, -1, 277693],\n        [2, 0, 0, -1, 173237],\n        [2, 0, -1, 1, 55413],\n        [2, 0, -1, -1, 46271],\n        [2, 0, 0, 1, 32573],\n        [0, 0, 2, 1, 17198],\n        [2, 0, 1, -1, 9266],\n        [0, 0, 2, -1, 8822],\n        [2, -1, 0, -1, 8216],\n        [2, 0, -2, -1, 4324],\n        [2, 0, 1, 1, 4200],\n        [2, 1, 0, -1, -3359],\n        [2, -1, -1, 1, 2463],\n        [2, -1, 0, 1, 2211],\n        [2, -1, -1, -1, 2065],\n        [0, 1, -1, -1, -1870],\n        [4, 0, -1, -1, 1828],\n        [0, 1, 0, 1, -1794],\n        [0, 0, 0, 3, -1749],\n        [0, 1, -1, 1, -1565],\n        [1, 0, 0, 1, -1491],\n        [0, 1, 1, 1, -1475],\n        [0, 1, 1, -1, -1410],\n        [0, 1, 0, -1, -1344],\n        [1, 0, 0, -1, -1335],\n        [0, 0, 3, 1, 1107],\n        [4, 0, 0, -1, 1021],\n        [4, 0, -1, 1, 833],\n        [0, 0, 1, -3, 777],\n        [4, 0, -2, 1, 671],\n        [2, 0, 0, -3, 607],\n        [2, 0, 2, -1, 596],\n        [2, -1, 1, -1, 491],\n        [2, 0, -2, 1, -451],\n        [0, 0, 3, -1, 439],\n        [2, 0, 2, 1, 422],\n        [2, 0, -3, -1, 421],\n        [2, 1, -1, 1, -366],\n        [2, 1, 0, 1, -351],\n        [4, 0, 0, 1, 331],\n        [2, -1, 1, 1, 315],\n        [2, -2, 0, -1, 302],\n        [0, 0, 1, 3, -283],\n        [2, 1, 1, -1, -229],\n        [1, 1, 0, -1, 223],\n        [1, 1, 0, 1, 223],\n        [0, 1, -2, -1, -220],\n        [2, 1, -1, -1, -220],\n        [1, 0, 1, 1, -185],\n        [2, -1, -2, -1, 181],\n        [0, 1, 2, 1, -177],\n        [4, 0, -2, -1, 176],\n        [4, -1, -1, -1, 166],\n        [1, 0, 1, -1, -164],\n        [4, 0, 1, -1, 132],\n        [1, 0, -1, -1, -119],\n        [4, -1, 0, -1, 115],\n        [2, -2, 0, 1, 107],\n    ],\n};\nA.MoonIllum = {\n    phaseAngleEq: function (a, b, c, d) {\n        a = A.MoonIllum._coselong(a, c);\n        return Math.atan2(d * Math.sin(Math.acos(a)), b - d * a);\n    },\n    phaseAngleEq2: function (a, b) {\n        return Math.acos(-A.MoonIllum._coselong(a, b));\n    },\n    illuminated: function (a) {\n        return (1 + Math.cos(a)) / 2;\n    },\n    positionAngle: function (a, b) {\n        var c = Math.cos(b.dec);\n        return Math.atan2(c * Math.sin(b.ra - a.ra), Math.sin(b.dec) * Math.cos(a.dec) - c * Math.sin(a.dec) * Math.cos(b.ra - a.ra));\n    },\n    _coselong: function (a, b) {\n        return Math.sin(b.dec) * Math.sin(a.dec) + Math.cos(b.dec) * Math.cos(a.dec) * Math.cos(b.ra - a.ra);\n    },\n};\nA.Nutation = {\n    nutation: function (a) {\n        a = a.jdeJ2000Century();\n        for (var b = (A.Math.horner(a, [297.85036, 445267.11148, -0.0019142, 1 / 189474]) * Math.PI) / 180, c = (A.Math.horner(a, [357.52772, 35999.05034, -1.603e-4, -1 / 3e5]) * Math.PI) / 180, d = (A.Math.horner(a, [134.96298, 477198.867398, 0.0086972, 1 / 5620]) * Math.PI) / 180, e = (A.Math.horner(a, [93.27191, 483202.017538, -0.0036825, 1 / 327270]) * Math.PI) / 180, f = (A.Math.horner(a, [125.04452, -1934.136261, 0.0020708, 1 / 45e4]) * Math.PI) / 180, g = 0, l = 0, m = A.Nutation.table22A.length - 1; 0 <= m; m--) {\n            var h = A.Nutation.table22A[m], p = h[0] * b + h[1] * c + h[2] * d + h[3] * e + h[4] * f, n = Math.cos(p);\n            g += Math.sin(p) * (h[5] + h[6] * a);\n            l += n * (h[7] + h[8] * a);\n        }\n        return { deltalng: (1e-4 / 3600) * g * (Math.PI / 180), deltaobliquity: (1e-4 / 3600) * l * (Math.PI / 180) };\n    },\n    nutationInRA: function (a) {\n        var b = A.Nutation.meanObliquityLaskar(a);\n        a = A.Nutation.nutation(a);\n        return a.deltalng * Math.cos(b + a.deltaobliquity);\n    },\n    trueObliquity: function (a) {\n        var b = A.Nutation.meanObliquityLaskar(a);\n        a = A.Nutation.nutation(a);\n        return b + a.deltaobliquity;\n    },\n    meanObliquity: function (a) {\n        return A.Math.horner(a.jdeJ2000Century(), [(84381.448 / 3600) * (Math.PI / 180), (-46.815 / 3600) * (Math.PI / 180), (-5.9e-4 / 3600) * (Math.PI / 180), (0.001813 / 3600) * (Math.PI / 180)]);\n    },\n    meanObliquityLaskar: function (a) {\n        return A.Math.horner(0.01 * a.jdeJ2000Century(), [\n            (84381.448 / 3600) * (Math.PI / 180),\n            (-4680.93 / 3600) * (Math.PI / 180),\n            (-1.55 / 3600) * (Math.PI / 180),\n            (1999.25 / 3600) * (Math.PI / 180),\n            (-51.38 / 3600) * (Math.PI / 180),\n            (-249.67 / 3600) * (Math.PI / 180),\n            (-39.05 / 3600) * (Math.PI / 180),\n            (7.12 / 3600) * (Math.PI / 180),\n            (27.87 / 3600) * (Math.PI / 180),\n            (5.79 / 3600) * (Math.PI / 180),\n            (2.45 / 3600) * (Math.PI / 180),\n        ]);\n    },\n    table22A: [\n        [0, 0, 0, 0, 1, -171996, -174.2, 92025, 8.9],\n        [-2, 0, 0, 2, 2, -13187, -1.6, 5736, -3.1],\n        [0, 0, 0, 2, 2, -2274, -0.2, 977, -0.5],\n        [0, 0, 0, 0, 2, 2062, 0.2, -895, 0.5],\n        [0, 1, 0, 0, 0, 1426, -3.4, 54, -0.1],\n        [0, 0, 1, 0, 0, 712, 0.1, -7, 0],\n        [-2, 1, 0, 2, 2, -517, 1.2, 224, -0.6],\n        [0, 0, 0, 2, 1, -386, -0.4, 200, 0],\n        [0, 0, 1, 2, 2, -301, 0, 129, -0.1],\n        [-2, -1, 0, 2, 2, 217, -0.5, -95, 0.3],\n        [-2, 0, 1, 0, 0, -158, 0, 0, 0],\n        [-2, 0, 0, 2, 1, 129, 0.1, -70, 0],\n        [0, 0, -1, 2, 2, 123, 0, -53, 0],\n        [2, 0, 0, 0, 0, 63, 0, 0, 0],\n        [0, 0, 1, 0, 1, 63, 0.1, -33, 0],\n        [2, 0, -1, 2, 2, -59, 0, 26, 0],\n        [0, 0, -1, 0, 1, -58, -0.1, 32, 0],\n        [0, 0, 1, 2, 1, -51, 0, 27, 0],\n        [-2, 0, 2, 0, 0, 48, 0, 0, 0],\n        [0, 0, -2, 2, 1, 46, 0, -24, 0],\n        [2, 0, 0, 2, 2, -38, 0, 16, 0],\n        [0, 0, 2, 2, 2, -31, 0, 13, 0],\n        [0, 0, 2, 0, 0, 29, 0, 0, 0],\n        [-2, 0, 1, 2, 2, 29, 0, -12, 0],\n        [0, 0, 0, 2, 0, 26, 0, 0, 0],\n        [-2, 0, 0, 2, 0, -22, 0, 0, 0],\n        [0, 0, -1, 2, 1, 21, 0, -10, 0],\n        [0, 2, 0, 0, 0, 17, -0.1, 0, 0],\n        [2, 0, -1, 0, 1, 16, 0, -8, 0],\n        [-2, 2, 0, 2, 2, -16, 0.1, 7, 0],\n        [0, 1, 0, 0, 1, -15, 0, 9, 0],\n        [-2, 0, 1, 0, 1, -13, 0, 7, 0],\n        [0, -1, 0, 0, 1, -12, 0, 6, 0],\n        [0, 0, 2, -2, 0, 11, 0, 0, 0],\n        [2, 0, -1, 2, 1, -10, 0, 5, 0],\n        [2, 0, 1, 2, 2, -8, 0, 3, 0],\n        [0, 1, 0, 2, 2, 7, 0, -3, 0],\n        [-2, 1, 1, 0, 0, -7, 0, 0, 0],\n        [0, -1, 0, 2, 2, -7, 0, 3, 0],\n        [2, 0, 0, 2, 1, -7, 0, 3, 0],\n        [2, 0, 1, 0, 0, 6, 0, 0, 0],\n        [-2, 0, 2, 2, 2, 6, 0, -3, 0],\n        [-2, 0, 1, 2, 1, 6, 0, -3, 0],\n        [2, 0, -2, 0, 1, -6, 0, 3, 0],\n        [2, 0, 0, 0, 1, -6, 0, 3, 0],\n        [0, -1, 1, 0, 0, 5, 0, 0, 0],\n        [-2, -1, 0, 2, 1, -5, 0, 3, 0],\n        [-2, 0, 0, 0, 1, -5, 0, 3, 0],\n        [0, 0, 2, 2, 1, -5, 0, 3, 0],\n        [-2, 0, 2, 0, 1, 4, 0, 0, 0],\n        [-2, 1, 0, 2, 1, 4, 0, 0, 0],\n        [0, 0, 1, -2, 0, 4, 0, 0, 0],\n        [-1, 0, 1, 0, 0, -4, 0, 0, 0],\n        [-2, 1, 0, 0, 0, -4, 0, 0, 0],\n        [1, 0, 0, 0, 0, -4, 0, 0, 0],\n        [0, 0, 1, 2, 0, 3, 0, 0, 0],\n        [0, 0, -2, 2, 2, -3, 0, 0, 0],\n        [-1, -1, 1, 0, 0, -3, 0, 0, 0],\n        [0, 1, 1, 0, 0, -3, 0, 0, 0],\n        [0, -1, 1, 2, 2, -3, 0, 0, 0],\n        [2, -1, -1, 2, 2, -3, 0, 0, 0],\n        [0, 0, 3, 2, 2, -3, 0, 0, 0],\n        [2, -1, 0, 2, 2, -3, 0, 0, 0],\n    ],\n};\nA.Parallax = {\n    earthsunParallax: ((8.794 / 60 / 60) * Math.PI) / 180,\n    horizontal: function (a) {\n        return ((8.794 / 60 / 60) * Math.PI) / 180 / a;\n    },\n    topocentric: function (a, b, c, d, e, f) {\n        e = A.Math.pMod(f - e - a.ra, 2 * Math.PI);\n        b = Math.sin(b);\n        f = Math.cos(e);\n        var g = Math.cos(a.dec);\n        e = Math.atan2(-d * b * Math.sin(e), g - d * b * f);\n        return new A.EqCoord(a.ra + e, Math.atan2((Math.sin(a.dec) - c * b) * Math.cos(e), g - d * b * f));\n    },\n    topocentric2: function (a, b, c, d, e, f) {\n        e = A.Math.pMod(f - e - a.ra, 2 * Math.PI);\n        f = Math.cos(a.dec);\n        return new A.EqCoord(a.ra + (-b * d * Math.sin(e)) / f, a.dec + -b * (c * f - d * Math.cos(e) * Math.sin(a.dec)));\n    },\n};\nA.Refraction = {\n    bennett: function (a) {\n        0 > a && (a = 0);\n        var b = Math.PI / 180;\n        return b / 60 / Math.tan(a + (7.31 * b * b) / (a + 4.4 * b));\n    },\n    bennett2: function (a) {\n        var b = Math.PI / 180, c = 60 / b, d = 0.06 / c;\n        c = 14.7 * c * b;\n        b *= 13;\n        a = A.Refraction.bennett(a);\n        return a - d * Math.sin(c * a + b);\n    },\n    saemundsson: function (a) {\n        var b = Math.PI / 180;\n        return (1.02 * b) / 60 / Math.tan(a + (10.3 * b * b) / (a + 5.11 * b));\n    },\n};\nA.Rise = {\n    meanRefraction: (0.5667 * Math.PI) / 180,\n    stdh0Stellar: (-0.5667 * Math.PI) / 180,\n    stdh0Solar: (-0.8333 * Math.PI) / 180,\n    stdh0LunarMean: (0.125 * Math.PI) / 180,\n    stdh0Lunar: function (a) {\n        return 0.7275 * a - A.Rise.meanRefraction;\n    },\n    circumpolar: function (a, b, c) {\n        a = (Math.sin(b) - Math.sin(a) * Math.sin(c)) / (Math.cos(a) * Math.cos(c));\n        return -1 > a || 1 < a ? null : a;\n    },\n    approxTransit: function (a, b, c) {\n        return (43200 * (c.ra + a.lng)) / Math.PI - b;\n    },\n    approxTimes: function (a, b, c, d) {\n        b = A.Rise.circumpolar(a.lat, b, d.dec);\n        if (!b)\n            return null;\n        b = (43200 * Math.acos(b)) / Math.PI;\n        a = (43200 * (d.ra + a.lng)) / Math.PI - c;\n        return { transit: A.Math.pMod(a, 86400), transitd: Math.floor(a / 86400), rise: A.Math.pMod(a - b, 86400), rised: Math.floor((a - b) / 86400), set: A.Math.pMod(a + b, 86400), setd: Math.floor((a + b) / 86400) };\n    },\n    times: function (a, b, c, d, e) {\n        function f(e) {\n            var f = A.Math.pMod(d + (360.985647 * e) / 360, 86400), g = e + b, h = A.Interp.interpolateX(l, g);\n            g = A.Interp.interpolateX(m, g);\n            f = (f * Math.PI) / 43200 - (a.lng + h);\n            h = Math.cos(g);\n            return A.Math.pMod(e + (((p * Math.sin(g) + n * h * Math.cos(f) - c) / (h * n * Math.sin(f))) * 43200) / Math.PI, 86400);\n        }\n        var g = A.Rise.approxTimes(a, c, d, e[1]);\n        if (!g)\n            return null;\n        var l = A.Interp.newLen3(-86400, 86400, [e[0].ra, e[1].ra, e[2].ra]), m = A.Interp.newLen3(-86400, 86400, [e[0].dec, e[1].dec, e[2].dec]);\n        e = d + (360.985647 * g.transit) / 360;\n        var h = A.Interp.interpolateX(l, g.transit + b);\n        g.transit = A.Math.pMod(g.transit - (e - (43200 * (a.lng + h)) / Math.PI), 86400);\n        var p = Math.sin(a.lat), n = Math.cos(a.lat);\n        g.rise = f(g.rise);\n        g.set = f(g.set);\n        return g;\n    },\n};\nA.Sidereal = {\n    iau82: [24110.54841, 8640184.812866, 0.093104, 6.2e-6],\n    jdToCFrac: function (a) {\n        a = A.Math.modF(a.jd + 0.5);\n        return [new A.JulianDay(a[0] - 0.5).jdJ2000Century(), a[1]];\n    },\n    mean: function (a) {\n        return A.Math.pMod(A.Sidereal._mean(a), 86400);\n    },\n    _mean: function (a) {\n        a = A.Sidereal._mean0UT(a);\n        return a.s + 86636.55536784 * a.f;\n    },\n    _meanInRA: function (a) {\n        a = A.Sidereal._mean0UT(a);\n        return (a.s * Math.PI) / 43200 + 2.0054758187 * a.f * Math.PI;\n    },\n    mean0UT: function (a) {\n        a = A.Sidereal._mean0UT(a);\n        return A.Math.pMod(a.s, 86400);\n    },\n    _mean0UT: function (a) {\n        a = A.Sidereal.jdToCFrac(a);\n        return { s: A.Math.horner(a[0], A.Sidereal.iau82), f: a[1] };\n    },\n    apparentInRa: function (a) {\n        var b = A.Sidereal._meanInRA(a);\n        a = A.Nutation.nutationInRA(a);\n        return A.Math.pMod(b + a, 2 * Math.PI);\n    },\n    apparent: function (a) {\n        var b = A.Sidereal._mean(a);\n        a = (648e3 * A.Nutation.nutationInRA(a)) / Math.PI / 15;\n        return A.Math.pMod(b + a, 86400);\n    },\n    apparentLocal: function (a, b) {\n        a = A.Sidereal.apparent(a);\n        return A.Math.pMod(a - (43200 * b) / Math.PI, 86400);\n    },\n    apparent0UT: function (a) {\n        var b = A.Math.modF(a.jd + 0.5);\n        a = A.Math.modF(a.jde + 0.5);\n        b = A.Math.horner((b[0] - 0.5 - A.J2000) / 36525, A.Sidereal.iau82) + 86636.55536784 * b[1];\n        a = (648e3 * A.Nutation.nutationInRA(new A.JulianDay(a[0]))) / Math.PI / 15;\n        return A.Math.pMod(b + a, 86400);\n    },\n};\nA.Solar = {\n    earthsunDelta: 149597870,\n    apparentEquatorial: function (a) {\n        var b = a.jdJ2000Century(), c = A.Solar.node(b);\n        b = A.Solar.apparentLongitude(b, c);\n        a = A.Nutation.meanObliquityLaskar(a) + ((0.00256 * Math.PI) / 180) * Math.cos(c);\n        c = Math.sin(b);\n        return new A.EqCoord(Math.atan2(Math.cos(a) * c, Math.cos(b)), Math.asin(Math.sin(a) * c));\n    },\n    apparentTopocentric: function (a, b, c) {\n        var d = A.Solar.apparentEquatorial(a), e = A.Globe.parallaxConstants(b.lat, b.h);\n        c || (c = A.Sidereal.apparentInRa(a));\n        return A.Parallax.topocentric2(d, A.Parallax.earthsunParallax, e.rhoslat, e.rhoclat, b.lng, c);\n    },\n    topocentricPosition: function (a, b, c) {\n        var d = A.Sidereal.apparentInRa(a);\n        a = A.Solar.apparentTopocentric(a, b, d);\n        b = A.Coord.eqToHz(a, b, d);\n        !0 === c && (b.alt += A.Refraction.bennett2(b.alt));\n        return { hz: b, eq: a };\n    },\n    approxTransit: function (a, b) {\n        a = a.startOfDay();\n        return A.Rise.approxTransit(b, A.Sidereal.apparent0UT(a), A.Solar.apparentTopocentric(a, b));\n    },\n    approxTimes: function (a, b) {\n        var c = a.startOfDay();\n        a = A.Solar.apparentTopocentric(c, b);\n        var d = A.Rise.stdh0Solar;\n        c = A.Sidereal.apparent0UT(c);\n        return A.Rise.approxTimes(b, d, c, a);\n    },\n    times: function (a, b) {\n        a = a.startOfDay();\n        var c = A.Solar.apparentTopocentric(new A.JulianDay(a.jd - 1, a.deltaT), b), d = A.Solar.apparentTopocentric(a, b), e = A.Solar.apparentTopocentric(new A.JulianDay(a.jd + 1, a.deltaT), b), f = A.Rise.stdh0Solar, g = A.Sidereal.apparent0UT(a);\n        return A.Rise.times(b, a.deltaT, f, g, [c, d, e]);\n    },\n    meanAnomaly: function (a) {\n        return (A.Math.horner(a, [357.52911, 35999.05029, -1.537e-4]) * Math.PI) / 180;\n    },\n    trueLongitude: function (a) {\n        var b = (A.Math.horner(a, [280.46646, 36000.76983, 3.032e-4]) * Math.PI) / 180, c = A.Solar.meanAnomaly(a);\n        a = ((A.Math.horner(a, [1.914602, -0.004817, -1.4e-5]) * Math.sin(c) + (0.019993 - 1.01e-4 * a) * Math.sin(2 * c) + 2.89e-4 * Math.sin(3 * c)) * Math.PI) / 180;\n        return { s: A.Math.pMod(b + a, 2 * Math.PI), v: A.Math.pMod(c + a, 2 * Math.PI) };\n    },\n    apparentLongitude: function (a, b) {\n        b || (b = A.Solar.node(a));\n        return A.Solar.trueLongitude(a).s - (0.00569 * Math.PI) / 180 - ((0.00478 * Math.PI) / 180) * Math.sin(b);\n    },\n    node: function (a) {\n        return ((125.04 - 1934.136 * a) * Math.PI) / 180;\n    },\n};\nA.Solistice = {\n    march: function (a) {\n        return 1e3 > a ? A.Solistice._eq(a, A.Solistice.mc0) : A.Solistice._eq(a - 2e3, A.Solistice.mc2);\n    },\n    june: function (a) {\n        return 1e3 > a ? A.Solistice._eq(a, A.Solistice.jc0) : A.Solistice._eq(a - 2e3, A.Solistice.jc2);\n    },\n    september: function (a) {\n        return 1e3 > a ? A.Solistice._eq(a, A.Solistice.sc0) : A.Solistice._eq(a - 2e3, A.Solistice.sc2);\n    },\n    december: function (a) {\n        return 1e3 > a ? A.Solistice._eq(a, A.Solistice.dc0) : A.Solistice._eq(a - 2e3, A.Solistice.dc2);\n    },\n    _eq: function (a, b) {\n        a = A.Math.horner(0.001 * a, b);\n        b = (a - A.J2000) / A.JulianCentury;\n        var c = ((35999.373 * Math.PI) / 180) * b - (2.47 * Math.PI) / 180;\n        c = 1 + 0.0334 * Math.cos(c) + 7e-4 * Math.cos(2 * c);\n        for (var d = 0, e = this.terms.length - 1; 0 <= e; e--) {\n            var f = this.terms[e];\n            d += f[0] * Math.cos(((f[1] + f[2] * b) * Math.PI) / 180);\n        }\n        return a + (1e-5 * d) / c;\n    },\n    mc0: [1721139.29189, 365242.1374, 0.06134, 0.00111, -7.1e-4],\n    jc0: [1721233.25401, 365241.72562, -0.05232, 0.00907, 2.5e-4],\n    sc0: [1721325.70455, 365242.49558, -0.11677, -0.00297, 7.4e-4],\n    dc0: [1721414.39987, 365242.88257, -0.00769, -0.00933, -6e-5],\n    mc2: [2451623.80984, 365242.37404, 0.05169, -0.00411, -5.7e-4],\n    jc2: [2451716.56767, 365241.62603, 0.00325, 0.00888, -3e-4],\n    sc2: [2451810.21715, 365242.01767, -0.11575, 0.00337, 7.8e-4],\n    dc2: [2451900.05952, 365242.74049, -0.06223, -0.00823, 3.2e-4],\n    terms: [\n        [485, 324.96, 1934.136],\n        [203, 337.23, 32964.467],\n        [199, 342.08, 20.186],\n        [182, 27.85, 445267.112],\n        [156, 73.14, 45036.886],\n        [136, 171.52, 22518.443],\n        [77, 222.54, 65928.934],\n        [74, 296.72, 3034.906],\n        [70, 243.58, 9037.513],\n        [58, 119.81, 33718.147],\n        [52, 297.17, 150.678],\n        [50, 21.02, 2281.226],\n        [45, 247.54, 29929.562],\n        [44, 325.15, 31555.956],\n        [29, 60.93, 4443.417],\n        [18, 155.12, 67555.328],\n        [17, 288.79, 4562.452],\n        [16, 198.04, 62894.029],\n        [14, 199.76, 31436.921],\n        [12, 95.39, 14577.848],\n        [12, 287.11, 31931.756],\n        [12, 320.81, 34777.259],\n        [9, 227.73, 1222.114],\n        [8, 15.45, 16859.074],\n    ],\n};\nexport { A };\n","import { MILLISECONDS_PER_DAY } from '../lib/constants';\nimport { dateFormat } from '../lib/external/dateFormat';\nexport const getDayOfYear = (date) => {\n    date = date || new Date();\n    const _isLeapYear = (date) => {\n        const year = date.getFullYear();\n        if ((year & 3) !== 0)\n            return false;\n        return year % 100 !== 0 || year % 400 === 0;\n    };\n    const dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n    const mn = date.getMonth();\n    const dn = date.getUTCDate();\n    let dayOfYear = dayCount[mn] + dn;\n    if (mn > 1 && _isLeapYear(date))\n        dayOfYear++;\n    return dayOfYear;\n};\nexport const jday = (year, mon, day, hr, minute, sec) => {\n    if (!year) {\n        const now = new Date();\n        const jDayStart = new Date(now.getFullYear(), 0, 0);\n        const jDayDiff = now.getDate() - jDayStart.getDate();\n        return Math.floor(jDayDiff / MILLISECONDS_PER_DAY);\n    }\n    else {\n        return 367.0 * year - Math.floor(7 * (year + Math.floor((mon + 9) / 12.0)) * 0.25) + Math.floor((275 * mon) / 9.0) + day + 1721013.5 + ((sec / 60.0 + minute) / 60.0 + hr) / 24.0;\n    }\n};\nexport const localToZulu = (date) => {\n    const dateStr = dateFormat(date, 'isoDateTime', true);\n    const dateArr = dateStr.split(' ');\n    date = new Date(dateArr[0] + 'T' + dateArr[1] + 'Z');\n    return date;\n};\nexport const dateFromJday = (year, day) => {\n    const date = new Date(year, 0); // initialize a date in `year-01-01`\n    return new Date(date.setDate(day));\n};\nexport const dateToLocalInIso = (date) => {\n    const offsetMs = date.getTimezoneOffset() * 60 * 1000;\n    const msLocal = date.getTime() - offsetMs;\n    const dateLocal = new Date(msLocal);\n    let iso = dateLocal.toISOString();\n    iso = iso.replace('T', ' ');\n    const isoLocal = iso.slice(0, 19) + ' ' + dateLocal.toString().slice(25, 31);\n    return isoLocal;\n};\n","import * as satellite from 'satellite.js';\nimport { SpaceObjectType } from '../api/SpaceObjectType';\nimport { DEG2RAD, PI, RAD2DEG } from '../lib/constants';\nimport { A } from '../lib/external/meuusjs';\nimport { defaultGd } from './positionCruncher';\n// TODO: create a way to determine if observerGd is using old satellite.js naming or lon,lat,alt\n// so that we can import satMath.ts instead\nexport const lookAnglesToEcf = (azDeg, elDeg, rng, obsLat, obsLong, obsAlt) => {\n    // site ecef in meters\n    const geodeticCoords = {\n        latitude: obsLat,\n        longitude: obsLong,\n        height: obsAlt,\n    };\n    const ecf = satellite.geodeticToEcf(geodeticCoords);\n    // some needed calculations\n    const slat = Math.sin(obsLat);\n    const slon = Math.sin(obsLong);\n    const clat = Math.cos(obsLat);\n    const clon = Math.cos(obsLong);\n    const azRad = DEG2RAD * azDeg;\n    const elRad = DEG2RAD * elDeg;\n    // az,el,range to sez convertion\n    const south = -rng * Math.cos(elRad) * Math.cos(azRad);\n    const east = rng * Math.cos(elRad) * Math.sin(azRad);\n    const zenith = rng * Math.sin(elRad);\n    const x = slat * clon * south + -slon * east + clat * clon * zenith + ecf.x;\n    const y = slat * slon * south + clon * east + clat * slon * zenith + ecf.y;\n    const z = -clat * south + slat * zenith + ecf.z;\n    return { x, y, z };\n};\n/* Returns Current Propagation Time */\nexport const propTime = (dynamicOffsetEpoch, staticOffset, propRate) => {\n    const now = new Date();\n    const dynamicPropOffset = now.getTime() - dynamicOffsetEpoch;\n    now.setTime(dynamicOffsetEpoch + staticOffset + dynamicPropOffset * propRate);\n    return now;\n};\nexport const checkSunExclusion = (sensor, j, gmst, now) => {\n    var jdo = new A.JulianDay(j); // now\n    var coord = A.EclCoordfromWgs84(0, 0, 0);\n    var coord2 = A.EclCoordfromWgs84(sensor.observerGd.latitude * RAD2DEG, sensor.observerGd.longitude * RAD2DEG, sensor.observerGd.height);\n    // AZ / EL Calculation\n    var tp = A.Solar.topocentricPosition(jdo, coord, false);\n    var tpRel = A.Solar.topocentricPosition(jdo, coord2, false);\n    const sunAz = tp.hz.az * RAD2DEG + (180 % 360);\n    const sunEl = (tp.hz.alt * RAD2DEG) % 360;\n    const sunElRel = (tpRel.hz.alt * RAD2DEG) % 360;\n    // Range Calculation\n    var T = new A.JulianDay(A.JulianDay.dateToJD(now)).jdJ2000Century();\n    let sunG = (A.Solar.meanAnomaly(T) * 180) / PI;\n    sunG = sunG % 360.0;\n    const sunR = 1.00014 - 0.01671 * Math.cos(sunG) - 0.00014 * Math.cos(2 * sunG);\n    const sunRange = (sunR * 149597870700) / 1000; // au to km conversion\n    // RAE to ECI\n    const sunECI = satellite.ecfToEci(lookAnglesToEcf(sunAz, sunEl, sunRange, 0, 0, 0), gmst);\n    return sensor.observerGd !== defaultGd && (sensor.type === SpaceObjectType.OPTICAL || sensor.type === SpaceObjectType.OBSERVER) && sunElRel > -6\n        ? [true, sunECI]\n        : [false, sunECI];\n};\n","/**\n * /*! /////////////////////////////////////////////////////////////////////////////\n *\n * main.js is the primary javascript file for keeptrack.space. It manages all user\n * interaction with the application.\n * http://keeptrack.space\n *\n * @Copyright (C) 2016-2021 Theodore Kruczek\n * @Copyright (C) 2020 Heather Kruczek\n * @Copyright (C) 2015-2016, James Yoder\n *\n * Original source code released by James Yoder at https://github.com/jeyoder/ThingsInSpace/\n * under the MIT License. Please reference http://keeptrack.space/license/thingsinspace.txt\n *\n * KeepTrack is free software: you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by the Free Software\n * Foundation, either version 3 of the License, or (at your option) any later version.\n *\n * KeepTrack is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License along with\n * KeepTrack. If not, see <http://www.gnu.org/licenses/>.\n *\n * /////////////////////////////////////////////////////////////////////////////\n */\nimport { SunCalc } from '@app/js/lib/suncalc.js';\nimport * as satellite from 'satellite.js';\nimport { SpaceObjectType } from '../api/SpaceObjectType';\nimport { DEG2RAD, GROUND_BUFFER_DISTANCE, MILLISECONDS_PER_DAY, PI, RAD2DEG, RADIUS_OF_EARTH, RADIUS_OF_SUN, STAR_DISTANCE, TAU } from '../lib/constants';\nimport { numeric } from '../lib/external/numeric';\nimport { jday } from '../timeManager/transforms';\nimport { checkSunExclusion, lookAnglesToEcf, propTime } from './positionCalculations';\nconst EMPTY_FLOAT32_ARRAY = new Float32Array(0);\nconst EMPTY_INT8_ARRAY = new Int8Array(0);\n/** ARRAYS */\nconst satCache = []; // Cache of Satellite Data from TLE.json and Static Data from variable.js\nlet satPos = EMPTY_FLOAT32_ARRAY; // Array of current Satellite and Static Positions\nlet satVel = EMPTY_FLOAT32_ARRAY; // Array of current Satellite and Static Velocities\nlet satInView = EMPTY_INT8_ARRAY; // Array of booleans showing if current Satellite is in view of Sensor\nlet satInSun = EMPTY_INT8_ARRAY; // Array of booleans showing if current Satellite is in sunlight\nlet sensorMarkerArray = [0]; // Array of Markers used to show sensor fence and FOV\nvar satelliteSelected = [-1]; // Array used to determine which satellites are selected\n/** TIME VARIABLES */\nlet globalPropagationRate = 1000; // Limits how often the propagation loop runs\nlet globalPropagationRateMultiplier = 1; // Used to slow down propagation rate on slow computers\nlet propagationRunning = false; // Prevent Propagation From Running Twice\n// let timeSyncRunning = false; // Prevent Time Sync Loop From Running Twice\nvar divisor = 1; // When running at high speeds, allow faster propagation\nlet dynamicOffsetEpoch = Date.now();\nlet staticOffset = 0;\nvar propRate = 1; // vars us run time faster (or slower) than normal\n// var propChangeTime = Date.now(); // vars us run time faster (or slower) than normal\n/** Settings */\nvar selectedSatFOV = 90; // FOV in Degrees\nvar isShowFOVBubble = false; // Flag for if FOV bubble is shown\nvar isShowSurvFence = false; // Flag for if fence markers are shown\nvar isResetFOVBubble = false;\nvar isShowSatOverfly = false;\nvar isResetSatOverfly = false;\nvar isMultiSensor = false;\nvar isIgnoreNonRadar = true;\nvar isSunlightView = false;\nvar isLowPerf = false;\nvar isResetMarker = false;\nvar isResetInView = false;\nlet fieldOfViewSetLength;\nlet len;\n/** OBSERVER VARIABLES */\nvar mSensor = [];\nexport const defaultGd = {\n    latitude: null,\n    longitude: 0,\n    height: 0,\n};\nconst emptySensor = {\n    observerGd: {\n        latitude: null,\n        longitude: 0,\n        height: 0,\n    },\n    alt: null,\n    country: '',\n    lat: null,\n    lon: null,\n    name: '',\n    obsmaxaz: 0,\n    obsmaxel: 0,\n    obsmaxrange: 0,\n    obsminaz: 0,\n    obsminel: 0,\n    obsminrange: 0,\n    shortName: '',\n    staticNum: 0,\n    sun: '',\n    volume: false,\n    zoom: '',\n};\nlet sensor = emptySensor;\n// Handles Incomming Messages to sat-cruncher from main thread\nonmessage = function (m) {\n    if (m.data.isSunlightView) {\n        isSunlightView = m.data.isSunlightView;\n        // if (isSunlightView == false) isResetSunlight = true;\n    }\n    if (m.data.satelliteSelected) {\n        satelliteSelected = m.data.satelliteSelected;\n        if (satelliteSelected[0] === -1) {\n            isResetSatOverfly = true;\n            if (isResetMarker == false)\n                isResetMarker = true;\n        }\n    }\n    if (m.data.isSlowCPUModeEnabled) {\n        globalPropagationRate = 2000;\n    }\n    if (m.data.isLowPerf) {\n        isLowPerf = true;\n    }\n    // //////////////////////////////\n    // SAT OVERFLY AND FOV BUBBLE\n    // /////////////////////////////\n    if (m.data.fieldOfViewSetLength) {\n        fieldOfViewSetLength = m.data.fieldOfViewSetLength;\n    }\n    if (m.data.isShowSatOverfly === 'enable') {\n        isShowSatOverfly = true;\n        selectedSatFOV = m.data.selectedSatFOV;\n    }\n    if (m.data.isShowSatOverfly === 'reset') {\n        isResetSatOverfly = true;\n        isShowSatOverfly = false;\n        if (isResetMarker == false)\n            isResetMarker = true;\n    }\n    if (m.data.isShowFOVBubble === 'enable') {\n        isShowFOVBubble = true;\n    }\n    if (m.data.isShowFOVBubble === 'reset') {\n        isResetFOVBubble = true;\n        isShowFOVBubble = false;\n        if (isResetMarker == false)\n            isResetMarker = true;\n    }\n    if (m.data.isShowSurvFence === 'enable') {\n        isShowSurvFence = true;\n        if (isResetMarker == false)\n            isResetMarker = true;\n    }\n    if (m.data.isShowSurvFence === 'disable') {\n        isShowSurvFence = false;\n        if (isResetMarker == false)\n            isResetMarker = true;\n    }\n    // ////////////////////////////////\n    if (m.data.multiSensor) {\n        isMultiSensor = true;\n        mSensor = m.data.sensor;\n        sensor = m.data.sensor;\n        globalPropagationRateMultiplier = 2;\n        if (isResetInView == false)\n            isResetInView = true;\n    }\n    else if (m.data.sensor) {\n        sensor = m.data.sensor[0];\n        if (m.data.setlatlong) {\n            if (m.data.resetObserverGd) {\n                globalPropagationRateMultiplier = 1;\n                sensor.observerGd = defaultGd;\n                mSensor = [];\n                if (isResetInView == false)\n                    isResetInView = true;\n            }\n            else {\n                globalPropagationRateMultiplier = 2;\n                // satellite.js requires this format - DONT use lat,lon,alt\n                // and we MUST do it (for now) because main thread is in lat,lon,alt\n                sensor.observerGd = {\n                    longitude: m.data.sensor[0].lon * DEG2RAD,\n                    latitude: m.data.sensor[0].lat * DEG2RAD,\n                    height: parseFloat(m.data.sensor[0].alt),\n                };\n                if (isResetInView == false)\n                    isResetInView = true;\n            }\n        }\n        isMultiSensor = false;\n    }\n    // const oldPropRate = propRate;\n    switch (m.data.typ) {\n        case 'offset':\n            staticOffset = m.data.staticOffset;\n            dynamicOffsetEpoch = m.data.dynamicOffsetEpoch;\n            propRate = m.data.propRate;\n            // Changing this to 0.1 caused issues...\n            divisor = 1;\n            return;\n        case 'satdata':\n            var satData = JSON.parse(m.data.dat);\n            len = satData.length;\n            var i = 0;\n            var extraData = [];\n            var satrec;\n            while (i < len) {\n                const extra = {\n                    lowAlt: null,\n                    inclination: null,\n                    eccentricity: null,\n                    raan: null,\n                    argPe: null,\n                    meanMotion: null,\n                    semiMajorAxis: null,\n                    semiMinorAxis: null,\n                    apogee: null,\n                    perigee: null,\n                    period: null,\n                };\n                satrec = null;\n                if (satData[i].static || satData[i].missile || satData[i].isRadarData) {\n                    satrec = satData[i];\n                    delete satrec['id'];\n                    extraData.push(extra);\n                    satCache.push(satrec);\n                    i++;\n                    continue;\n                }\n                else {\n                    satrec = satellite.twoline2satrec(\n                    // perform and store sat init calcs\n                    satData[i].TLE1, satData[i].TLE2);\n                    extra.lowAlt = satrec.isimp;\n                    extra.inclination = satrec.inclo; // rads\n                    extra.eccentricity = satrec.ecco;\n                    extra.raan = satrec.nodeo; // rads\n                    extra.argPe = satrec.argpo; // rads\n                    extra.meanMotion = (satrec.no * 60 * 24) / TAU; // convert rads/minute to rev/day\n                    extra.semiMajorAxis = Math.pow(8681663.653 / extra.meanMotion, 2 / 3);\n                    extra.semiMinorAxis = extra.semiMajorAxis * Math.sqrt(1 - Math.pow(extra.eccentricity, 2));\n                    extra.apogee = extra.semiMajorAxis * (1 + extra.eccentricity) - RADIUS_OF_EARTH;\n                    satrec.apogee = extra.apogee;\n                    extra.perigee = extra.semiMajorAxis * (1 - extra.eccentricity) - RADIUS_OF_EARTH;\n                    extra.period = 1440.0 / extra.meanMotion;\n                    extraData.push(extra);\n                    delete satrec['id'];\n                    satCache.push(satrec);\n                    i++;\n                }\n            }\n            satPos = new Float32Array(len * 3);\n            satVel = new Float32Array(len * 3);\n            satInView = new Int8Array(len);\n            satInSun = new Int8Array(len);\n            postMessage({\n                extraData: JSON.stringify(extraData),\n            });\n            satData = null;\n            break;\n        case 'satEdit':\n            satrec = satellite.twoline2satrec(\n            // replace old TLEs\n            m.data.TLE1, m.data.TLE2);\n            satCache[m.data.id] = Object.assign(Object.assign({}, satCache[m.data.id]), satrec);\n            extraData = [];\n            // eslint-disable-next-line no-case-declarations\n            const extra = {\n                lowAlt: null,\n                inclination: null,\n                eccentricity: null,\n                raan: null,\n                argPe: null,\n                meanMotion: null,\n                semiMajorAxis: null,\n                semiMinorAxis: null,\n                apogee: null,\n                perigee: null,\n                period: null,\n                TLE1: null,\n                TLE2: null,\n            };\n            // keplerian elements\n            extra.inclination = satrec.inclo; // rads\n            extra.eccentricity = satrec.ecco;\n            extra.raan = satrec.nodeo; // rads\n            extra.argPe = satrec.argpo; // rads\n            extra.meanMotion = (satrec.no * 60 * 24) / (2 * PI); // convert rads/minute to rev/day\n            // fun other data\n            extra.semiMajorAxis = Math.pow(8681663.653 / extra.meanMotion, 2 / 3);\n            extra.semiMinorAxis = extra.semiMajorAxis * Math.sqrt(1 - Math.pow(extra.eccentricity, 2));\n            extra.apogee = extra.semiMajorAxis * (1 + extra.eccentricity) - RADIUS_OF_EARTH;\n            extra.perigee = extra.semiMajorAxis * (1 - extra.eccentricity) - RADIUS_OF_EARTH;\n            extra.period = 1440.0 / extra.meanMotion;\n            extra.TLE1 = m.data.TLE1;\n            extra.TLE2 = m.data.TLE2;\n            extraData.push(extra);\n            postMessage({\n                extraUpdate: true,\n                extraData: JSON.stringify(extraData),\n                satId: m.data.id,\n            });\n            break;\n        case 'newMissile':\n            satCache[m.data.id] = m.data;\n            break;\n        case 'timeSync':\n            // propChangeTime = new Date(m.data.time);\n            break;\n        default:\n            console.warn('Unknown message typ: ' + m.data.typ);\n            break;\n    }\n    // Don't start before getting satData!\n    if (!propagationRunning && m.data.typ === 'satdata') {\n        len = -1; // propagteCruncher needs to start at -1 not 0\n        propagateCruncher();\n        propagationRunning = true;\n    }\n    // if (!timeSyncRunning) {\n    //   timeSyncLoop();\n    // }\n};\n// const timeSyncLoop = () => {\n//   const postMessageArray = {\n//     typ: 'timeSync',\n//     time: propTime().getTime(),\n//     propRate: propRate,\n//     staticOffset: staticOffset,\n//     dynamicOffsetEpoch: dynamicOffsetEpoch,\n//   };\n//   postMessage(postMessageArray);\n//   setTimeout(timeSyncLoop, 250);\n// };\n// Prevent Memory Leak by declaring variables outside of function\nvar propagateCruncher = () => {\n    const now = propTime(dynamicOffsetEpoch, staticOffset, propRate);\n    const j = jday(now.getUTCFullYear(), now.getUTCMonth() + 1, // Note, this function requires months in range 1-12.\n    now.getUTCDate(), now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds()) +\n        now.getUTCMilliseconds() * MILLISECONDS_PER_DAY;\n    const gmst = satellite.gstime(j);\n    let isSunExclusion = false;\n    let sunECI = { x: 0, y: 0, z: 0 };\n    if (isSunlightView && !isMultiSensor) {\n        [isSunExclusion, sunECI] = checkSunExclusion(sensor, j, gmst, now);\n    }\n    const j2 = jday(now.getUTCFullYear(), now.getUTCMonth() + 1, // Note, this function requires months in range 1-12.\n    now.getUTCDate(), now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds() + 1) +\n        now.getUTCMilliseconds() * MILLISECONDS_PER_DAY;\n    const gmstNext = satellite.gstime(j2);\n    len = satCache.length - 1;\n    if ((!isResetSatOverfly && !isShowSatOverfly && !isResetFOVBubble && !isShowFOVBubble) || isLowPerf) {\n        len -= fieldOfViewSetLength;\n    }\n    let i = -1;\n    let positionEcf, lookangles, azimuth, elevation, rangeSat;\n    let x, y, z;\n    let cosLat, sinLat, cosLon, sinLon;\n    let curMissivarTime;\n    let s, m, tLen, t;\n    let pv;\n    let sat;\n    let isSensorChecked = false;\n    let az, el, rng, pos;\n    let q, q2;\n    let semiDiamEarth, semiDiamSun, theta;\n    let starPosition;\n    let snum;\n    let lat, long;\n    let satSelPosX, satSelPosY, satSelPosZ, satSelPosEcf, satSelPos, satSelGeodetic, satHeight, satSelPosEarth, deltaLat, deltaLatInt, deltaLon, deltaLonInt;\n    while (i < len) {\n        i++; // At the beginning so i starts at 0\n        sat = satCache[i];\n        if (sat.satnum) {\n            // Skip reentries\n            if (sat.skip)\n                continue;\n            m = (j - sat.jdsatepoch) * 1440.0; // 1440 = minutes_per_day\n            pv = satellite.sgp4(sat, m);\n            try {\n                satPos[i * 3] = pv.position.x;\n                satPos[i * 3 + 1] = pv.position.y;\n                satPos[i * 3 + 2] = pv.position.z;\n                satVel[i * 3] = pv.velocity.x;\n                satVel[i * 3 + 1] = pv.velocity.y;\n                satVel[i * 3 + 2] = pv.velocity.z;\n                // Make sure that objects with an imprecise orbit or an old elset\n                // are not failing to propagate\n                if (sat.isimp || m / 1440 > 30) {\n                    const a = 6378.137;\n                    const b = 6356.7523142;\n                    const R = Math.sqrt(pv.position.x * pv.position.x + pv.position.y * pv.position.y);\n                    const f = (a - b) / a;\n                    const e2 = 2 * f - f * f;\n                    let lon = Math.atan2(pv.position.y, pv.position.x) - gmst;\n                    while (lon < -PI) {\n                        lon += TAU;\n                    }\n                    while (lon > PI) {\n                        lon -= TAU;\n                    }\n                    const kmax = 20;\n                    let k = 0;\n                    let lat = Math.atan2(pv.position.z, Math.sqrt(pv.position.x * pv.position.x + pv.position.y * pv.position.y));\n                    let C;\n                    while (k < kmax) {\n                        C = 1 / Math.sqrt(1 - e2 * (Math.sin(lat) * Math.sin(lat)));\n                        lat = Math.atan2(pv.position.z + a * C * e2 * Math.sin(lat), R);\n                        k += 1;\n                    }\n                    const alt = R / Math.cos(lat) - a * C;\n                    if (alt > sat.apogee + 1000) {\n                        throw new Error('Impossible orbit');\n                    }\n                }\n                // Skip Calculating Lookangles if No Sensor is Selected\n                if (!isSensorChecked) {\n                    if (sensor.observerGd !== defaultGd && !isMultiSensor) {\n                        positionEcf = satellite.eciToEcf(pv.position, gmst); // pv.position is called positionEci originally\n                        lookangles = satellite.ecfToLookAngles(sensor.observerGd, positionEcf);\n                        azimuth = lookangles.azimuth;\n                        elevation = lookangles.elevation;\n                        rangeSat = lookangles.rangeSat;\n                    }\n                    else {\n                        isSensorChecked = true;\n                    }\n                }\n            }\n            catch (e) {\n                // This is probably a reentry and should be skipped from now on.\n                satCache[i].skip = true;\n                satPos[i * 3] = 0;\n                satPos[i * 3 + 1] = 0;\n                satPos[i * 3 + 2] = 0;\n                satVel[i * 3] = 0;\n                satVel[i * 3 + 1] = 0;\n                satVel[i * 3 + 2] = 0;\n                positionEcf = 0;\n                lookangles = 0;\n                azimuth = 0;\n                elevation = 0;\n                rangeSat = 0;\n            }\n            satInView[i] = 0; // 0 = FALSE - Default in case no sensor selected\n            satInSun[i] = 2; // Default in case\n            if (isSunlightView) {\n                semiDiamEarth = Math.asin(RADIUS_OF_EARTH / Math.sqrt(Math.pow(-satPos[i * 3], 2) + Math.pow(-satPos[i * 3 + 1], 2) + Math.pow(-satPos[i * 3 + 2], 2))) * RAD2DEG;\n                semiDiamSun = Math.asin(RADIUS_OF_SUN / Math.sqrt(Math.pow(-satPos[i * 3] + sunECI.x, 2) + Math.pow(-satPos[i * 3 + 1] + sunECI.y, 2) + Math.pow(-satPos[i * 3 + 2] + sunECI.z, 2))) * RAD2DEG;\n                // Angle between earth and sun\n                theta =\n                    Math.acos(numeric.dot([-satPos[i * 3], -satPos[i * 3 + 1], -satPos[i * 3 + 2]], [-satPos[i * 3] + sunECI.x, -satPos[i * 3 + 1] + sunECI.y, -satPos[i * 3 + 2] + sunECI.z]) /\n                        (Math.sqrt(Math.pow(-satPos[i * 3], 2) + Math.pow(-satPos[i * 3 + 1], 2) + Math.pow(-satPos[i * 3 + 2], 2)) *\n                            Math.sqrt(Math.pow(-satPos[i * 3] + sunECI.x, 2) + Math.pow(-satPos[i * 3 + 1] + sunECI.y, 2) + Math.pow(-satPos[i * 3 + 2] + sunECI.z, 2)))) * RAD2DEG;\n                if (semiDiamEarth > semiDiamSun && theta < semiDiamEarth - semiDiamSun) {\n                    satInSun[i] = 0; // Umbral\n                }\n                // var isPenumbral = false;\n                if (Math.abs(semiDiamEarth - semiDiamSun) < theta && theta < semiDiamEarth + semiDiamSun) {\n                    satInSun[i] = 1; // Penumbral\n                }\n                if (semiDiamSun > semiDiamEarth) {\n                    satInSun[i] = 1; // Penumbral\n                }\n                if (theta < semiDiamSun - semiDiamEarth) {\n                    satInSun[i] = 1; // Penumbral\n                }\n            }\n            if (sensor.observerGd !== defaultGd && !isSunExclusion) {\n                if (isMultiSensor) {\n                    for (s = 0; s < mSensor.length; s++) {\n                        // Skip satellites in the sun if you are an optical sensor\n                        if (!(sensor.type == SpaceObjectType.OPTICAL && satInSun[i] == 0)) {\n                            if (satInView[i])\n                                break;\n                            sensor = mSensor[s];\n                            // satellite.js requires this format - DONT use lon,lat,alt\n                            sensor.observerGd = {\n                                longitude: sensor.lon * DEG2RAD,\n                                latitude: sensor.lat * DEG2RAD,\n                                height: sensor.alt * 1, // Convert from string\n                            };\n                            try {\n                                positionEcf = satellite.eciToEcf(pv.position, gmst); // pv.position is called positionEci originally\n                                lookangles = satellite.ecfToLookAngles(sensor.observerGd, positionEcf);\n                            }\n                            catch (e) {\n                                continue;\n                            }\n                            azimuth = lookangles.azimuth;\n                            elevation = lookangles.elevation;\n                            rangeSat = lookangles.rangeSat;\n                            azimuth *= RAD2DEG;\n                            elevation *= RAD2DEG;\n                            if (sensor.obsminaz > sensor.obsmaxaz) {\n                                if (((azimuth >= sensor.obsminaz || azimuth <= sensor.obsmaxaz) && elevation >= sensor.obsminel && elevation <= sensor.obsmaxel && rangeSat <= sensor.obsmaxrange && rangeSat >= sensor.obsminrange) ||\n                                    ((azimuth >= sensor.obsminaz2 || azimuth <= sensor.obsmaxaz2) && elevation >= sensor.obsminel2 && elevation <= sensor.obsmaxel2 && rangeSat <= sensor.obsmaxrange2 && rangeSat >= sensor.obsminrange2)) {\n                                    satInView[i] = 1; // 1 = TRUE\n                                }\n                            }\n                            else {\n                                if ((azimuth >= sensor.obsminaz && azimuth <= sensor.obsmaxaz && elevation >= sensor.obsminel && elevation <= sensor.obsmaxel && rangeSat <= sensor.obsmaxrange && rangeSat >= sensor.obsminrange) ||\n                                    (azimuth >= sensor.obsminaz2 && azimuth <= sensor.obsmaxaz2 && elevation >= sensor.obsminel2 && elevation <= sensor.obsmaxel2 && rangeSat <= sensor.obsmaxrange2 && rangeSat >= sensor.obsminrange2)) {\n                                    satInView[i] = 1; // 1 = TRUE\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (!(sensor.type === SpaceObjectType.OPTICAL && satInSun[i] == 0)) {\n                        azimuth *= RAD2DEG;\n                        elevation *= RAD2DEG;\n                        if (sensor.obsminaz > sensor.obsmaxaz) {\n                            if (((azimuth >= sensor.obsminaz || azimuth <= sensor.obsmaxaz) && elevation >= sensor.obsminel && elevation <= sensor.obsmaxel && rangeSat <= sensor.obsmaxrange && rangeSat >= sensor.obsminrange) ||\n                                ((azimuth >= sensor.obsminaz2 || azimuth <= sensor.obsmaxaz2) && elevation >= sensor.obsminel2 && elevation <= sensor.obsmaxel2 && rangeSat <= sensor.obsmaxrange2 && rangeSat >= sensor.obsminrange2)) {\n                                satInView[i] = 1; // 1 = TRUE\n                            }\n                        }\n                        else {\n                            if ((azimuth >= sensor.obsminaz && azimuth <= sensor.obsmaxaz && elevation >= sensor.obsminel && elevation <= sensor.obsmaxel && rangeSat <= sensor.obsmaxrange && rangeSat >= sensor.obsminrange) ||\n                                (azimuth >= sensor.obsminaz2 && azimuth <= sensor.obsmaxaz2 && elevation >= sensor.obsminel2 && elevation <= sensor.obsmaxel2 && rangeSat <= sensor.obsmaxrange2 && rangeSat >= sensor.obsminrange2)) {\n                                satInView[i] = 1; // 1 = TRUE\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else if (satCache[i].isRadarData) {\n            if (satCache[i].skip)\n                continue;\n            satCache[i].skip = true;\n            satPos[i * 3] = 0;\n            satPos[i * 3 + 1] = 0;\n            satPos[i * 3 + 2] = 0;\n            satVel[i * 3] = 0;\n            satVel[i * 3 + 1] = 0;\n            satVel[i * 3 + 2] = 0;\n        }\n        else if (satCache[i].static && !satCache[i].marker) {\n            if (satCache[i].type === SpaceObjectType.STAR) {\n                // INFO: 0 Latitude returns upside down results. Using 180 looks right, but more verification needed.\n                // WARNING: 180 and 0 really matter...unclear why\n                starPosition = SunCalc.getStarPosition(now, 180, 0, satCache[i]);\n                starPosition = lookAnglesToEcf(starPosition.azimuth * RAD2DEG, starPosition.altitude * RAD2DEG, STAR_DISTANCE, 0, 0, 0);\n                // Reduce Random Jitter by Requiring New Positions to be Similar to Old\n                // THIS MIGHT BE A HORRIBLE\n                if (satPos[i * 3] == 0 || (satPos[i * 3] - starPosition.x < 0.1 && satPos[i * 3] - starPosition.x > -0.1))\n                    satPos[i * 3] = starPosition.x;\n                if (satPos[i * 3 + 1] == 0 || (satPos[i * 3 + 1] - starPosition.y < 0.1 && satPos[i * 3 + 1] - starPosition.y > -0.1))\n                    satPos[i * 3 + 1] = starPosition.y;\n                if (satPos[i * 3 + 2] == 0 || (satPos[i * 3 + 2] - starPosition.z < 0.1 && satPos[i * 3 + 2] - starPosition.z > -0.1))\n                    satPos[i * 3 + 2] = starPosition.z;\n            }\n            else {\n                cosLat = Math.cos(satCache[i].lat * DEG2RAD);\n                sinLat = Math.sin(satCache[i].lat * DEG2RAD);\n                cosLon = Math.cos(satCache[i].lon * DEG2RAD + gmst);\n                sinLon = Math.sin(satCache[i].lon * DEG2RAD + gmst);\n                satPos[i * 3] = (RADIUS_OF_EARTH + GROUND_BUFFER_DISTANCE + satCache[i].alt) * cosLat * cosLon; // 6371 is radius of earth\n                satPos[i * 3 + 1] = (RADIUS_OF_EARTH + GROUND_BUFFER_DISTANCE + satCache[i].alt) * cosLat * sinLon;\n                satPos[i * 3 + 2] = (RADIUS_OF_EARTH + GROUND_BUFFER_DISTANCE + satCache[i].alt) * sinLat;\n            }\n            satVel[i * 3] = 0;\n            satVel[i * 3 + 1] = 0;\n            satVel[i * 3 + 2] = 0;\n        }\n        else if (satCache[i].missile) {\n            if (!satCache[i].active) {\n                continue;\n            } // Skip inactive missiles\n            tLen = satCache[i].altList.length;\n            for (t = 0; t < tLen; t++) {\n                if (satCache[i].startTime * 1 + t * 1000 >= now.getTime()) {\n                    curMissivarTime = t;\n                    break;\n                }\n            }\n            satCache[i].lastTime = satCache[i].lastTime >= 0 ? satCache[i].lastTime : 0;\n            cosLat = Math.cos(satCache[i].latList[satCache[i].lastTime + 1] * DEG2RAD);\n            sinLat = Math.sin(satCache[i].latList[satCache[i].lastTime + 1] * DEG2RAD);\n            cosLon = Math.cos(satCache[i].lonList[satCache[i].lastTime + 1] * DEG2RAD + gmstNext);\n            sinLon = Math.sin(satCache[i].lonList[satCache[i].lastTime + 1] * DEG2RAD + gmstNext);\n            if (satCache[i].lastTime == 0) {\n                satVel[i * 3] = 0;\n                satVel[i * 3 + 1] = 0;\n                satVel[i * 3 + 2] = 0;\n            }\n            else if (satVel[i * 3] == 0 && satVel[i * 3 + 1] == 0 && satVel[i * 3 + 2] == 0) {\n                satVel[i * 3] = (6371 + satCache[i].altList[satCache[i].lastTime + 1]) * cosLat * cosLon - satPos[i * 3];\n                satVel[i * 3 + 1] = (6371 + satCache[i].altList[satCache[i].lastTime + 1]) * cosLat * sinLon - satPos[i * 3 + 1];\n                satVel[i * 3 + 2] = (6371 + satCache[i].altList[satCache[i].lastTime + 1]) * sinLat - satPos[i * 3 + 2];\n            }\n            else {\n                satVel[i * 3] += (6371 + satCache[i].altList[satCache[i].lastTime + 1]) * cosLat * cosLon - satPos[i * 3];\n                satVel[i * 3 + 1] += (6371 + satCache[i].altList[satCache[i].lastTime + 1]) * cosLat * sinLon - satPos[i * 3 + 1];\n                satVel[i * 3 + 2] += (6371 + satCache[i].altList[satCache[i].lastTime + 1]) * sinLat - satPos[i * 3 + 2];\n                satVel[i * 3] *= 0.5;\n                satVel[i * 3 + 1] *= 0.5;\n                satVel[i * 3 + 2] *= 0.5;\n            }\n            cosLat = Math.cos(satCache[i].latList[curMissivarTime] * DEG2RAD);\n            sinLat = Math.sin(satCache[i].latList[curMissivarTime] * DEG2RAD);\n            cosLon = Math.cos(satCache[i].lonList[curMissivarTime] * DEG2RAD + gmst);\n            sinLon = Math.sin(satCache[i].lonList[curMissivarTime] * DEG2RAD + gmst);\n            satPos[i * 3] = (6371 + satCache[i].altList[curMissivarTime]) * cosLat * cosLon;\n            satPos[i * 3 + 1] = (6371 + satCache[i].altList[curMissivarTime]) * cosLat * sinLon;\n            satPos[i * 3 + 2] = (6371 + satCache[i].altList[curMissivarTime]) * sinLat;\n            satCache[i].lastTime = curMissivarTime;\n            x = satPos[i * 3];\n            y = satPos[i * 3 + 1];\n            z = satPos[i * 3 + 2];\n            positionEcf = satellite.eciToEcf({ x: x, y: y, z: z }, gmst);\n            if (satellite.eciToGeodetic({ x: x, y: y, z: z }, gmst).height <= 150 && satCache[i].missile === false) {\n                console.error(i);\n                satCache[i].skip = true;\n            }\n            lookangles = satellite.ecfToLookAngles(sensor.observerGd, positionEcf);\n            azimuth = lookangles.azimuth * RAD2DEG;\n            elevation = lookangles.elevation * RAD2DEG;\n            rangeSat = lookangles.rangeSat;\n            satInView[i] = 0; // 0 = FALSE - Default in case no sensor selected\n            if (sensor.obsminaz > sensor.obsmaxaz) {\n                if (((azimuth >= sensor.obsminaz || azimuth <= sensor.obsmaxaz) && elevation >= sensor.obsminel && elevation <= sensor.obsmaxel && rangeSat <= sensor.obsmaxrange && rangeSat >= sensor.obsminrange) ||\n                    ((azimuth >= sensor.obsminaz2 || azimuth <= sensor.obsmaxaz2) && elevation >= sensor.obsminel2 && elevation <= sensor.obsmaxel2 && rangeSat <= sensor.obsmaxrange2 && rangeSat >= sensor.obsminrange2)) {\n                    satInView[i] = 1; // 1 = TRUE\n                }\n            }\n            else {\n                if ((azimuth >= sensor.obsminaz && azimuth <= sensor.obsmaxaz && elevation >= sensor.obsminel && elevation <= sensor.obsmaxel && rangeSat <= sensor.obsmaxrange && rangeSat >= sensor.obsminrange) ||\n                    (azimuth >= sensor.obsminaz2 && azimuth <= sensor.obsmaxaz2 && elevation >= sensor.obsminel2 && elevation <= sensor.obsmaxel2 && rangeSat <= sensor.obsmaxrange2 && rangeSat >= sensor.obsminrange2)) {\n                    satInView[i] = 1; // 1 = TRUE\n                }\n            }\n        }\n        else if (isShowFOVBubble || isResetFOVBubble) {\n            // //////////////////////////////////\n            // FOV Bubble Drawing Code - START\n            // //////////////////////////////////\n            if (!isMultiSensor && sensor.observerGd !== defaultGd) {\n                mSensor[0] = sensor;\n                mSensor.length = 1;\n            }\n            sensorMarkerArray = [];\n            for (s = 0; s < mSensor.length + 1; s++) {\n                sensorMarkerArray.push(i);\n                // We intentionally go past the last sensor so we can record the last marker's id\n                if (s == mSensor.length)\n                    break;\n                sensor = mSensor[s];\n                // satellite.js requires this format - DONT use lon,lat,alt\n                sensor.observerGd = {\n                    longitude: sensor.lon * DEG2RAD,\n                    latitude: sensor.lat * DEG2RAD,\n                    height: sensor.alt * 1, // Convert from string\n                };\n                if (satCache[i].marker) {\n                    satPos[i * 3] = 0;\n                    satPos[i * 3 + 1] = 0;\n                    satPos[i * 3 + 2] = 0;\n                    satVel[i * 3] = 0;\n                    satVel[i * 3 + 1] = 0;\n                    satVel[i * 3 + 2] = 0;\n                    if (isResetFOVBubble) {\n                        continue;\n                    }\n                    if (!isShowFOVBubble)\n                        continue;\n                    if (sensor.observerGd === defaultGd)\n                        continue;\n                    // Ignore Optical and Mechanical Sensors When showing Many\n                    if (isIgnoreNonRadar) {\n                        if (mSensor.length > 1 && sensor.type === SpaceObjectType.OPTICAL)\n                            continue;\n                        if (mSensor.length > 1 && sensor.type === SpaceObjectType.OBSERVER)\n                            continue;\n                        if (mSensor.length > 1 && sensor.type === SpaceObjectType.MECHANICAL)\n                            continue;\n                    }\n                    // az, el, rng, pos;\n                    q = Math.abs(sensor.obsmaxaz - sensor.obsminaz) < 30 ? 0.5 : 3;\n                    q2 = sensor.obsmaxrange - sensor.obsminrange < 720 ? 125 : 30;\n                    // Don't show anything but the floor if in surveillance only mode\n                    // Unless it is a volume search radar\n                    if (!isShowSurvFence) {\n                        // Only on non-360 FOV\n                        if (sensor.obsminaz !== 0 && sensor.obsmaxaz !== 360) {\n                            // //////////////////////////////////\n                            // Min AZ FOV\n                            // //////////////////////////////////\n                            for (rng = Math.max(sensor.obsminrange, 100); rng < Math.min(sensor.obsmaxrange, 60000); rng += Math.min(sensor.obsmaxrange, 60000) / q2) {\n                                az = sensor.obsminaz;\n                                for (el = sensor.obsminel; el < sensor.obsmaxel; el += q) {\n                                    pos = satellite.ecfToEci(lookAnglesToEcf(az, el, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                                    try {\n                                        satCache[i].active = true;\n                                        satPos[i * 3] = pos.x;\n                                        satPos[i * 3 + 1] = pos.y;\n                                        satPos[i * 3 + 2] = pos.z;\n                                        satVel[i * 3] = 0;\n                                        satVel[i * 3 + 1] = 0;\n                                        satVel[i * 3 + 2] = 0;\n                                        i++;\n                                    }\n                                    catch (e) {\n                                        console.log(e);\n                                    }\n                                }\n                            }\n                            // //////////////////////////////////\n                            // Max AZ FOV\n                            // //////////////////////////////////\n                            for (rng = Math.max(sensor.obsminrange, 100); rng < Math.min(sensor.obsmaxrange, 60000); rng += Math.min(sensor.obsmaxrange, 60000) / q2) {\n                                az = sensor.obsmaxaz;\n                                for (el = sensor.obsminel; el < sensor.obsmaxel; el += q) {\n                                    pos = satellite.ecfToEci(lookAnglesToEcf(az, el, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                                    satCache[i].active = true;\n                                    satPos[i * 3] = pos.x;\n                                    satPos[i * 3 + 1] = pos.y;\n                                    satPos[i * 3 + 2] = pos.z;\n                                    satVel[i * 3] = 0;\n                                    satVel[i * 3 + 1] = 0;\n                                    satVel[i * 3 + 2] = 0;\n                                    i++;\n                                }\n                            }\n                            if (typeof sensor.obsminaz2 != 'undefined') {\n                                ////////////////////////////////\n                                // Cobra DANE Types\n                                ////////////////////////////////\n                                // //////////////////////////////////\n                                // Min AZ 2 FOV\n                                // //////////////////////////////////\n                                for (rng = Math.max(sensor.obsminrange, 100); rng < Math.min(sensor.obsmaxrange, 60000); rng += Math.min(sensor.obsmaxrange, 60000) / q2) {\n                                    az = sensor.obsminaz2;\n                                    for (el = sensor.obsminel2; el < sensor.obsmaxel2; el += q) {\n                                        pos = satellite.ecfToEci(lookAnglesToEcf(az, el, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                                        satCache[i].active = true;\n                                        satPos[i * 3] = pos.x;\n                                        satPos[i * 3 + 1] = pos.y;\n                                        satPos[i * 3 + 2] = pos.z;\n                                        satVel[i * 3] = 0;\n                                        satVel[i * 3 + 1] = 0;\n                                        satVel[i * 3 + 2] = 0;\n                                        i++;\n                                    }\n                                }\n                                // //////////////////////////////////\n                                // Max AZ 2 FOV\n                                // //////////////////////////////////\n                                for (rng = Math.max(sensor.obsminrange, 100); rng < Math.min(sensor.obsmaxrange, 60000); rng += Math.min(sensor.obsmaxrange, 60000) / q2) {\n                                    az = sensor.obsmaxaz2;\n                                    for (el = sensor.obsminel2; el < sensor.obsmaxel2; el += q) {\n                                        pos = satellite.ecfToEci(lookAnglesToEcf(az, el, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                                        satCache[i].active = true;\n                                        satPos[i * 3] = pos.x;\n                                        satPos[i * 3 + 1] = pos.y;\n                                        satPos[i * 3 + 2] = pos.z;\n                                        satVel[i * 3] = 0;\n                                        satVel[i * 3 + 1] = 0;\n                                        satVel[i * 3 + 2] = 0;\n                                        i++;\n                                    }\n                                }\n                            }\n                            // Only on 360 FOV\n                        }\n                        else {\n                            for (rng = Math.max(sensor.obsminrange, 100); rng < Math.min(sensor.obsmaxrange, 60000); rng += Math.min(sensor.obsmaxrange, 60000) / q2) {\n                                el = sensor.obsmaxel;\n                                for (az = sensor.obsminaz; az < sensor.obsmaxaz; az += q) {\n                                    pos = satellite.ecfToEci(lookAnglesToEcf(az, el, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                                    satCache[i].active = true;\n                                    satPos[i * 3] = pos.x;\n                                    satPos[i * 3 + 1] = pos.y;\n                                    satPos[i * 3 + 2] = pos.z;\n                                    satVel[i * 3] = 0;\n                                    satVel[i * 3 + 1] = 0;\n                                    satVel[i * 3 + 2] = 0;\n                                    i++;\n                                }\n                            }\n                        }\n                    }\n                    // //////////////////////////////////\n                    // Top of FOV for Small FOV\n                    // //////////////////////////////////\n                    if (sensor.obsmaxel - sensor.obsminel < 20) {\n                        for (rng = Math.max(sensor.obsminrange, 100); rng < Math.min(sensor.obsmaxrange, 60000); rng += Math.min(sensor.obsmaxrange, 60000) / q2) {\n                            for (az = 0; az < Math.max(360, sensor.obsmaxaz); az += q) {\n                                if (sensor.obsminaz > sensor.obsmaxaz) {\n                                    if (az >= sensor.obsminaz || az <= sensor.obsmaxaz) {\n                                        // Intentional\n                                    }\n                                    else {\n                                        continue;\n                                    }\n                                }\n                                else {\n                                    if (az >= sensor.obsminaz && az <= sensor.obsmaxaz) {\n                                        // Intentional\n                                    }\n                                    else {\n                                        continue;\n                                    }\n                                }\n                                pos = satellite.ecfToEci(lookAnglesToEcf(az, sensor.obsmaxel, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                                if (i === len) {\n                                    console.debug('No More Markers');\n                                    break;\n                                }\n                                satCache[i].active = true;\n                                satPos[i * 3] = pos.x;\n                                satPos[i * 3 + 1] = pos.y;\n                                satPos[i * 3 + 2] = pos.z;\n                                satVel[i * 3] = 0;\n                                satVel[i * 3 + 1] = 0;\n                                satVel[i * 3 + 2] = 0;\n                                i++;\n                            }\n                        }\n                    }\n                    if (typeof sensor.obsminaz2 != 'undefined') {\n                        ////////////////////////////////\n                        // Cobra DANE Types\n                        ////////////////////////////////\n                        // //////////////////////////////////\n                        // Floor of FOV\n                        // //////////////////////////////////\n                        q = 2;\n                        for (rng = Math.max(sensor.obsminrange2, 100); rng < Math.min(sensor.obsmaxrange2, 60000); rng += Math.min(sensor.obsmaxrange2, 60000) / q2) {\n                            for (az = 0; az < 360; az += 1 * q) {\n                                if (sensor.obsminaz2 > sensor.obsmaxaz2) {\n                                    if (az >= sensor.obsminaz2 || az <= sensor.obsmaxaz2) {\n                                        // Intentional\n                                    }\n                                    else {\n                                        continue;\n                                    }\n                                }\n                                else {\n                                    if (az >= sensor.obsminaz2 && az <= sensor.obsmaxaz2) {\n                                        // Intentional\n                                    }\n                                    else {\n                                        continue;\n                                    }\n                                }\n                                pos = satellite.ecfToEci(lookAnglesToEcf(az, sensor.obsminel2, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                                if (i === len) {\n                                    console.debug('No More Markers');\n                                    break;\n                                }\n                                satCache[i].active = true;\n                                satPos[i * 3] = pos.x;\n                                satPos[i * 3 + 1] = pos.y;\n                                satPos[i * 3 + 2] = pos.z;\n                                satVel[i * 3] = 0;\n                                satVel[i * 3 + 1] = 0;\n                                satVel[i * 3 + 2] = 0;\n                                i++;\n                            }\n                        }\n                    }\n                    // Don't show anything but the floor if in surveillance only mode\n                    // Unless it is a volume search radar\n                    if (!isShowSurvFence) {\n                        // //////////////////////////////////\n                        // Outside Edge of FOV\n                        // //////////////////////////////////\n                        rng = Math.min(sensor.obsmaxrange, 60000);\n                        for (az = 0; az < Math.max(360, sensor.obsmaxaz); az += q) {\n                            if (sensor.obsminaz > sensor.obsmaxaz) {\n                                if (az >= sensor.obsminaz || az <= sensor.obsmaxaz) {\n                                    // Intentional\n                                }\n                                else {\n                                    continue;\n                                }\n                            }\n                            else {\n                                if (az >= sensor.obsminaz && az <= sensor.obsmaxaz) {\n                                    // Intentional\n                                }\n                                else {\n                                    continue;\n                                }\n                            }\n                            for (el = sensor.obsminel; el < sensor.obsmaxel; el += q) {\n                                pos = satellite.ecfToEci(lookAnglesToEcf(az, el, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                                if (i === len) {\n                                    console.debug('No More Markers');\n                                    break;\n                                }\n                                satCache[i].active = true;\n                                satPos[i * 3] = pos.x;\n                                satPos[i * 3 + 1] = pos.y;\n                                satPos[i * 3 + 2] = pos.z;\n                                satVel[i * 3] = 0;\n                                satVel[i * 3 + 1] = 0;\n                                satVel[i * 3 + 2] = 0;\n                                i++;\n                            }\n                        }\n                        if (typeof sensor.obsminaz2 != 'undefined') {\n                            ////////////////////////////////\n                            // Cobra DANE Types\n                            ////////////////////////////////\n                            // //////////////////////////////////\n                            // Outside of FOV\n                            // //////////////////////////////////\n                            rng = Math.min(sensor.obsmaxrange2, 60000);\n                            for (az = 0; az < Math.max(360, sensor.obsmaxaz2); az += q) {\n                                if (sensor.obsminaz2 > sensor.obsmaxaz2) {\n                                    if (az >= sensor.obsminaz2 || az <= sensor.obsmaxaz2) {\n                                        // Intentional\n                                    }\n                                    else {\n                                        continue;\n                                    }\n                                }\n                                else {\n                                    if (az >= sensor.obsminaz2 && az <= sensor.obsmaxaz2) {\n                                        // Intentional\n                                    }\n                                    else {\n                                        continue;\n                                    }\n                                }\n                                for (el = sensor.obsminel2; el < sensor.obsmaxel2; el += q) {\n                                    pos = satellite.ecfToEci(lookAnglesToEcf(az, el, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                                    if (i === len) {\n                                        console.debug('No More Markers');\n                                        break;\n                                    }\n                                    satCache[i].active = true;\n                                    satPos[i * 3] = pos.x;\n                                    satPos[i * 3 + 1] = pos.y;\n                                    satPos[i * 3 + 2] = pos.z;\n                                    satVel[i * 3] = 0;\n                                    satVel[i * 3 + 1] = 0;\n                                    satVel[i * 3 + 2] = 0;\n                                    i++;\n                                }\n                            }\n                        }\n                    }\n                    // //////////////////////////////////\n                    // Floor of FOV\n                    // //////////////////////////////////\n                    q = 0.25;\n                    for (rng = sensor.obsmaxrange; rng == sensor.obsmaxrange; rng += 1) {\n                        for (az = 0; az < Math.max(360, sensor.obsmaxaz); az += q) {\n                            if (sensor.obsminaz > sensor.obsmaxaz) {\n                                if (az >= sensor.obsminaz || az <= sensor.obsmaxaz) {\n                                    // Intentional\n                                }\n                                else {\n                                    continue;\n                                }\n                            }\n                            else {\n                                if (az >= sensor.obsminaz && az <= sensor.obsmaxaz) {\n                                    // Intentional\n                                }\n                                else {\n                                    continue;\n                                }\n                            }\n                            pos = satellite.ecfToEci(lookAnglesToEcf(az, sensor.obsminel, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                            if (i === len) {\n                                console.debug('No More Markers');\n                                break;\n                            }\n                            satCache[i].active = true;\n                            satPos[i * 3] = pos.x;\n                            satPos[i * 3 + 1] = pos.y;\n                            satPos[i * 3 + 2] = pos.z;\n                            satVel[i * 3] = 0;\n                            satVel[i * 3 + 1] = 0;\n                            satVel[i * 3 + 2] = 0;\n                            i++;\n                        }\n                    }\n                    for (rng = sensor.obsminrange; rng == sensor.obsminrange; rng += 1) {\n                        for (az = 0; az < Math.max(360, sensor.obsmaxaz); az += q) {\n                            if (sensor.obsminaz > sensor.obsmaxaz) {\n                                if (az >= sensor.obsminaz || az <= sensor.obsmaxaz) {\n                                    // Intentional\n                                }\n                                else {\n                                    continue;\n                                }\n                            }\n                            else {\n                                if (az >= sensor.obsminaz && az <= sensor.obsmaxaz) {\n                                    // Intentional\n                                }\n                                else {\n                                    continue;\n                                }\n                            }\n                            pos = satellite.ecfToEci(lookAnglesToEcf(az, sensor.obsminel, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                            if (i === len) {\n                                console.debug('No More Markers');\n                                break;\n                            }\n                            satCache[i].active = true;\n                            satPos[i * 3] = pos.x;\n                            satPos[i * 3 + 1] = pos.y;\n                            satPos[i * 3 + 2] = pos.z;\n                            satVel[i * 3] = 0;\n                            satVel[i * 3 + 1] = 0;\n                            satVel[i * 3 + 2] = 0;\n                            i++;\n                        }\n                    }\n                    if (sensor.obsmaxrange - sensor.obsminrange < 720) {\n                        for (rng = Math.max(sensor.obsminrange, 100); rng < Math.min(sensor.obsmaxrange, 60000); rng += Math.min(sensor.obsmaxrange, 60000) / q2) {\n                            for (az = 0; az < Math.max(360, sensor.obsmaxaz); az += q) {\n                                if (sensor.obsminaz > sensor.obsmaxaz) {\n                                    if (az >= sensor.obsminaz || az <= sensor.obsmaxaz) {\n                                        // Intentional\n                                    }\n                                    else {\n                                        continue;\n                                    }\n                                }\n                                else {\n                                    if (az >= sensor.obsminaz && az <= sensor.obsmaxaz) {\n                                        // Intentional\n                                    }\n                                    else {\n                                        continue;\n                                    }\n                                }\n                                pos = satellite.ecfToEci(lookAnglesToEcf(az, sensor.obsminel, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                                if (i === len) {\n                                    console.debug('No More Markers');\n                                    break;\n                                }\n                                satCache[i].active = true;\n                                satPos[i * 3] = pos.x;\n                                satPos[i * 3 + 1] = pos.y;\n                                satPos[i * 3 + 2] = pos.z;\n                                satVel[i * 3] = 0;\n                                satVel[i * 3 + 1] = 0;\n                                satVel[i * 3 + 2] = 0;\n                                i++;\n                            }\n                        }\n                    }\n                    if (sensor.obsminaz !== sensor.obsmaxaz && sensor.obsminaz !== sensor.obsmaxaz - 360) {\n                        for (az = sensor.obsmaxaz; az == sensor.obsmaxaz; az += 1) {\n                            for (rng = sensor.obsminrange; rng < sensor.obsmaxrange; rng += q) {\n                                pos = satellite.ecfToEci(lookAnglesToEcf(az, sensor.obsminel, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                                if (i === len) {\n                                    console.debug('No More Markers');\n                                    break;\n                                }\n                                satCache[i].active = true;\n                                satPos[i * 3] = pos.x;\n                                satPos[i * 3 + 1] = pos.y;\n                                satPos[i * 3 + 2] = pos.z;\n                                satVel[i * 3] = 0;\n                                satVel[i * 3 + 1] = 0;\n                                satVel[i * 3 + 2] = 0;\n                                i++;\n                            }\n                        }\n                        for (az = sensor.obsminaz; az == sensor.obsminaz; az += 1) {\n                            for (rng = sensor.obsminrange; rng < sensor.obsmaxrange; rng += q) {\n                                pos = satellite.ecfToEci(lookAnglesToEcf(az, sensor.obsminel, rng, sensor.observerGd.latitude, sensor.observerGd.longitude, sensor.observerGd.height), gmst);\n                                if (i === len) {\n                                    console.debug('No More Markers');\n                                    break;\n                                }\n                                satCache[i].active = true;\n                                satPos[i * 3] = pos.x;\n                                satPos[i * 3 + 1] = pos.y;\n                                satPos[i * 3 + 2] = pos.z;\n                                satVel[i * 3] = 0;\n                                satVel[i * 3 + 1] = 0;\n                                satVel[i * 3 + 2] = 0;\n                                i++;\n                            }\n                        }\n                    }\n                }\n            }\n            // //////////////////////////////////\n            // FOV Bubble Drawing Code - STOP\n            // //////////////////////////////////\n        }\n        else if (isShowSatOverfly || isResetSatOverfly) {\n            // //////////////////////////////////\n            // Satellite Overfly Drawing Code - START\n            // //////////////////////////////////\n            if (satCache[i].marker) {\n                if (isResetSatOverfly && satCache[i].active === true) {\n                    satCache[i].active = false;\n                    satPos[i * 3] = 0;\n                    satPos[i * 3 + 1] = 0;\n                    satPos[i * 3 + 2] = 0;\n                    satVel[i * 3] = 0;\n                    satVel[i * 3 + 1] = 0;\n                    satVel[i * 3 + 2] = 0;\n                    continue;\n                }\n                for (snum = 0; snum < satelliteSelected.length + 1; snum++) {\n                    if (snum === satelliteSelected.length) {\n                        sensorMarkerArray.push(i);\n                        break;\n                    }\n                    if (satelliteSelected[snum] !== -1) {\n                        if (!isShowSatOverfly)\n                            continue;\n                        // Find the ECI position of the Selected Satellite\n                        satSelPosX = satPos[satelliteSelected[snum] * 3];\n                        satSelPosY = satPos[satelliteSelected[snum] * 3 + 1];\n                        satSelPosZ = satPos[satelliteSelected[snum] * 3 + 2];\n                        satSelPosEcf = {\n                            x: satSelPosX,\n                            y: satSelPosY,\n                            z: satSelPosZ,\n                        };\n                        satSelPos = satellite.ecfToEci(satSelPosEcf, gmst);\n                        // Find the Lat/Long of the Selected Satellite\n                        satSelGeodetic = satellite.eciToGeodetic(satSelPos, gmst); // pv.position is called positionEci originally\n                        satHeight = satSelGeodetic.height;\n                        satSelPosEarth = {\n                            longitude: satSelGeodetic.longitude,\n                            latitude: satSelGeodetic.latitude,\n                            height: 1,\n                        };\n                        deltaLatInt = 1;\n                        if (satHeight < 2500 && selectedSatFOV <= 60)\n                            deltaLatInt = 0.5;\n                        if (satHeight > 7000 || selectedSatFOV >= 90)\n                            deltaLatInt = 2;\n                        if (satelliteSelected.length > 1)\n                            deltaLatInt = 2;\n                        for (deltaLat = -60; deltaLat < 60; deltaLat += deltaLatInt) {\n                            lat = Math.max(Math.min(Math.round(satSelGeodetic.latitude * RAD2DEG) + deltaLat, 90), -90) * DEG2RAD;\n                            if (lat > 90)\n                                continue;\n                            deltaLonInt = 1; // Math.max((Math.abs(lat)*RAD2DEG/15),1);\n                            if (satHeight < 2500 && selectedSatFOV <= 60)\n                                deltaLonInt = 0.5;\n                            if (satHeight > 7000 || selectedSatFOV >= 90)\n                                deltaLonInt = 2;\n                            if (satelliteSelected.length > 1)\n                                deltaLonInt = 2;\n                            for (deltaLon = 0; deltaLon < 181; deltaLon += deltaLonInt) {\n                                // //////////\n                                // Add Long\n                                // //////////\n                                long = satSelGeodetic.longitude + deltaLon * DEG2RAD;\n                                satSelPosEarth = {\n                                    longitude: long,\n                                    latitude: lat,\n                                    height: 15,\n                                };\n                                // Find the Az/El of the position on the earth\n                                lookangles = satellite.ecfToLookAngles(satSelPosEarth, satSelPosEcf);\n                                // azimuth = lookangles.azimuth;\n                                elevation = lookangles.elevation;\n                                // rangeSat = lookangles.rangeSat;\n                                if (elevation * RAD2DEG > 0 && 90 - elevation * RAD2DEG < selectedSatFOV) {\n                                    satSelPosEarth = satellite.geodeticToEcf(satSelPosEarth);\n                                    if (i === len) {\n                                        console.debug('Ran out of Markers');\n                                        continue; // Only get so many markers.\n                                    }\n                                    satCache[i].active = true;\n                                    satPos[i * 3] = satSelPosEarth.x;\n                                    satPos[i * 3 + 1] = satSelPosEarth.y;\n                                    satPos[i * 3 + 2] = satSelPosEarth.z;\n                                    satVel[i * 3] = 0;\n                                    satVel[i * 3 + 1] = 0;\n                                    satVel[i * 3 + 2] = 0;\n                                    i++;\n                                }\n                                // //////////\n                                // Minus Long\n                                // //////////\n                                if (deltaLon === 0 || deltaLon === 180)\n                                    continue; // Don't Draw Two Dots On the Center Line\n                                long = satSelGeodetic.longitude - deltaLon * DEG2RAD;\n                                satSelPosEarth = {\n                                    longitude: long,\n                                    latitude: lat,\n                                    height: 15,\n                                };\n                                // Find the Az/El of the position on the earth\n                                lookangles = satellite.ecfToLookAngles(satSelPosEarth, satSelPosEcf);\n                                // azimuth = lookangles.azimuth;\n                                elevation = lookangles.elevation;\n                                // rangeSat = lookangles.rangeSat;\n                                if (elevation * RAD2DEG > 0 && 90 - elevation * RAD2DEG < selectedSatFOV) {\n                                    satSelPosEarth = satellite.geodeticToEcf(satSelPosEarth);\n                                    if (i === len) {\n                                        console.debug('Ran out of Markers');\n                                        continue; // Only get so many markers.\n                                    }\n                                    satCache[i].active = true;\n                                    satPos[i * 3] = satSelPosEarth.x;\n                                    satPos[i * 3 + 1] = satSelPosEarth.y;\n                                    satPos[i * 3 + 2] = satSelPosEarth.z;\n                                    satVel[i * 3] = 0;\n                                    satVel[i * 3 + 1] = 0;\n                                    satVel[i * 3 + 2] = 0;\n                                    i++;\n                                }\n                                if (lat === 90 || lat === -90)\n                                    break; // One Dot for the Poles\n                            }\n                        }\n                    }\n                }\n            }\n            // //////////////////////////////////\n            // Satellite Overfly Drawing Code - STOP\n            // //////////////////////////////////\n        }\n        isResetSatOverfly = false;\n        if (satCache[i].marker) {\n            for (; i < len; i++) {\n                if (!satCache[i].active) {\n                    len -= fieldOfViewSetLength;\n                    break;\n                }\n                satPos[i * 3] = 0;\n                satPos[i * 3 + 1] = 0;\n                satPos[i * 3 + 2] = 0;\n                satVel[i * 3] = 0;\n                satVel[i * 3 + 1] = 0;\n                satVel[i * 3 + 2] = 0;\n                satCache[i].active = false;\n            }\n        }\n    }\n    if (isResetFOVBubble) {\n        isResetFOVBubble = false;\n        len -= fieldOfViewSetLength;\n    }\n    sendDataToSatSet();\n    // The longer the delay the more jitter at higher speeds of propagation\n    setTimeout(() => {\n        propagateCruncher();\n    }, (globalPropagationRate * globalPropagationRateMultiplier) / divisor);\n};\nconst sendDataToSatSet = () => {\n    let postMessageArray = {\n        satPos: satPos,\n        satVel: satVel,\n    };\n    // Add In View Data if Sensor Selected\n    if (sensor.observerGd !== defaultGd) {\n        postMessageArray.satInView = satInView;\n    }\n    else {\n        postMessageArray.satInView = EMPTY_INT8_ARRAY;\n    }\n    // Add Sun View Data if Enabled\n    if (isSunlightView) {\n        postMessageArray.satInSun = satInSun;\n    }\n    else {\n        postMessageArray.satInSun = EMPTY_INT8_ARRAY;\n    }\n    // If there is at least one sensor showing markers\n    if (sensorMarkerArray.length >= 1) {\n        postMessageArray.sensorMarkerArray = sensorMarkerArray;\n    }\n    else {\n        postMessageArray.sensorMarkerArray = [];\n    }\n    postMessage(postMessageArray);\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/js/webworker/positionCruncher.ts\");\n",""],"names":["pad","val","len","String","length","formats","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","i18n","dayNames","monthNames","token","timezone","timezoneClip","dateFormat","date","mask","utc","arguments","Object","prototype","toString","call","test","undefined","Date","Number","isNaN","SyntaxError","slice","_","d","D","m","y","H","M","s","L","o","getTimezoneOffset","flags","dd","ddd","dddd","mm","mmm","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","Math","round","t","tt","T","TT","Z","match","pop","replace","floor","abs","S","$0","_numeric","version","bench","f","interval","t1","t2","n","i","_myIndexOf","w","k","myIndexOf","Array","indexOf","Function","precision","largeArray","prettyPrint","x","fmtnum","isFinite","scale","log","normalized","pow","basic","toPrecision","parseFloat","ret","foo","push","join","a","b","c","flag","hasOwnProperty","parseDate","parse","Error","parseFloat_","parseCSV","split","j","pat","patnum","stripper","substr","count","bar","baz","toCSV","A","dim","row","getURL","url","client","XMLHttpRequest","open","send","imageURL","img","base64","z","p","q","r","key","charAt","crc32Array","from","to","table","crc","s1","s2","next","adler32","crc32","stream","_dim","mapreduce","body","init","mapreduce2","setup","same","rep","v","dotMMsmall","woo","i0","k0","p0","r0","_getCol","dotMMbig","gc","xj","VV","dotVV","dotMV","dotVM","s3","accum","i1","dot","mulVS","mulSV","diag","Ai","getDiag","min","identity","pointwise","params","fun","avec","thevec","haveret","substring","apply","pointwise2","_biforeach","_biforeach2","_foreach","_foreach2","ops2","add","sub","mul","div","mod","and","or","eq","neq","lt","gt","leq","geq","band","bor","bxor","lshift","rshift","rrshift","opseq","addeq","subeq","muleq","diveq","modeq","lshifteq","rshifteq","rrshifteq","bandeq","boreq","bxoreq","mathfuns","mathfuns2","ops1","neg","not","bnot","clone","mapreducers","any","all","sum","prod","norm2Squared","norminf","norm1","sup","inf","code","codeeq","truncVV","truncVS","truncSV","trunc","inv","Aj","I","Ii","Ij","v0","det","alpha","temp","k1","k2","k3","transpose","A0","A1","Bj","negtranspose","_random","rnd","random","norm2","sqrt","linspace","max","getBlock","setBlock","B","getRange","J","Bi","AI","blockMatrix","X","N","Xij","ZI","Xijk","tensor","xi","Tbinop","rr","rc","cr","cc","io","reciprocal","transjugate","Tunop","exp","conj","sin","cos","Rx","Ry","Ax","Ay","Aix","Aiy","Ajx","Ajy","Rix","Riy","Rjx","Rjy","d1","ax","ay","bx","by","get","ik","set","vx","vy","getRows","rx","ry","setRows","getRow","setRow","eig","house","toUpperHessenberg","me","C","Ci","Q","Qi","epsilon","QRFrancis","maxiter","H0","tr","Hloc","Hi","iter","QH1","QH2","concat","QH","QB","Q0","p1","p2","disc","n1","n2","R","E","Rk","Rj","lambda","ccsSparse","counts","parseInt","Av","ccsFull","ccsDim","j0","j1","ccsTSolve","bj","dfs","l0","l1","ccsDFS","Pinv","km","k11","ccsLPSolve","Bv","ccsLUP1","threshold","U","Li","Lj","Lv","Ui","Uj","Uv","e","K","sol","P","ccsDFS0","ccsLPSolve0","ccsLUP0","ccsLUP","ccsGetBlock","jq","ip","q0","q1","ccsDot","sA","sB","Cj","Cv","ccsLUPSolve","LUP","Xi","Xj","Xv","ccsbinop","eval","ccsScatter","Ri","Rv","ptr","Aii","ccsGather","sdim","sclone","sdiag","i2","i3","sidentity","stranspose","sLUP","tol","sdotMM","dotMM","BT","BTk","reti","sdotMV","sdotVM","sdotVV","sdot","sscatter","scatter","V","Vij","sgather","gather","cLU","LU","left","Infinity","right","countL","countU","cLUsolve","LUsolve","lu","cgrid","grid","shape","cdelsq","delsq","g","dir","cdotMV","Spline","yl","yr","kl","kr","_at","x1","at","x0","mid","diff","dx","dy","zl","zr","pl","pr","roots","sqr","heval","y0","y1","ai","bi","ci","di","ri","cx","stops","z0","z1","zm","t0","tm","side","spline","kn","fftpow2","xe","ye","xo","yo","si","_ifftpow2","ifftpow2","convpow2","axi","bxi","ayi","byi","fft","log2","ceil","cy","nhalf","Y","ifft","gradient","f0","f1","f2","errest","roundoff","eps","it","d2","uncmin","maxit","callback","options","grad","df0","step","g0","g1","H1","Hinv","ten","isfinite","Hy","Hs","ys","nstep","msg","solution","invHessian","iterations","message","Dopri","ymid","events","xs","xh","yh","dopri","event","k4","k5","k6","k7","A2","A3","A4","A5","A6","bm","er","erinf","e0","e1","ev","yi","xl","xr","xc","yc","en","ei","sl","sr","fast","absAjk","Akk","Ak","Pk","Pi","LUi","LUii","tmp","solve","echelonize","__solveLP","unbounded","cb","AT","svd","norm","dotcc","a1","Ag","_solveLP","c0","b0","NaN","solveLP","Aeq","beq","Aeq2","b4","c1","c2","c4","x2","MPStoLP","MPS","state","states","rows","sign","rl","vars","nv","name","err","w0","seedrandom","pool","math","width","chunks","significance","overflow","startdenom","seed","use_entropy","arc4","mixkey","flatten","getTime","window","ARC4","u","keylen","lowbits","getnext","obj","depth","result","prop","typ","smear","charCodeAt","fromCharCode","exports","base0to1","base1to0","dpori","lda","kp1","dposl","kb","dpofa","info","jm1","qpgen2","dmat","dvec","fddmat","crval","amat","bvec","fdamat","meq","iact","nact","work","ierr","it1","iwzv","iwrv","iwrm","iwsv","iwuv","nvl","iwnbv","gs","nu","t1inf","t2min","vsmall","tmpa","tmpb","go","fn_goto_50","fn_goto_55","fn_goto_797","fn_goto_798","fn_goto_799","solveQP","Dmat","Amat","factorized","value","unconstrained_solution","prec","tolerance","itmax","pythag","iteration","test_convergence","numeric","DEG2RAD","TAU","SunCalc","MILLISECONDS_IN_A_DAY","J1970","J2000","J0","lw","phi","times","toJulian","valueOf","fromJulian","toDays","rightAscension","atan2","tan","declination","asin","azimuth","dec","altitude","siderealTime","astroRefraction","solarMeanAnomaly","eclipticLongitude","sunCoords","ra","julianCycle","approxTransit","Ht","solarTransitJ","ds","hourAngle","acos","getSetJ","moonCoords","F","dt","dist","hoursLater","getStarPosition","lat","lng","PI","vmag","pname","getSunPosition","addTime","angle","riseName","setName","getTimes","Jnoon","time","Jset","Jrise","solarNoon","nadir","getMoonPosition","pa","distance","parallacticAngle","getMoonIllumination","sdist","inc","fraction","phase","getMoonTimes","inUTC","setUTCHours","setHours","hc","h0","h1","h2","rise"],"sourceRoot":""}