{"version":3,"file":"src_js_plugins_sensor_sensor_ts.3d0e061fdc7ed49bb382.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwD;AACjC;AACoC;AACX;AACE;AACQ;AACD;AACzD;AACA;AACA;AACA;AACA;AACO;AACP;AACA,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL;AACA;AACO;AACP,YAAY,gBAAgB,EAAE,2EAAqB;AACnD;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,gBAAgB,EAAE,2EAAqB;AACnD,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT;AACA;AACA,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT,QAAQ,6CAAC;AACT;AACA,YAAY,6CAAC;AACb,YAAY,6CAAC;AACb,YAAY,6CAAC;AACb,YAAY,6CAAC;AACb,YAAY,6CAAC;AACb,YAAY,6CAAC;AACb;AACA;AACA;AACO;AACP,YAAY,uBAAuB,EAAE,2EAAqB;AAC1D,IAAI,6CAAC,uBAAuB,uEAAiB;AAC7C;AACA;AACA;AACA,IAAI,6CAAC,uBAAuB,uEAAikEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,cAAc;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6CAAC,yBAAyB,uEAAiB;AAC/C;AACA;AACA;AACA,gCAAgC,qDAAQ,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sDAAS,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2DAAa,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAa,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY,CAAC;AAC7C;AACA;AACA;AACA;AACA,IAAI,6CAAC;AACL,8CAA8C,6CAAC;AAC/C,KAAK;AACL,IAAI,6CAAC;AACL,gDAAgD,6CAAC;AACjD,KAAK;AACL,IAAI,6CAAC;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,6CAAC;AACL;AACA,KAAK;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL;AACO;AACP,YAAY,kEAAkE,EAAE,2EAAqB;AACrG;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL;AACA;AACA;AACA,KAAK;AACL,IAAI,sFAAgC;AACpC;AACO;AACP,YAAY,uFAAuF,EAAE,2EAAqB;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,YAAY;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,6DAA6D,EAAE,2EAAqB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6CAAC,wCAAwC,iCAAiC;AAC1F;AACA,gBAAgB,6CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uHAAiE;AACrF;AACA,qBAAqB,6CAAC;AACtB,oBAAoB,6CAAC;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6CAAC,wCAAwC,iCAAiC;AAC1F;AACA,gBAAgB,6CAAC;AACjB;AACA;AACA;AACA,gBAAgB,8GAAwD;AACxE,gBAAgB,8GAAwD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uHAAiE;AACzF;AACA,yBAAyB,6CAAC;AAC1B,wBAAwB,6CAAC;AACzB;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8GAAwD;AACxE,gBAAgB,6CAAC;AACjB;AACA,oBAAoB,6CAAC;AACrB,oBAAoB,6CAAC;AACrB,oBAAoB,6CAAC,uCAAuC,iCAAiC;AAC7F,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0HAAoE;AAC5F;AACA,yBAAyB,6CAAC;AAC1B,wBAAwB,6CAAC;AACzB;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6CAAC;AACjB;AACA,oBAAoB,6CAAC;AACrB;AACA;AACA,wBAAwB,6CAAC;AACzB,wBAAwB,6CAAC,gDAAgD,iCAAiC;AAC1G,qBAAqB;AACrB;AACA;AACA;AACA;AACA,gBAAgB,gHAA0D;AAC1E,gBAAgB,gHAA0D;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6CAAC;AACrB,oBAAoB,6CAAC;AACrB,oBAAoB,6CAAC;AACrB;AACA,gBAAgB,6CAAC,yCAAyC,iCAAiC;AAC3F,gBAAgB,gHAA0D;AAC1E,gBAAgB,6CAAC;AACjB;AACA;AACA;AACA;AACO;AACP,YAAY,gBAAgB,EAAE,2EAAqB;AACnD;AACA;AACA;AACA;AACA,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL,IAAI,6CAAC;AACL;AACA;AACA,YAAY,6CAAC;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACO;AACP,YAAY,SAAS,EAAE,2EAAqB;AAC5C;AACA,QAAQ,6CAAC,+BAA+B,uEAAiB;AACzD;AACA;AACA,QAAQ,6CAAC;AACT,wBAAwB,oGAA8C;AACtE,+BAA+B,oGAA8C;AAC7E,4BAA4B,yFAAmC,CAAC,qGAA+C;AAC/G;AACA;AACA,oBAAoB,8FAAwC;AAC5D;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACO;AACP,IAAI,6CAAC,yCAAyC,iCAAiC;AAC/E,IAAI,6CAAC,wCAAwC,iCAAiC;AAC9E,IAAI,6CAAC,wCAAwC,iCAAiC;AAC9E,IAAI,6CAAC,uCAAuC,iCAAiC;AAC7E,IAAI,6CAAC,gDAAgD,iCAAiC;AACtF,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,gHAA0D;AAC9D;AACA;AACA,IAAI,8GAAwD;AAC5D;AACA;AACO;AACP;AACA;AACA;AACO;AACP,YAAY,2EAA2E,EAAE,2EAAqB;AAC9G,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC,sBAAsB,6CAAC,uCAAuC,uBAAuB;AAC1F,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,2BAA2B,6CAAC;AAC5B,2BAA2B,6CAAC;AAC5B,gBAAgB,6CAAC;AACjB,uBAAuB,6CAAC;AACxB,kBAAkB,6CAAC;AACnB,kBAAkB,6CAAC;AACnB,kBAAkB,6CAAC;AACnB,kBAAkB,6CAAC;AACnB,qBAAqB,6CAAC;AACtB,qBAAqB,6CAAC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://keeptrack.space/./src/js/plugins/sensor/sensor.ts"],"sourcesContent":["/**\n * /////////////////////////////////////////////////////////////////////////////\n *\n * planetarium.ts is a plugin for showing the satellites above from the perspective\n * of a view on the earth.\n *\n * http://keeptrack.space\n *\n * @Copyright (C) 2016-2022 Theodore Kruczek\n *\n * KeepTrack is free software: you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by the Free Software\n * Foundation, either version 3 of the License, or (at your option) any later version.\n *\n * KeepTrack is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License along with\n * KeepTrack. If not, see <http://www.gnu.org/licenses/>.\n *\n * TESTING: This plugin requires php to be installed on the server. It won't work\n * with the default http npm module.\n *\n * /////////////////////////////////////////////////////////////////////////////\n */\nimport { keepTrackApi } from '@app/js/api/keepTrackApi';\nimport $ from 'jquery';\nimport radioTowerPng from '@app/img/icons/radio-tower.png';\nimport radarPng from '@app/img/icons/radar.png';\nimport customPng from '@app/img/icons/custom.png';\nimport lookanglesPng from '@app/img/icons/lookangles.png';\nimport multiSitePng from '@app/img/icons/multi-site.png';\nlet sensorLinks = false;\nlet isSensorListMenuOpen = false;\nlet isSensorInfoMenuOpen = false;\nlet isLookanglesMultiSiteMenuOpen = false;\nlet customSensors = [];\nexport const resetSensorButtonClick = () => {\n    settingsManager.isForceColorScheme = false;\n    $('#menu-sensor-info').addClass('bmenu-item-disabled');\n    $('#menu-fov-bubble').addClass('bmenu-item-disabled');\n    $('#menu-surveillance').addClass('bmenu-item-disabled');\n    $('#menu-planetarium').addClass('bmenu-item-disabled');\n    $('#menu-astronomy').addClass('bmenu-item-disabled');\n    resetSensorSelected();\n};\nexport const clearCustomSensors = () => {\n    const { sensorManager } = keepTrackApi.programs;\n    customSensors = [];\n    if (sensorManager.whichRadar === 'MULTI CUSTOM' || sensorManager.whichRadar === 'CUSTOM') {\n        resetSensorButtonClick();\n    }\n};\nexport const csTelescopeClick = () => {\n    const { sensorManager } = keepTrackApi.programs;\n    if ($('#cs-telescope').is(':checked')) {\n        $('#cs-minaz-div').hide();\n        $('#cs-maxaz-div').hide();\n        $('#cs-minel-div').hide();\n        $('#cs-maxel-div').hide();\n        $('#cs-minrange-div').hide();\n        $('#cs-maxrange-div').hide();\n        $('#cs-minaz').val(0);\n        $('#cs-maxaz').val(360);\n        $('#cs-minel').val(10);\n        $('#cs-maxel').val(90);\n        $('#cs-minrange').val(100);\n        $('#cs-maxrange').val(1000000);\n    }\n    else {\n        $('#cs-minaz-div').show();\n        $('#cs-maxaz-div').show();\n        $('#cs-minel-div').show();\n        $('#cs-maxel-div').show();\n        $('#cs-minrange-div').show();\n        $('#cs-maxrange-div').show();\n        if (sensorManager.checkSensorSelected()) {\n            $('#cs-minaz').val(sensorManager.currentSensor[0].obsminaz);\n            $('#cs-maxaz').val(sensorManager.currentSensor[0].obsmaxaz);\n            $('#cs-minel').val(sensorManager.currentSensor[0].obsminel);\n            $('#cs-maxel').val(sensorManager.currentSensor[0].obsmaxel);\n            $('#cs-minrange').val(sensorManager.currentSensor[0].obsminrange);\n            $('#cs-maxrange').val(sensorManager.currentSensor[0].obsmaxrange);\n        }\n    }\n};\nexport const uiManagerInit = () => {\n    const { satellite, uiManager } = keepTrackApi.programs;\n    $('#nav-mobile').append(keepTrackApi.html `\n    <div id=\"sensor-selected\"></div>\n  `);\n    // Side Menu\n    $('#left-menus').append(keepTrackApi.html `\n        <div id=\"sensor-list-menu\" class=\"side-menu-parent start-hidden text-select\">\n          <div id=\"sensor-list-content\" class=\"side-menu\">                  \n            <div class=\"row\">\n              <ul id=\"reset-sensor-text\" class=\"sensor-reset-menu\">\n                <h5 id=\"reset-sensor-button\" class=\"center-align menu-selectable\">Reset Sensor</h5>\n                <li class=\"divider\"></li>\n              </ul>\n              <ul>\n                <h5 class=\"center-align\">CSpOC Sensors</h5>\n                <li class=\"divider\"></li>\n                <li class=\"menu-selectable\" data-sensor=\"cspocAll\">All CSpOC Sensors<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"Coalition\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"mwAll\">All MW Sensors<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"Coalition\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"BLE\">Beale<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USSF\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"COD\">Cape Cod<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USSF\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"CAV\">Cavalier<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USSF\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"CLR\">Clear<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USSF\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"CDN\">Cobra Dane<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USSF\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"EGL\">Eglin<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USSF\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"FYL\">Fylingdales<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"RAF\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"GLB\">Globus II<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"NOR\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"MIL\">Millstone<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"MIT\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"THL\">Thule<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USSF\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"ASC\">Ascension<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USSF\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"ALT\">ALTAIR<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USA\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"MMW\">Millimeter Wave<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USA\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"ALC\">ALCOR<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USA\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"TDX\">TRADEX<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USA\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"DGC\">Diego Garcia<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USSF\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"MAU\">Maui<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USSF\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"SOC\">Socorro<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USSF\"></span></li>\n                <li class=\"divider\"></li>\n                <h5 class=\"center-align\">MDA Sensors</h5>\n                <li class=\"divider\"></li>\n                <li class=\"menu-selectable\" data-sensor=\"mdAll\">All Sensors<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"Coalition\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"HAR\">Har Keren<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"ISR\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"QTR\">CENTCOM<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USA\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"KUR\">Kürecik<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USA\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"SHA\">Shariki<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USA\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"KCS\">Kyogamisaki<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USA\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"SBX\">Sea-Based X-Band<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"USN\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"TAI\">Taiwan SRP<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"TAI\"></span></li>\n                <li class=\"divider\"></li>\n                <h5 class=\"center-align\">LeoLabs Sensors</h5>\n                <li class=\"divider\"></li>\n                <li class=\"menu-selectable\" data-sensor=\"llAll\">All Sensors<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"Comm\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"MSR\">Mdata-sensorland Radar<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"Comm\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"PFISR\">PFIS Radar<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"Comm\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"KSR\">Kiwi Space Radar<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"Comm\"></span></li>\n                <li class=\"divider\"></li>\n                <h5 class=\"center-align\">ESOC Sensors</h5>\n                <li class=\"divider\"></li>\n                <li class=\"menu-selectable\" data-sensor=\"GRV\">GRAVES<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"FRA\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"FYL\">Fylingdales<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"RAF\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"TIR\">TIRA<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"GER\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"NRC\">Northern Cross<span\n                    class=\"badge dark-blue-badge\" data-badge-caption=\"ITA\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"TRO\">Troodos<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"RAF\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"SDT\">Space Debris Telescope<span\n                    class=\"badge dark-blue-badge\" data-badge-caption=\"ESA\"></span></li>\n                    <!-- GALILEO GROUND SENSOR STATION -->\n                <li class=\"menu-selectable\" data-sensor=\"GGS\">GSS Fucino<span\n                    class=\"badge dark-blue-badge\" data-badge-caption=\"ITA\"></span></li>\n                    <!-- GALILEO GROUND SENSOR STATION -->\n                <li class=\"divider\"></li>\n                <h5 class=\"center-align\">Russian Sensors</h5>\n                <li class=\"divider\"></li>\n                <li class=\"menu-selectable\" data-sensor=\"rusAll\">All Russian Sensors<span\n                    class=\"badge dark-blue-badge\" data-badge-caption=\"RUS\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"ARM\">Armavir<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"RUS\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"BAL\">Balkhash<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"RUS\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"GAN\">Gantsevichi<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"RUS\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"LEK\">Lekhtusi<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"RUS\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"MIS\">Mishelevka<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"RUS\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"OLE\">Olenegorsk<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"RUS\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"PEC\">Pechora<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"RUS\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"PIO\">Pionersky<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"RUS\"></span></li>\n                <li class=\"divider\"></li>\n                <h5 class=\"center-align\">Chinese Sensors</h5>\n                <li class=\"divider\"></li>\n                <li class=\"menu-selectable\" data-sensor=\"XUA\">Xuanhua<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"PRC\"></span></li>\n                <li class=\"menu-selectable\" data-sensor=\"PMO\">Purple Mountain<span class=\"badge dark-blue-badge\"\n                    data-badge-caption=\"PRC\"></span></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div id=\"customSensor-menu\" class=\"side-menu-parent start-hidden text-select\">\n          <div id=\"customSensor-content\" class=\"side-menu\">\n            <div class=\"row\">\n              <h5 class=\"center-align\">Custom Sensor</h5>\n              <form id=\"customSensor\">\n                <div class=\"input-field col s12 tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Latitude in Decimal Form (ex: 43.283)\">\n                  <input id=\"cs-lat\" type=\"text\" value=\"0\" />\n                  <label for=\"cs-lat\" class=\"active\">Latitude</label>\n                </div>\n                <div class=\"input-field col s12 tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Longitude in Decimal Form (ex: -73.283)\">\n                  <input id=\"cs-lon\" type=\"text\" value=\"0\" />\n                  <label for=\"cs-lon\" class=\"active\">Longitude</label>\n                </div>\n                <div class=\"input-field col s12 tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Elevation in kilometers (ex: 0.645)\">\n                  <input id=\"cs-hei\" type=\"text\" value=\"0\" />\n                  <label for=\"cs-hei\" class=\"active\">Elevation Above Sea Level (Km)</label>\n                </div>\n                <div class=\"input-field col s12\">\n                  <select id=\"cs-type\">\n                    <option value=\"Observer\">Observer</option>\n                    <option value=\"Optical\">Optical</option>\n                    <option value=\"Phased Array Radar\">Phased Array Radar</option>\n                    <option value=\"Mechanical\">Mechanical</option>\n                  </select>\n                  <label>Type of Sensor</label>\n                </div>\n                <div class=\"switch row tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Is this Sensor a Telescope?\">\n                  <label>\n                    <input id=\"cs-telescope\" type=\"checkbox\" checked=\"false\" />\n                    <span class=\"lever\"></span>\n                    Telescope\n                  </label>\n                </div>\n                <div id=\"cs-minaz-div\" class=\"start-hidden input-field col s12 tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Azimuth in degrees (ex: 50)\">\n                  <input id=\"cs-minaz\" type=\"text\" value=\"0\" />\n                  <label for=\"cs-minaz\" class=\"active\">Minimum Azimuth</label>\n                </div>\n                <div id=\"cs-maxaz-div\" class=\"start-hidden input-field col s12 tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Azimuth in degrees (ex: 120)\">\n                  <input id=\"cs-maxaz\" type=\"text\" value=\"360\" />\n                  <label for=\"cs-maxaz\" class=\"active\">Maximum Azimuth</label>\n                </div>\n                <div id=\"cs-minel-div\" class=\"start-hidden input-field col s12 tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Elevation in degrees (ex: 10)\">\n                  <input id=\"cs-minel\" type=\"text\" value=\"10\" />\n                  <label for=\"cs-minel\" class=\"active\">Minimum Elevation</label>\n                </div>\n                <div id=\"cs-maxel-div\" class=\"start-hidden input-field col s12 tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Elevation in degrees (ex: 90)\">\n                  <input id=\"cs-maxel\" type=\"text\" value=\"90\" />\n                  <label for=\"cs-maxel\" class=\"active\">Maximum Elevation</label>\n                </div>\n                <div id=\"cs-minrange-div\" class=\"start-hidden input-field col s12 tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Range in kilometers (ex: 500)\">\n                  <input id=\"cs-minrange\" type=\"text\" value=\"100\" />\n                  <label for=\"cs-minrange\" class=\"active\">Minimum Range</label>\n                </div>\n                <div id=\"cs-maxrange-div\" class=\"start-hidden input-field col s12 tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Range in kilometers (ex: 20000)\">\n                  <input id=\"cs-maxrange\" type=\"text\" value=\"50000\" />\n                  <label for=\"cs-maxrange\" class=\"active\">Maximum Range</label>\n                </div>\n                <div class=\"center-align\">\n                  <button id=\"cs-submit\" class=\"btn btn-ui waves-effect waves-light\" type=\"submit\" name=\"action\">Add Custom Sensor &#9658;</button>\n                  <br />\n                  <br />\n                  <button id=\"cs-clear\" class=\"btn btn-ui waves-effect waves-light\" name=\"action\">Clear Custom Sensors &#9658;</button>\n                  <br />\n                  <br />\n                  <button id=\"cs-geolocation\" class=\"btn btn-ui waves-effect waves-light\" name=\"search\">Use Geolocation &#9658;</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div id=\"sensor-info-menu\" class=\"side-menu-parent start-hidden text-select\">\n          <div id=\"sensor-content\" class=\"side-menu\">\n            <div class=\"row\">\n              <h5 id=\"sensor-info-title\" class=\"center-align\">Sensor Name</h5>\n              <div class=\"sensor-info-row\" style=\"margin-top: 0px;\">\n                <div class=\"sensor-info-key\">Country</div>\n                <div class=\"sensor-info-value\" id=\"sensor-country\">USA</div>\n              </div>\n              <div class=\"sensor-info-row\">\n                <div class=\"sensor-info-key\">Sensor Type</div>\n                <div class=\"sensor-info-value\" id=\"sensor-type\">Unknown</div>\n              </div>\n              <div class=\"sensor-info-row\">\n                <div class=\"sensor-info-key\">Latitude</div>\n                <div class=\"sensor-info-value\" id=\"sensor-latitude\">0</div>\n              </div>\n              <div class=\"sensor-info-row\">\n                <div class=\"sensor-info-key\">Longitude</div>\n                <div class=\"sensor-info-value\" id=\"sensor-longitude\">0</div>\n              </div>\n              <div class=\"sensor-info-row\">\n                <div class=\"sensor-info-key\">Min Azimuth</div>\n                <div class=\"sensor-info-value\" id=\"sensor-minazimuth\">30 deg</div>\n              </div>\n              <div class=\"sensor-info-row\">\n                <div class=\"sensor-info-key\">Max Azimuth</div>\n                <div class=\"sensor-info-value\" id=\"sensor-maxazimuth\">30 deg</div>\n              </div>\n              <div class=\"sensor-info-row\">\n                <div class=\"sensor-info-key\">Min Elevation</div>\n                <div class=\"sensor-info-value\" id=\"sensor-minelevation\">60 deg</div>\n              </div>\n              <div class=\"sensor-info-row\">\n                <div class=\"sensor-info-key\">Max Elevation</div>\n                <div class=\"sensor-info-value\" id=\"sensor-maxelevation\">60 deg</div>\n              </div>\n              <div class=\"sensor-info-row\">\n                <div class=\"sensor-info-key\">Min Range</div>\n                <div class=\"sensor-info-value\" id=\"sensor-minrange\">1000 km</div>\n              </div>\n              <div class=\"sensor-info-row\">\n                <div class=\"sensor-info-key\">Max Range</div>\n                <div class=\"sensor-info-value\" id=\"sensor-maxrange\">1000 km</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div id=\"lookangles-menu\" class=\"side-menu-parent start-hidden text-select\">\n          <div id=\"lookangles-content\" class=\"side-menu\">\n            <div class=\"row\">\n              <h5 class=\"center-align\">Sensor Look Angles</h5>\n              <div class=\"row light-blue darken-3\" style=\"height:4px; display:block;\"></div>\n              <div id=\"settings-lookangles\">\n                <h5 class=\"center-align\">Lookangles Settings</h5>\n                <div class=\"switch row\">\n                  <label>\n                    <input id=\"settings-riseset\" type=\"checkbox\" />\n                    <span class=\"lever\"></span>\n                    Show Only Rise and Set Times\n                  </label>\n                </div>\n                <div class=\"input-field col s6\">\n                  <input value=\"7\" id=\"lookanglesLength\" type=\"text\" class=\"tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"How Many Days of Lookangles Should be Calculated\" />\n                  <label for=\"lookanglesLength\" class=\"active\">Length (Days)</label>\n                </div>\n                <div class=\"input-field col s6\">\n                  <input value=\"30\" id=\"lookanglesInterval\" type=\"text\" class=\"tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Seconds Between Each Line of Lookangles\" />\n                  <label for=\"lookanglesInterval\" class=\"active\">Interval</label>\n                </div>\n                <div class=\"row\"></div>\n              </div>\n              <table id=\"looks\" class=\"center-align striped-light centered\"></table>\n              <br />\n              <center>\n                <button id=\"export-lookangles\" class=\"btn btn-ui waves-effect waves-light\">Export &#9658;</button>\n              </center>\n            </div>\n          </div>\n        </div>\n        <div id=\"lookanglesmultisite-menu\" class=\"side-menu-parent start-hidden text-select\">\n          <div id=\"lookanglesmultisite-content\" class=\"side-menu\">\n            <div class=\"row\">\n              <h5 class=\"center-align\">Multi-Sensor Look Angles</h5>\n              <table id=\"looksmultisite\" class=\"center-align striped-light centered\"></table>\n              <br />\n              <center>\n                <button id=\"export-multiSiteArray\" class=\"btn btn-ui waves-effect waves-light\">Export &#9658;</button>\n              </center>\n            </div>\n          </div>\n        </div>\n      `);\n    // Bottom Icon\n    $('#bottom-icons').append(keepTrackApi.html `\n        <div id=\"menu-sensor-list\" class=\"bmenu-item\">\n          <img\n            alt=\"radar\"\n            src=\"\" delayedsrc=${radarPng}/>\n          <span class=\"bmenu-title\">Sensors</span>\n          <div class=\"status-icon\"></div>\n        </div>\n        <div id=\"menu-customSensor\" class=\"bmenu-item\">\n          <img\n            alt=\"custom\"\n            src=\"\" delayedsrc=${customPng}/>\n          <span class=\"bmenu-title\">Custom Sensor</span>\n          <div class=\"status-icon\"></div>\n        </div>\n        <div id=\"menu-sensor-info\" class=\"bmenu-item bmenu-item-disabled\">\n          <img\n            alt=\"radiotower\"\n            src=\"\" delayedsrc=${radioTowerPng}/>\n          <span class=\"bmenu-title\">Sensor Info</span>\n          <div class=\"status-icon\"></div>\n        </div>\n        <div id=\"menu-lookangles\" class=\"bmenu-item bmenu-item-disabled\">\n          <img\n            alt=\"lookangles\"\n            src=\"\" delayedsrc=${lookanglesPng}/>\n          <span class=\"bmenu-title\">Look Angles</span>\n          <div class=\"status-icon\"></div>\n        </div>\n        <div id=\"menu-lookanglesmultisite\" class=\"bmenu-item bmenu-item-disabled\">\n          <img\n            alt=\"multisite\"\n            src=\"\" delayedsrc=${multiSitePng}/>\n          <span class=\"bmenu-title\">Multi-Site Looks</span>\n          <div class=\"status-icon\"></div>\n        </div>\n      `);\n    $('#lookanglesLength').on('change', function () {\n        satellite.lookanglesLength = parseInt($('#lookanglesLength').val());\n    });\n    $('#lookanglesInterval').on('change', function () {\n        satellite.lookanglesInterval = parseInt($('#lookanglesInterval').val());\n    });\n    $('#sensor-list-content > div > ul > .menu-selectable').on('click', (e) => {\n        if (e.target.id === 'reset-sensor-button')\n            return;\n        const sensorClick = e.currentTarget.dataset.sensor;\n        sensorListContentClick(sensorClick);\n    });\n    $('#customSensor').on('submit', (e) => {\n        e.preventDefault();\n    });\n    $('#reset-sensor-button').on('click', resetSensorButtonClick);\n    $('#cs-telescope').on('click', csTelescopeClick);\n    $('#cs-submit').on('click', customSensorSubmit);\n    $('#cs-clear').on('click', clearCustomSensors);\n    $('#cs-geolocation').on('click', uiManager.useCurrentGeolocationAsSensor);\n};\nexport const resetSensorSelected = () => {\n    const { satellite, sensorManager, colorSchemeManager, uiManager, satSet } = keepTrackApi.programs;\n    // Return to default settings with nothing 'inview'\n    satellite.setobs(null);\n    sensorManager.setSensor(null, null); // Pass staticNum to identify which sensor the user clicked\n    // uiManager.getsensorinfo();\n    if (settingsManager.currentColorScheme == colorSchemeManager.default) {\n        uiManager.legendMenuChange('default');\n    }\n    satSet.satCruncher.postMessage({\n        typ: 'sensor',\n        setlatlong: true,\n        resetObserverGd: true,\n        sensor: [sensorManager.defaultSensor],\n    });\n    satSet.satCruncher.postMessage({\n        isShowFOVBubble: 'reset',\n        isShowSurvFence: 'disable',\n    });\n    settingsManager.isFOVBubbleModeOn = false;\n    settingsManager.isShowSurvFence = false;\n    $('#menu-sensor-info').removeClass('bmenu-item-selected');\n    $('#menu-fov-bubble').removeClass('bmenu-item-selected');\n    $('#menu-surveillance').removeClass('bmenu-item-selected');\n    $('#menu-lookangles').removeClass('bmenu-item-selected');\n    $('#menu-planetarium').removeClass('bmenu-item-selected');\n    $('#menu-astronomy').removeClass('bmenu-item-selected');\n    $('#menu-sensor-info').addClass('bmenu-item-disabled');\n    $('#menu-fov-bubble').addClass('bmenu-item-disabled');\n    $('#menu-surveillance').addClass('bmenu-item-disabled');\n    $('#menu-lookangles').addClass('bmenu-item-disabled');\n    $('#menu-planetarium').addClass('bmenu-item-disabled');\n    $('#menu-astronomy').addClass('bmenu-item-disabled');\n    setTimeout(() => {\n        satSet.resetSatInView();\n        satSet.setColorScheme(settingsManager.currentColorScheme, true);\n    }, 2000);\n    keepTrackApi.methods.resetSensor();\n};\nexport const sensorListContentClick = (sensorClick) => {\n    const { adviceManager, sensorManager, uiManager, colorSchemeManager, mainCamera, timeManager } = keepTrackApi.programs;\n    if (settingsManager.plugins.topMenu)\n        adviceManager.adviceList.sensor();\n    if (typeof sensorClick == 'undefined') {\n        console.warn('The menu item was clicked but the menu was not defined.');\n        return;\n    }\n    switch (sensorClick) {\n        case 'cspocAll':\n            if (settingsManager.plugins.topMenu)\n                adviceManager.adviceList.cspocSensors();\n            sensorManager.setSensor('SSN');\n            break;\n        case 'mwAll':\n            if (settingsManager.plugins.topMenu)\n                adviceManager.adviceList.mwSensors();\n            sensorManager.setSensor('NATO-MW');\n            break;\n        case 'mdAll':\n            sensorManager.setSensor('MD-ALL');\n            break;\n        case 'llAll':\n            sensorManager.setSensor('LEO-LABS');\n            break;\n        case 'rusAll':\n            sensorManager.setSensor('RUS-ALL');\n            break;\n        default:\n            sensorManager.setSensor(sensorManager.sensorList[`${sensorClick}`]);\n            break;\n    }\n    uiManager.getsensorinfo();\n    try {\n        mainCamera.lookAtLatLon(sensorManager.selectedSensor.lat, sensorManager.selectedSensor.lon, sensorManager.selectedSensor.zoom, timeManager.selectedDate);\n    }\n    catch (_a) {\n        // TODO: More intentional conditional statement\n        // Multi-sensors break this\n    }\n    if (settingsManager.currentColorScheme == colorSchemeManager.default) {\n        uiManager.legendMenuChange('default');\n    }\n};\nexport const bottomMenuClick = (iconName) => {\n    const { uiManager, sensorManager, satSet, objectManager, satellite } = keepTrackApi.programs;\n    switch (iconName) {\n        case 'menu-sensor-list': // No Keyboard Commands\n            if (isSensorListMenuOpen) {\n                uiManager.hideSideMenus();\n                isSensorListMenuOpen = false;\n                break;\n            }\n            else {\n                if (settingsManager.isMobileModeEnabled)\n                    uiManager.searchToggle(false);\n                uiManager.hideSideMenus();\n                $('#sensor-list-menu').effect('slide', { direction: 'left', mode: 'show' }, 1000);\n                isSensorListMenuOpen = true;\n                $('#menu-sensor-list').addClass('bmenu-item-selected');\n                break;\n            }\n        case 'menu-sensor-info': // No Keyboard Commands\n            if (!sensorManager.checkSensorSelected()) {\n                // No Sensor Selected\n                if (settingsManager.plugins.topMenu)\n                    keepTrackApi.programs.adviceManager.adviceList.sensorInfoDisabled();\n                uiManager.toast(`Select a Sensor First!`, 'caution');\n                if (!$('#menu-sensor-info:animated').length) {\n                    $('#menu-sensor-info').effect('shake', {\n                        distance: 10,\n                    });\n                }\n                break;\n            }\n            if (isSensorInfoMenuOpen) {\n                uiManager.hideSideMenus();\n                isSensorInfoMenuOpen = false;\n                break;\n            }\n            else {\n                if (settingsManager.isMobileModeEnabled)\n                    uiManager.searchToggle(false);\n                uiManager.hideSideMenus();\n                uiManager.getsensorinfo();\n                $('#sensor-info-menu').effect('slide', { direction: 'left', mode: 'show' }, 1000);\n                isSensorInfoMenuOpen = true;\n                $('#menu-sensor-info').addClass('bmenu-item-selected');\n                break;\n            }\n        case 'menu-lookangles': // S\n            if (keepTrackApi.programs.sensorManager.isLookanglesMenuOpen) {\n                keepTrackApi.programs.sensorManager.isLookanglesMenuOpen = false;\n                uiManager.hideSideMenus();\n                break;\n            }\n            else {\n                const sat = satSet.getSatExtraOnly(objectManager.selectedSat);\n                if (!sensorManager.checkSensorSelected() || sat == null || sat.static || sat.missile || objectManager.selectedSat === -1) {\n                    // No Sensor or Satellite Selected\n                    if (settingsManager.plugins.topMenu)\n                        keepTrackApi.programs.adviceManager.adviceList.lookanglesDisabled();\n                    uiManager.toast(`Select a Satellite First!`, 'caution');\n                    if (!$('#menu-lookangles:animated').length) {\n                        $('#menu-lookangles').effect('shake', {\n                            distance: 10,\n                        });\n                    }\n                    break;\n                }\n                if (settingsManager.isMobileModeEnabled)\n                    uiManager.searchToggle(false);\n                uiManager.hideSideMenus();\n                keepTrackApi.programs.sensorManager.isLookanglesMenuOpen = true;\n                $('#loading-screen').fadeIn(1000, () => {\n                    satellite.getlookangles(sat);\n                    $('#menu-lookangles').addClass('bmenu-item-selected');\n                    $('#loading-screen').fadeOut('slow');\n                    $('#lookangles-menu').effect('slide', { direction: 'left', mode: 'show' }, 1000);\n                });\n                break;\n            }\n        case 'menu-lookanglesmultisite':\n            if (isLookanglesMultiSiteMenuOpen) {\n                isLookanglesMultiSiteMenuOpen = false;\n                uiManager.hideSideMenus();\n                break;\n            }\n            else {\n                if (objectManager.selectedSat === -1) {\n                    // No Satellite Selected\n                    if (settingsManager.plugins.topMenu)\n                        keepTrackApi.programs.adviceManager.adviceList.ssnLookanglesDisabled();\n                    uiManager.toast(`Select a Satellite First!`, 'caution');\n                    if (!$('#menu-lookanglesmultisite:animated').length) {\n                        $('#menu-lookanglesmultisite').effect('shake', {\n                            distance: 10,\n                        });\n                    }\n                    break;\n                }\n                if (settingsManager.isMobileModeEnabled)\n                    uiManager.searchToggle(false);\n                uiManager.hideSideMenus();\n                isLookanglesMultiSiteMenuOpen = true;\n                $('#menu-lookanglesmultisite').addClass('bmenu-item-selected');\n                if (objectManager.selectedSat !== -1) {\n                    $('#loading-screen').fadeIn(1000, () => {\n                        const sat = satSet.getSatExtraOnly(objectManager.selectedSat);\n                        satellite.getlookanglesMultiSite(sat);\n                        $('#loading-screen').fadeOut('slow');\n                        $('#lookanglesmultisite-menu').effect('slide', { direction: 'left', mode: 'show' }, 1000);\n                    });\n                }\n                break;\n            }\n        case 'menu-customSensor': // T\n            if (keepTrackApi.programs.sensorManager.isCustomSensorMenuOpen) {\n                keepTrackApi.programs.sensorManager.isCustomSensorMenuOpen = false;\n                uiManager.hideSideMenus();\n                break;\n            }\n            else {\n                if (settingsManager.isMobileModeEnabled)\n                    uiManager.searchToggle(false);\n                uiManager.hideSideMenus();\n                if (sensorManager.checkSensorSelected()) {\n                    $('#cs-lat').val(sensorManager.currentSensor[0].lat);\n                    $('#cs-lon').val(sensorManager.currentSensor[0].lon);\n                    $('#cs-hei').val(sensorManager.currentSensor[0].alt);\n                }\n                $('#customSensor-menu').effect('slide', { direction: 'left', mode: 'show' }, 1000);\n                keepTrackApi.programs.sensorManager.isCustomSensorMenuOpen = true;\n                $('#menu-customSensor').addClass('bmenu-item-selected');\n                break;\n            }\n    }\n};\nexport const init = () => {\n    const { sensorManager } = keepTrackApi.programs;\n    sensorManager.isCustomSensorMenuOpen = false;\n    sensorManager.isCustomSensorMenuOpen = false;\n    sensorManager.isLookanglesMenuOpen = false;\n    // Add HTML\n    keepTrackApi.register({\n        method: 'uiManagerInit',\n        cbName: 'sensor',\n        cb: uiManagerInit,\n    });\n    // Add JavaScript\n    keepTrackApi.register({\n        method: 'bottomMenuClick',\n        cbName: 'sensor',\n        cb: bottomMenuClick,\n    });\n    // Register satinfobox links\n    keepTrackApi.register({\n        method: 'selectSatData',\n        cbName: 'sensor',\n        cb: selectSatData,\n    });\n    keepTrackApi.register({\n        method: 'hideSideMenus',\n        cbName: 'sensor',\n        cb: hideSideMenus,\n    });\n    $('#sensor-list-menu').resizable({\n        handles: 'e',\n        stop: function () {\n            $(this).css('height', '');\n        },\n        maxWidth: 400,\n        minWidth: 280,\n    });\n};\nexport const selectSatData = () => {\n    const { satSet } = keepTrackApi.programs;\n    if (!sensorLinks) {\n        $('#sat-info-top-links').append(keepTrackApi.html `\n        <div id=\"sensors-in-fov-link\" class=\"link sat-infobox-links\">Show All Sensors with FOV...</div>\n      `);\n        $('#sensors-in-fov-link').on('click', () => {\n            Object.keys(keepTrackApi.programs.sensorManager.sensorList).forEach((key) => {\n                const sensor = keepTrackApi.programs.sensorManager.sensorList[key];\n                const sat = keepTrackApi.programs.satSet.getSat(keepTrackApi.programs.objectManager.selectedSat);\n                const tearr = sat.getTEARR(null, [sensor]);\n                if (tearr.inView) {\n                    keepTrackApi.programs.lineManager.create('sat6', [sat.id, satSet.getSensorFromSensorName(sensor.name)], 'g');\n                }\n            });\n        });\n        sensorLinks = true;\n    }\n};\nexport const hideSideMenus = () => {\n    $('#customSensor-menu').effect('slide', { direction: 'left', mode: 'hide' }, 1000);\n    $('#sensor-list-menu').effect('slide', { direction: 'left', mode: 'hide' }, 1000);\n    $('#sensor-info-menu').effect('slide', { direction: 'left', mode: 'hide' }, 1000);\n    $('#lookangles-menu').effect('slide', { direction: 'left', mode: 'hide' }, 1000);\n    $('#lookanglesmultisite-menu').effect('slide', { direction: 'left', mode: 'hide' }, 1000);\n    $('#menu-customSensor').removeClass('bmenu-item-selected');\n    $('#menu-sensor-list').removeClass('bmenu-item-selected');\n    $('#menu-sensor-info').removeClass('bmenu-item-selected');\n    $('#menu-lookangles').removeClass('bmenu-item-selected');\n    $('#menu-lookanglesmultisite').removeClass('bmenu-item-selected');\n    keepTrackApi.programs.sensorManager.isCustomSensorMenuOpen = false;\n    isSensorListMenuOpen = false;\n    isSensorInfoMenuOpen = false;\n    keepTrackApi.programs.sensorManager.isLookanglesMenuOpen = false;\n    isLookanglesMultiSiteMenuOpen = false;\n};\nexport const addCustomSensor = (sensor) => {\n    customSensors.push(sensor);\n    return customSensors;\n};\nexport const customSensorSubmit = () => {\n    const { sensorManager, satSet, satellite, mainCamera, timeManager, objectManager } = keepTrackApi.programs;\n    $('#menu-sensor-info').removeClass('bmenu-item-disabled');\n    $('#menu-fov-bubble').removeClass('bmenu-item-disabled');\n    $('#menu-surveillance').removeClass('bmenu-item-disabled');\n    $('#menu-planetarium').removeClass('bmenu-item-disabled');\n    $('#menu-astronomy').removeClass('bmenu-item-disabled');\n    $('#sensor-type').html($('#cs-type').val().replace(/</gu, '&lt;').replace(/>/gu, '&gt;'));\n    $('#sensor-info-title').html('Custom Sensor');\n    $('#sensor-country').html('Custom Sensor');\n    const lon = parseFloat($('#cs-lon').val());\n    const lat = parseFloat($('#cs-lat').val());\n    const alt = $('#cs-hei').val();\n    const sensorType = $('#cs-type').val();\n    const minaz = $('#cs-minaz').val();\n    const maxaz = $('#cs-maxaz').val();\n    const minel = $('#cs-minel').val();\n    const maxel = $('#cs-maxel').val();\n    const minrange = $('#cs-minrange').val();\n    const maxrange = $('#cs-maxrange').val();\n    addCustomSensor({\n        lat,\n        lon,\n        alt: parseFloat(alt),\n        obsminaz: parseFloat(minaz),\n        obsmaxaz: parseFloat(maxaz),\n        obsminel: parseFloat(minel),\n        obsmaxel: parseFloat(maxel),\n        obsminrange: parseFloat(minrange),\n        obsmaxrange: parseFloat(maxrange),\n        type: sensorType,\n    });\n    sensorManager.whichRadar = customSensors.length > 1 ? 'MULTI CUSTOM' : 'CUSTOM';\n    satSet.satCruncher.postMessage({\n        typ: 'sensor',\n        setlatlong: true,\n        sensor: customSensors,\n        multiSensor: customSensors.length > 1,\n    });\n    satellite.setobs(customSensors);\n    objectManager.setSelectedSat(-1);\n    satSet.setColorScheme(settingsManager.currentColorScheme, true);\n    if (customSensors.length === 1) {\n        if (maxrange > 6000) {\n            mainCamera.changeZoom('geo');\n        }\n        else {\n            mainCamera.changeZoom('leo');\n        }\n        mainCamera.camSnap(mainCamera.lat2pitch(lat), mainCamera.lon2yaw(lon, timeManager.selectedDate));\n    }\n};\n"],"names":[],"sourceRoot":""}