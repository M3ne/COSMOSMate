{"version":3,"file":"src_js_plugins_timeMachine_timeMachine_ts.3d75b3fe8dc5b6976dfc.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAA6D;AACL;AACjC;AAChB;AACP;AACA,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA,IAAI,6CAAC,yBAAyB,uEAAiB;AAC/C;AACA,uDAAuD,4DAAc,CAAC;AACtE;AACA;AACA;AACA;AACA,IAAI,6CAAC;AACL;AACO;AACP,YAAY,0DAA0D,EAAE,2EAAqB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY,6CAAC;AACb;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6CAAC;AACb;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,0DAA0D,EAAE,2EAAqB;AAC7F;AACA,aAAa,6GAAuD;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA,YAAY,2FAAqC,2BAA2B,KAAK;AACjF;AACA;AACA,4CAA4C,KAAK,OAAO,KAAK;AAC7D,YAAY,2FAAqC,2BAA2B,QAAQ;AACpF;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,WAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,uBAAuB,EAAE,2EAAqB;AAC1D,QAAQ,6CAAC;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,6CAAC;AACT;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://keeptrack.space/./src/js/plugins/timeMachine/timeMachine.ts"],"sourcesContent":["import timeMachinePng from '@app/img/icons/time-machine.png';\nimport { keepTrackApi } from '@app/js/api/keepTrackApi';\nimport $ from 'jquery';\nexport const init = () => {\n    // Add HTML\n    keepTrackApi.register({\n        method: 'uiManagerInit',\n        cbName: 'timeMachine',\n        cb: uiManagerInit,\n    });\n    // Add JavaScript\n    keepTrackApi.register({\n        method: 'bottomMenuClick',\n        cbName: 'timeMachine',\n        cb: bottomMenuClick,\n    });\n    keepTrackApi.register({\n        method: 'orbitManagerInit',\n        cbName: 'timeMachine',\n        cb: orbitManagerInit,\n    });\n};\nexport const uiManagerInit = () => {\n    // Bottom Icon\n    $('#bottom-icons').append(keepTrackApi.html `\n        <div id=\"menu-time-machine\" class=\"bmenu-item\">\n          <img alt=\"time-machine\" src=\"\" delayedsrc=\"${timeMachinePng}\" />\n          <span class=\"bmenu-title\">Time Machine</span>\n          <div class=\"status-icon\"></div>\n        </div>\n      `);\n    $('#time-machine-icon').on('click', timeMachineIconClick);\n};\nexport const bottomMenuClick = (iconName) => {\n    const { orbitManager, groupsManager, satSet, colorSchemeManager } = keepTrackApi.programs;\n    if (iconName === 'menu-time-machine') {\n        if (orbitManager.isTimeMachineRunning) {\n            // Merge to one variable?\n            orbitManager.isTimeMachineRunning = false;\n            orbitManager.isTimeMachineVisible = false;\n            settingsManager.colors.transparent = orbitManager.tempTransColor;\n            groupsManager.clearSelect();\n            satSet.setColorScheme(colorSchemeManager.default, true); // force color recalc\n            $('#menu-time-machine').removeClass('bmenu-item-selected');\n            return;\n        }\n        else {\n            // Merge to one variable?\n            orbitManager.isTimeMachineRunning = true;\n            orbitManager.isTimeMachineVisible = true;\n            $('#menu-time-machine').addClass('bmenu-item-selected');\n            orbitManager.historyOfSatellitesPlay();\n            return;\n        }\n    }\n};\nexport const orbitManagerInit = () => {\n    const { orbitManager, satSet, colorSchemeManager, groupsManager } = keepTrackApi.programs;\n    orbitManager.playNextSatellite = (runCount, year) => {\n        if (!keepTrackApi.programs.orbitManager.isTimeMachineVisible)\n            return;\n        // Kill all old async calls if run count updates\n        if (runCount !== orbitManager.historyOfSatellitesRunCount)\n            return;\n        const yearGroup = groupsManager.createGroup('yearOrLess', year);\n        groupsManager.selectGroup(yearGroup);\n        yearGroup.updateOrbits(orbitManager, orbitManager);\n        satSet.setColorScheme(colorSchemeManager.group, true); // force color recalc\n        if (year >= 59 && year < 100) {\n            keepTrackApi.programs.uiManager.toast(`Time Machine In Year 19${year}!`, 'normal');\n        }\n        else {\n            const yearStr = year < 10 ? `0${year}` : `${year}`;\n            keepTrackApi.programs.uiManager.toast(`Time Machine In Year 20${yearStr}!`, 'normal');\n        }\n        if (year == parseInt(new Date().getUTCFullYear().toString().slice(2, 4))) {\n            setTimeout(function () {\n                timeMachineRemoveSatellite(runCount, orbitManager, groupsManager, satSet, colorSchemeManager);\n            }, 10000); // Linger for 10 seconds\n        }\n    };\n    // Used to kill old async calls\n    orbitManager.historyOfSatellitesRunCount = 0;\n    orbitManager.historyOfSatellitesPlay = () => {\n        orbitManager.historyOfSatellitesRunCount++;\n        orbitManager.isTimeMachineRunning = true;\n        orbitManager.tempTransColor = settingsManager.colors.transparent;\n        settingsManager.colors.transparent = [0, 0, 0, 0];\n        for (let yy = 0; yy <= 200; yy++) {\n            let year = 59 + yy;\n            if (year >= 100)\n                year = year - 100;\n            setTimeout(\n            // eslint-disable-next-line no-loop-func\n            function (runCount) {\n                orbitManager.playNextSatellite(runCount, year);\n            }, settingsManager.timeMachineDelay * yy, orbitManager.historyOfSatellitesRunCount);\n            if (year == 20)\n                break;\n        }\n    };\n};\nexport const timeMachineIconClick = () => {\n    const { searchBox, uiManager } = keepTrackApi.programs;\n    if ($('#time-machine-menu').css('display') === 'block') {\n        uiManager.legendMenuChange('clear');\n    }\n    else {\n        uiManager.legendMenuChange('timeMachine');\n        searchBox.hideResults();\n        $('#search-results').hide();\n    }\n};\nexport const timeMachineRemoveSatellite = (runCount, orbitManager, groupsManager, satSet, colorSchemeManager) => {\n    if (runCount !== orbitManager.historyOfSatellitesRunCount)\n        return;\n    if (!orbitManager.isTimeMachineVisible)\n        return;\n    settingsManager.colors.transparent = orbitManager.tempTransColor;\n    orbitManager.isTimeMachineRunning = false;\n    groupsManager.clearSelect();\n    satSet.setColorScheme(colorSchemeManager.default, true);\n};\n"],"names":[],"sourceRoot":""}