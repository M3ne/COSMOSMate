{"version":3,"file":"src_js_plugins_updateSelectBox_updateSelectBoxCore_ts.5ea1d870845a261b011d.js","mappings":";;;;;;;;;;;;;;;;;AAAwD;AACE;AACnD;AACP;AACA,YAAY,kFAAkF,EAAE,2EAAqB;AACrH;AACA;AACA;AACA,YAAY,+GAAyD;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,CAAC;AACT;AACA;AACA,QAAQ,CAAC;AACT;AACA;AACA,QAAQ,CAAC;AACT;AACA;AACA,QAAQ,CAAC;AACT;AACA;AACA,IAAI,CAAC;AACL,8FAA8F,oGAA8C;AAC5I,QAAQ,gGAA0C;AAClD;AACA;AACA;AACA,QAAQ,CAAC;AACT,QAAQ,CAAC;AACT;AACA;AACA,QAAQ,CAAC;AACT;AACA;AACA;AACA,YAAY,CAAC,mEAAmE;AAChF,YAAY,CAAC;AACb,YAAY,CAAC;AACb,sHAAsH,0DAAO;AAC7H,YAAY,CAAC;AACb,YAAY,CAAC,oDAAoD,2DAAQ,4BAA4B;AACrG;AACA;AACA,YAAY,CAAC;AACb,YAAY,CAAC;AACb,YAAY,CAAC;AACb,YAAY,CAAC;AACb,YAAY,CAAC;AACb,YAAY,CAAC;AACb;AACA,YAAY,CAAC;AACb,YAAY,CAAC;AACb,YAAY,CAAC;AACb;AACA;AACA;AACA,QAAQ,CAAC;AACT,QAAQ,CAAC;AACT,QAAQ,CAAC;AACT,QAAQ,CAAC;AACT,QAAQ,CAAC;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,CAAC;AACb;AACA;AACA;AACA,QAAQ,CAAC;AACT;AACA;AACO;AACP;AACA,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL","sources":["webpack://keeptrack.space/./src/js/plugins/updateSelectBox/updateSelectBoxCore.ts"],"sourcesContent":["import { keepTrackApi } from '@app/js/api/keepTrackApi';\nimport { cKmPerMs, DEG2RAD } from '@app/js/lib/constants';\nexport const updateSelectBoxCoreCallback = (sat) => {\n    var _a;\n    const { satellite, missileManager, timeManager, objectManager, sensorManager, uiManager } = keepTrackApi.programs;\n    if (typeof sat === 'undefined' || sat == null)\n        throw new Error('updateSelectBoxCoreCallback: sat is undefined');\n    if (!sat.missile) {\n        if (keepTrackApi.programs.objectManager.isSensorManagerLoaded) {\n            sat.getTEARR();\n        }\n    }\n    else {\n        satellite.setTEARR(missileManager.getMissileTEARR(sat));\n    }\n    if (satellite.degreesLong(satellite.currentTEARR.lon) >= 0) {\n        $('#sat-longitude').html(satellite.degreesLong(satellite.currentTEARR.lon).toFixed(3) + '°E');\n    }\n    else {\n        $('#sat-longitude').html((satellite.degreesLong(satellite.currentTEARR.lon) * -1).toFixed(3) + '°W');\n    }\n    if (satellite.degreesLat(satellite.currentTEARR.lat) >= 0) {\n        $('#sat-latitude').html(satellite.degreesLat(satellite.currentTEARR.lat).toFixed(3) + '°N');\n    }\n    else {\n        $('#sat-latitude').html((satellite.degreesLat(satellite.currentTEARR.lat) * -1).toFixed(3) + '°S');\n    }\n    const jday = timeManager.getDayOfYear(timeManager.simulationTimeObj);\n    $('#jday').html(jday);\n    if (((_a = settingsManager.plugins) === null || _a === void 0 ? void 0 : _a.stereoMap) && keepTrackApi.programs.mapManager.isMapMenuOpen && timeManager.realTime > settingsManager.lastMapUpdateTime + 30000) {\n        keepTrackApi.programs.mapManager.updateMap();\n        settingsManager.lastMapUpdateTime = timeManager.realTime;\n    }\n    if (!sat.missile) {\n        $('#sat-altitude').html(sat.getAltitude().toFixed(2) + ' km');\n        $('#sat-velocity').html(sat.velocity.total.toFixed(2) + ' km/s');\n    }\n    else {\n        $('#sat-altitude').html(satellite.currentTEARR.alt.toFixed(2) + ' km');\n    }\n    if (objectManager.isSensorManagerLoaded) {\n        if (satellite.currentTEARR.inView) {\n            $('#sat-azimuth').html(satellite.currentTEARR.az.toFixed(0) + '°'); // Convert to Degrees\n            $('#sat-elevation').html(satellite.currentTEARR.el.toFixed(1) + '°');\n            $('#sat-range').html(satellite.currentTEARR.rng.toFixed(2) + ' km');\n            const beamwidthString = sensorManager.currentSensor[0].beamwidth ? (satellite.currentTEARR.rng * Math.sin(DEG2RAD * sensorManager.currentSensor[0].beamwidth)).toFixed(2) + ' km' : 'Unknown';\n            $('#sat-beamwidth').html(beamwidthString);\n            $('#sat-maxTmx').html(((satellite.currentTEARR.rng / cKmPerMs) * 2).toFixed(2) + ' ms'); // Time for RF to hit target and bounce back\n        }\n        else {\n            $('#sat-azimuth').html('Out of FOV');\n            $('#sat-azimuth').prop('title', 'Azimuth: ' + satellite.currentTEARR.az.toFixed(0) + '°');\n            $('#sat-elevation').html('Out of FOV');\n            $('#sat-elevation').prop('title', 'Elevation: ' + satellite.currentTEARR.el.toFixed(1) + '°');\n            $('#sat-range').html('Out of FOV');\n            $('#sat-range').prop('title', 'Range: ' + satellite.currentTEARR.rng.toFixed(2) + ' km');\n            const beamwidthString = sensorManager.currentSensor[0].beamwidth ? sensorManager.currentSensor[0].beamwidth + '°' : 'Unknown';\n            $('#sat-beamwidth').html('Out of FOV');\n            $('#sat-beamwidth').prop('title', beamwidthString);\n            $('#sat-maxTmx').html('Out of FOV');\n        }\n    }\n    else {\n        $('#sat-azimuth').parent().hide();\n        $('#sat-elevation').parent().hide();\n        $('#sat-range').parent().hide();\n        $('#sat-beamwidth').parent().hide();\n        $('#sat-maxTmx').parent().hide();\n    }\n    if (objectManager.isSensorManagerLoaded) {\n        if (sensorManager.checkSensorSelected()) {\n            // If we didn't just calculate next pass time for this satellite and sensor combination do it\n            if (objectManager.selectedSat !== uiManager.lastNextPassCalcSatId && sensorManager.currentSensor[0].shortName !== uiManager.lastNextPassCalcSensorId && !sat.missile) {\n                $('#sat-nextpass').html(satellite.nextpass(sat));\n                // IDEA: Code isInSun()\n                //sun.getXYZ();\n                //lineManager.create('ref',[sun.sunvar.position.x,sun.sunvar.position.y,sun.sunvar.position.z]);\n            }\n            uiManager.lastNextPassCalcSatId = objectManager.selectedSat;\n            uiManager.lastNextPassCalcSensorId = sensorManager.currentSensor[0].shortName;\n        }\n        else {\n            $('#sat-nextpass').html('Unavailable');\n        }\n    }\n    else {\n        $('#sat-nextpass').parent().hide();\n    }\n};\nexport const init = () => {\n    // Register updateSelectBox\n    keepTrackApi.register({\n        method: 'updateSelectBox',\n        cbName: 'updateSelectBoxCore',\n        cb: updateSelectBoxCoreCallback,\n    });\n};\n"],"names":[],"sourceRoot":""}