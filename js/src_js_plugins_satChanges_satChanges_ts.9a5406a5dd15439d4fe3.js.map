{"version":3,"file":"src_js_plugins_satChanges_satChanges_ts.9a5406a5dd15439d4fe3.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAwD;AACM;AACvC;AAC0B;AACjD;AACA,qFAA+B;AAC/B;AACA;AACO;AACP;AACA,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA,IAAI,6CAAC,uBAAuB,uEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6CAAC,yBAAyB,uEAAiB;AAC/C;AACA,kDAAkD,oDAAU,CAAC;AAC7D;AACA;AACA;AACA;AACA,IAAI,6CAAC;AACL;AACA;AACA,YAAY,6CAAC;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL,IAAI,6CAAC;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP,YAAY,uBAAuB,EAAE,2EAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAK;AACb,eAAe,eAAe;AAC9B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,QAAQ,6CAAC;AACT,MAAM;AACN;AACO;AACP,IAAI,6CAAC,oCAAoC,iCAAiC;AAC1E,IAAI,6CAAC;AACL;AACA;AACO;AACP;AACA,gBAAgB,YAAY,EAAE,2EAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6CAAC,oCAAoC,iCAAiC;AAClF;AACA;AACA,YAAY,6CAAC;AACb;AACA;AACA;AACA;AACO;AACP;AACA,YAAY,SAAS,EAAE,2EAAqB;AAC5C,oBAAoB,iBAAiB;AACrC;AACA;AACA,mBAAmB,4EAAY;AAC/B;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uCAAuC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb","sources":["webpack://keeptrack.space/./src/js/plugins/satChanges/satChanges.ts"],"sourcesContent":["import { keepTrackApi } from '@app/js/api/keepTrackApi';\nimport { dateFromJday } from '@app/js/timeManager/transforms';\nimport $ from 'jquery';\nimport satChngPng from '@app/img/icons/sats.png';\nlet issatChngMenuOpen = false;\nkeepTrackApi.programs.satChange = {\n    satChngTable: null,\n};\nexport const init = () => {\n    // Add HTML\n    keepTrackApi.register({\n        method: 'uiManagerInit',\n        cbName: 'satChanges',\n        cb: uiManagerInit,\n    });\n    // Add JavaScript\n    keepTrackApi.register({\n        method: 'bottomMenuClick',\n        cbName: 'satChanges',\n        cb: bottomMenuClick,\n    });\n    keepTrackApi.register({\n        method: 'hideSideMenus',\n        cbName: 'satChanges',\n        cb: hideSideMenus,\n    });\n};\nexport const uiManagerInit = () => {\n    // Side Menu\n    $('#left-menus').append(keepTrackApi.html `\n        <div id=\"satChng-menu\" class=\"side-menu-parent start-hidden text-select\">\n          <div id=\"satChng-content\" class=\"side-menu\">\n            <div class=\"row\">\n              <h5 class=\"center-align\">Interesting Movements</h5>\n              <table id=\"satChng-table\" class=\"center-align\"></table>\n            </div>\n          </div>\n        </div>\n      `);\n    // Bottom Icon\n    $('#bottom-icons').append(keepTrackApi.html `\n        <div id=\"menu-satChng\" class=\"bmenu-item\">\n          <img alt=\"satchng\" src=\"\" delayedsrc=\"${satChngPng}\" />\n          <span class=\"bmenu-title\">Satellite Changes</span>\n          <div class=\"status-icon\"></div>\n        </div>\n      `);\n    $('#satChng-menu').resizable({\n        handles: 'e',\n        stop: function () {\n            $(this).css('height', '');\n        },\n        maxWidth: 450,\n        minWidth: 280,\n    });\n    $('#satChng-menu').on('click', '.satChng-object', function (evt) {\n        // Might be better code for this.\n        const hiddenRow = evt.currentTarget.attributes.hiddenrow.value;\n        if (hiddenRow !== null) {\n            satChng(parseInt(hiddenRow));\n        }\n    });\n};\nexport const satChng = (row) => {\n    const { satChange, uiManager } = keepTrackApi.programs;\n    let satChngTable = satChange.satChngTable;\n    if (typeof row !== 'number')\n        throw new Error('Row must be a number');\n    if (row !== -1 && typeof satChngTable[row] === 'undefined')\n        throw new Error('Row does not exist');\n    if (row === -1 && (satChngTable === null || satChngTable === void 0 ? void 0 : satChngTable.length) === 0) {\n        // Only generate the table if receiving the -1 argument for the first time\n        $.get('./analysis/satchng.json?v=' + settingsManager.versionNumber).done((resp) => {\n            ({ satChngTable } = getSatChngJson(resp));\n            satChange.satChngTable = satChngTable;\n        });\n    }\n    if (row !== -1) {\n        // If an object was selected from the menu\n        if (!satChngTable[row].SCC)\n            return;\n        uiManager.doSearch(satChngTable[row].SCC.toString()); // Actually perform the search of the two objects\n        $('#anal-sat').val(satChngTable[row].SCC.toString());\n    } // If a row was selected\n};\nexport const hideSideMenus = () => {\n    $('#satChng-menu').effect('slide', { direction: 'left', mode: 'hide' }, 1000);\n    $('#menu-satChng').removeClass('bmenu-item-selected');\n    issatChngMenuOpen = false;\n};\nexport const bottomMenuClick = (iconName) => {\n    if (iconName === 'menu-satChng') {\n        const { uiManager } = keepTrackApi.programs;\n        if (issatChngMenuOpen) {\n            issatChngMenuOpen = false;\n            uiManager.hideSideMenus();\n            return;\n        }\n        else {\n            if (settingsManager.isMobileModeEnabled)\n                uiManager.searchToggle(false);\n            uiManager.hideSideMenus();\n            $('#satChng-menu').effect('slide', { direction: 'left', mode: 'show' }, 1000);\n            issatChngMenuOpen = true;\n            satChng(-1);\n            $('#menu-satChng').addClass('bmenu-item-selected');\n            return;\n        }\n    }\n};\nexport const getSatChngJson = (resp) => {\n    resp = [...new Set(resp)];\n    const { satSet } = keepTrackApi.programs;\n    for (let i = 0; i < resp.length; i++) {\n        const prefix = resp[i].year > 50 ? '19' : '20';\n        const year = parseInt(prefix + resp[i].year.toString());\n        let date = dateFromJday(year, resp[i].day);\n        date = new Date(date.getTime() + (resp[i].day % 1) * 1440 * 60000);\n        resp[i].date = date;\n    }\n    const satChngTable = resp;\n    // satChng Menu\n    const tbl = document.getElementById('satChng-table'); // Identify the table to update\n    tbl.innerHTML = ''; // Clear the table from old object data\n    let tr = tbl.insertRow();\n    let tdT = tr.insertCell();\n    tdT.appendChild(document.createTextNode('Time'));\n    tdT.setAttribute('style', 'text-decoration: underline');\n    let tdSat = tr.insertCell();\n    tdSat.appendChild(document.createTextNode('Sat'));\n    tdSat.setAttribute('style', 'text-decoration: underline');\n    let tdInc = tr.insertCell();\n    tdInc.appendChild(document.createTextNode('Inc'));\n    tdInc.setAttribute('style', 'text-decoration: underline');\n    let tdPer = tr.insertCell();\n    tdPer.appendChild(document.createTextNode('Per'));\n    tdPer.setAttribute('style', 'text-decoration: underline');\n    // 20 rows max\n    for (let i = 0; i < Math.min(satChngTable.length, 20); i++) {\n        const sat = satSet.getSat(satSet.getIdFromObjNum(satChngTable[i].SCC));\n        // Skip Decays\n        if (sat === null)\n            continue;\n        tr = tbl.insertRow();\n        tr.setAttribute('class', 'satChng-object link');\n        tr.setAttribute('hiddenrow', i.toString());\n        tdT = tr.insertCell();\n        const dateStr = satChngTable[i].date.toJSON();\n        let timeTextStr = '';\n        for (let iText = 0; iText < 20; iText++) {\n            if (iText < 10)\n                timeTextStr += dateStr[iText];\n            if (iText === 10)\n                timeTextStr += ' ';\n            if (iText > 11)\n                timeTextStr += dateStr[iText - 1];\n        }\n        tdT.appendChild(document.createTextNode(timeTextStr));\n        tdSat = tr.insertCell();\n        tdSat.appendChild(document.createTextNode(satChngTable[i].SCC.toString()));\n        tdInc = tr.insertCell();\n        tdInc.appendChild(document.createTextNode(satChngTable[i].inc.toFixed(2)));\n        tdPer = tr.insertCell();\n        const deltaMeanMo = satChngTable[i].meanmo;\n        const origPer = 1440 / (sat.meanMotion + deltaMeanMo);\n        const perDelta = 1440 / sat.meanMotion - origPer;\n        tdPer.appendChild(document.createTextNode(perDelta.toFixed(2)));\n    }\n    return { resp, satChngTable };\n};\n"],"names":[],"sourceRoot":""}