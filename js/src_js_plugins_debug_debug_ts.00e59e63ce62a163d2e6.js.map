{"version":3,"file":"src_js_plugins_debug_debug_ts.00e59e63ce62a163d2e6.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACwC;AACjB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP,qCAAqC,wDAAwB;AAC7D;AACA;AACA;AACA,KAAK;AACL,sCAAsC,wDAAwB;AAC9D;AACA;AACA,KAAK;AACL,iCAAiC,gEAAgC;AACjE;AACA;AACA,KAAK;AACL,IAAI,oDACgB;AACpB;AACA;AACA;AACA,YAAY,wDAAwB;AACpC,YAAY,wDAAwB;AACpC,YAAY,2DAA2B;AACvC,YAAY,sDAAsB;AAClC;AACA,kBAAkB,sDAAsB,IAAI,oDAAoB,IAAI,sDAAsB,GAAG,iBAAiB;AAC9G;AACA,KAAK;AACL;AACA;AACO;AACP,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA","sources":["webpack://keeptrack.space/./src/js/plugins/debug/debug.ts"],"sourcesContent":["// @ts-ignore-next-line\nimport * as gremlins from 'gremlins.js';\nimport $ from 'jquery';\n/*\n * Returns a random integer between min (inclusive) and max (inclusive).\n * The value is no lower than min (or the next integer greater than min\n * if min isn't an integer) and no greater than max (or the next integer\n * lower than max if max isn't an integer).\n * Using Math.round() will give you a non-uniform distribution!\n */\nexport const getRandomInt = (min, max) => {\n    min = Number.isNaN(min) ? 0 : Math.ceil(min);\n    max = Number.isNaN(max) ? 100 : Math.floor(max);\n    // The use of Math.random here is for debugging purposes only.\n    // It is not used in any cryptographic way.\n    return Math.floor(Math.random() * (max - min + 1)) + min; // NOSONAR\n};\nexport const defaultPositionSelector = () => {\n    const x = getRandomInt(0, Math.max(0, document.documentElement.clientWidth - 1));\n    const y = getRandomInt(Math.max(0, document.documentElement.clientHeight - 100), Math.max(0, document.documentElement.clientHeight - 1));\n    return [x, y];\n};\nexport const canClick = (element) => {\n    if (typeof element.parentElement == 'undefined' || element.parentElement == null)\n        return null;\n    return element.parentElement.className === 'bmenu-item';\n};\nexport const startGremlins = () => {\n    const bottomMenuGremlinClicker = gremlins.species.clicker({\n        // Click only if parent is has class test-class\n        canClick: canClick,\n        defaultPositionSelector: defaultPositionSelector,\n    });\n    const bottomMenuGremlinScroller = gremlins.species.toucher({\n        touchTypes: ['gesture'],\n        defaultPositionSelector: defaultPositionSelector,\n    });\n    const distributionStrategy = gremlins.strategies.distribution({\n        distribution: [0.3, 0.3, 0.1, 0.1, 0.1, 0.1],\n        delay: 5, // wait 5 ms between each action\n    });\n    gremlins\n        .createHorde({\n        species: [\n            bottomMenuGremlinClicker,\n            bottomMenuGremlinScroller,\n            gremlins.species.clicker(),\n            gremlins.species.toucher(),\n            gremlins.species.formFiller(),\n            gremlins.species.typer(),\n        ],\n        mogwais: [gremlins.mogwais.alert(), gremlins.mogwais.fps(), gremlins.mogwais.gizmo({ maxErrors: 1000 })],\n        strategies: [distributionStrategy],\n    })\n        .unleash();\n};\nexport const runGremlins = () => {\n    $('#nav-footer').height(200);\n    $('#nav-footer-toggle').hide();\n    $('#bottom-icons-container').height(200);\n    $('#bottom-icons').height(200);\n    startGremlins();\n};\n//Global Debug Manager\nexport const init = () => {\n    const db = {\n        gremlinsSettings: {\n            nb: 100000,\n            delay: 5,\n        },\n        gremlins: runGremlins,\n    };\n    settingsManager.db = db;\n};\n"],"names":[],"sourceRoot":""}