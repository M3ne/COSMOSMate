{"version":3,"file":"src_js_plugins_shortTermFences_shortTermFences_ts.4e77f16dd1ef9edd44d9.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAkD;AACM;AACjC;AAC4B;AACnD;AACA;AACO;AACP;AACA,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL,IAAI,2EAAqB;AACzB;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA,IAAI,6CAAC,uBAAuB,uEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+IAA+I;AAC/I;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6CAAC,yBAAyB,uEAAiB;AAC/C;AACA;AACA;AACA,8BAA8B,sDAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2EAAqB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,IAAI,6CAAC;AACL;AACO;AACP,YAAY,2BAA2B,EAAE,2EAAqB;AAC9D;AACA;AACA;AACA;AACA,iBAAiB,6CAAC;AAClB,gBAAgB,6CAAC;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6CAAC,gCAAgC,iCAAiC;AAC9E;AACA,YAAY,6CAAC;AACb;AACA;AACA;AACA;AACO;AACP,IAAI,6CAAC;AACL;AACO;AACP,IAAI,6CAAC,gCAAgC,iCAAiC;AACtE,IAAI,6CAAC;AACL;AACA;AACO;AACP;AACA,QAAQ,6CAAC,+BAA+B,uEAAiB;AACzD;AACA;AACA,QAAQ,6CAAC;AACT;AACA;AACO;AACP;AACA,QAAQ,6CAAC;AACT;AACA;AACA,QAAQ,6CAAC;AACT;AACA;AACO;AACP,YAAY,8CAA8C,EAAE,2EAAqB;AACjF;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA,0BAA0B,6CAAC;AAC3B,6BAA6B,6CAAC;AAC9B,0BAA0B,6CAAC;AAC3B,6BAA6B,6CAAC;AAC9B,2BAA2B,6CAAC;AAC5B,8BAA8B,6CAAC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+DAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,6CAAC;AACL,IAAI,mGAA6C;AACjD;AACO;AACP,YAAY,6DAA6D,EAAE,2EAAqB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL,IAAI,6CAAC;AACL;AACA,IAAI,6CAAC,gCAAgC,iCAAiC;AACtE;AACA,IAAI,6CAAC;AACL","sources":["webpack://keeptrack.space/./src/js/plugins/shortTermFences/shortTermFences.ts"],"sourcesContent":["import searchPng from '@app/img/icons/search.png';\nimport { keepTrackApi } from '@app/js/api/keepTrackApi';\nimport $ from 'jquery';\nimport { addCustomSensor } from '../sensor/sensor';\nlet isStfMenuOpen = false;\nlet stfInfoLinks = false;\nexport const init = () => {\n    // Add HTML\n    keepTrackApi.register({\n        method: 'uiManagerInit',\n        cbName: 'shortTermFences',\n        cb: () => uiManagerInit(),\n    });\n    // Add JavaScript\n    keepTrackApi.register({\n        method: 'bottomMenuClick',\n        cbName: 'shortTermFences',\n        cb: (iconName) => bottomMenuClick(iconName),\n    });\n    keepTrackApi.register({\n        method: 'resetSensor',\n        cbName: 'shortTermFences',\n        cb: () => resetSensor(),\n    });\n    keepTrackApi.register({\n        method: 'setSensor',\n        cbName: 'shortTermFences',\n        cb: (sensor, id) => setSensor(sensor, id),\n    });\n    keepTrackApi.register({\n        method: 'hideSideMenus',\n        cbName: 'shortTermFences',\n        cb: () => hideSideMenus(),\n    });\n};\nexport const uiManagerInit = () => {\n    // Side Menu\n    $('#left-menus').append(keepTrackApi.html `\n      <div id=\"stf-menu\" class=\"side-menu-parent start-hidden text-select\">\n        <div id=\"stf-content\" class=\"side-menu\">\n          <div class=\"row\">\n            <h5 class=\"center-align\">Short Term Fence</h5>\n            <form id=\"stfForm\">\n              <div id=\"stf-az-div\" class=\" input-field col s12 tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Search Center Azimuth Point in degrees (ex: 50)\">\n                <input id=\"stf-az\" type=\"text\" value=\"50\" />\n                <label for=\"stf-az\" class=\"active\">Center Azimuth</label>\n              </div>\n              <div id=\"stf-azExt-div\" class=\" input-field col s12 tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Total Extent Outside of Center Azimuth in degrees (ex: 4)\">\n                <input id=\"stf-azExt\" type=\"text\" value=\"4\" />\n                <label for=\"stf-azExt\" class=\"active\">Azimuth Extent</label>\n              </div>\n              <div id=\"stf-el-div\" class=\" input-field col s12 tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Search Center Elevation Point in degrees (ex: 20)\">\n                <input id=\"stf-el\" type=\"text\" value=\"20\" />\n                <label for=\"stf-el\" class=\"active\">Center Elevation</label>\n              </div>\n              <div id=\"stf-elExt-div\" class=\" input-field col s12 tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Total Extent Outside of Center Elevation in degrees (ex: 4)\">\n                <input id=\"stf-elExt\" type=\"text\" value=\"4\" />\n                <label for=\"stf-elExt\" class=\"active\">Elevation Extent</label>\n              </div>\n              <div id=\"stf-rng-div\" class=\" input-field col s12 tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Search Center Range Point in kilometers (ex: 1000)\">\n                <input id=\"stf-rng\" type=\"text\" value=\"1000\" />\n                <label for=\"stf-rng\" class=\"active\">Center Range</label>\n              </div>\n              <div id=\"stf-rngExt-div\" class=\" input-field col s12 tooltipped\" data-position=\"right\" data-delay=\"50\" data-tooltip=\"Total Extent Outside of Center Range in kilometers (ex: 100)\">\n                <input id=\"stf-rngExt\" type=\"text\" value=\"100\" />\n                <label for=\"stf-rngExt\" class=\"active\">Range Extent</label>\n              </div>\n              <div class=\"center-align\">\n                <button id=\"stf-submit\" class=\"btn btn-ui waves-effect waves-light\" type=\"submit\" name=\"action\">Create Short Term Fence &#9658;</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    `);\n    // Bottom Icon\n    $('#bottom-icons').append(keepTrackApi.html `\n      <div id=\"menu-stf\" class=\"bmenu-item\">\n        <img\n          alt=\"stf\"\n          src=\"\" delayedsrc=${searchPng}\n        />\n        <span class=\"bmenu-title\">Short Term Fence</span>\n        <div class=\"status-icon\"></div>\n      </div>\n    `);\n    // Register orbital element data\n    keepTrackApi.register({\n        method: 'selectSatData',\n        cbName: 'stfInfoTopLinks',\n        cb: () => {\n            selectSatData(stfInfoLinks);\n            stfInfoLinks = true;\n        },\n    });\n    $('#stfForm').on('submit', stfFormOnSubmit);\n};\nexport const bottomMenuClick = (iconName) => {\n    const { sensorManager, uiManager } = keepTrackApi.programs;\n    if (iconName === 'menu-stf') {\n        if (!sensorManager.checkSensorSelected()) {\n            // No Sensor Selected\n            uiManager.toast(`Select a Sensor First!`, 'caution', true);\n            if (!$('#menu-stf:animated').length) {\n                $('#menu-stf').effect('shake', {\n                    distance: 10,\n                });\n            }\n            return;\n        }\n        if (isStfMenuOpen) {\n            uiManager.hideSideMenus();\n            isStfMenuOpen = false;\n            return;\n        }\n        else {\n            uiManager.hideSideMenus();\n            $('#stf-menu').effect('slide', { direction: 'left', mode: 'show' }, 1000);\n            isStfMenuOpen = true;\n            $('#menu-stf').addClass('bmenu-item-selected');\n            return;\n        }\n    }\n};\nexport const resetSensor = () => {\n    $('#menu-stf').addClass('bmenu-item-disabled');\n};\nexport const hideSideMenus = () => {\n    $('#stf-menu').effect('slide', { direction: 'left', mode: 'hide' }, 1000);\n    $('#menu-stf').removeClass('bmenu-item-selected');\n    isStfMenuOpen = false;\n};\nexport const selectSatData = (isShowStfLink) => {\n    if (!isShowStfLink) {\n        $('#sat-info-top-links').append(keepTrackApi.html `\n        <div id=\"stf-on-object-link\" class=\"link sat-infobox-links\">Build Short Term Fence on this object...</div>\n      `);\n        $('#stf-on-object-link').on('click', stfOnObjectLinkClick);\n    }\n};\nexport const setSensor = (sensor, id) => {\n    if (sensor == null && id == null) {\n        $('#menu-stf').addClass('bmenu-item-disabled');\n    }\n    else {\n        $('#menu-stf').removeClass('bmenu-item-disabled');\n    }\n};\nexport const stfFormOnSubmit = (e) => {\n    const { sensorManager, satellite, satSet, uiManager } = keepTrackApi.programs;\n    e.preventDefault();\n    if (!sensorManager.checkSensorSelected()) {\n        uiManager.toast(`Select a Sensor First!`, 'caution', true);\n        return;\n    }\n    const { lat, lon, alt } = sensorManager.currentSensor[0];\n    const sensorType = 'Short Range Fence';\n    // Multiply everything by 1 to convert string to number\n    const az = parseFloat($('#stf-az').val());\n    const azExt = parseFloat($('#stf-azExt').val());\n    const el = parseFloat($('#stf-el').val());\n    const elExt = parseFloat($('#stf-elExt').val());\n    const rng = parseFloat($('#stf-rng').val());\n    const rngExt = parseFloat($('#stf-rngExt').val());\n    const minaz = az - azExt < 0 ? az - azExt + 360 : az - azExt;\n    const maxaz = az + azExt > 360 ? az + azExt - 360 : az + azExt;\n    const minel = el - elExt;\n    const maxel = el + elExt;\n    const minrange = rng - rngExt;\n    const maxrange = rng + rngExt;\n    const stfSensor = {\n        lat,\n        lon,\n        alt,\n        obsminaz: minaz,\n        obsmaxaz: maxaz,\n        obsminel: minel,\n        obsmaxel: maxel,\n        obsminrange: minrange,\n        obsmaxrange: maxrange,\n        type: sensorType,\n    };\n    const customSensors = addCustomSensor(stfSensor);\n    sensorManager.whichRadar = customSensors.length > 1 ? 'MULTI CUSTOM' : 'CUSTOM';\n    satSet.satCruncher.postMessage({\n        typ: 'sensor',\n        setlatlong: true,\n        sensor: customSensors,\n        multiSensor: customSensors.length > 1,\n    });\n    satellite.setobs(customSensors);\n    $('#sensor-selected').text('Short Term Fence');\n    keepTrackApi.programs.sensorFov.enableFovView();\n};\nexport const stfOnObjectLinkClick = () => {\n    const { satellite, uiManager, sensorManager, objectManager, satSet } = keepTrackApi.programs;\n    if (!sensorManager.checkSensorSelected()) {\n        // No Sensor Selected\n        uiManager.toast(`Select a Sensor First!`, 'caution', true);\n        return;\n    }\n    // Update TEARR\n    satellite.getTEARR(satSet.getSat(objectManager.selectedSat));\n    $('#stf-az').val(satellite.currentTEARR.az.toFixed(1));\n    $('#stf-el').val(satellite.currentTEARR.el.toFixed(1));\n    $('#stf-rng').val(satellite.currentTEARR.rng.toFixed(1));\n    uiManager.hideSideMenus();\n    $('#stf-menu').effect('slide', { direction: 'left', mode: 'show' }, 1000);\n    isStfMenuOpen = true;\n    $('#menu-stf').addClass('bmenu-item-selected');\n};\n"],"names":[],"sourceRoot":""}